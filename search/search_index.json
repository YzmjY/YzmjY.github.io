{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stemmer"]},"docs":[{"location":"blog/","title":"\u7b14\u8bb0","text":""},{"location":"blog/tags/","title":"Tags","text":""},{"location":"blog/2024/11/24/c-concept/","title":"C++: Concept","text":"<p>Concept \u662f CPP20 \u4e2d\u65b0\u589e\u7684\u6982\u5ff5\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2a\u7c7b\u578b\u662f\u5426\u6ee1\u8db3\u67d0\u4e2a\u7279\u5b9a\u7684\u6761\u4ef6\u3002\u5728 C++20 \u4e4b\u524d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\u6a21\u677f\u5143\u7f16\u7a0b\u6765\u5b9e\u73b0\u7c7b\u4f3c\u7684\u529f\u80fd(SFINAE)\uff0c\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u6bd4\u8f83\u7e41\u7410\uff0c\u800c\u4e14\u5bb9\u6613\u51fa\u9519\u3002\u501f\u52a9 Concept\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u7b80\u6d01\u5730\u5b9e\u73b0\u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u4e14\u62a5\u9519\u63d0\u793a\u66f4\u52a0\u53cb\u597d\u3002</p>"},{"location":"blog/2024/11/24/c-concept/#sfinae","title":"SFINAE","text":"<p>SFINAE(Substitution Failure Is Not An Error)\u662f\u4e00\u79cd\u6a21\u677f\u5143\u7f16\u7a0b\u6280\u672f\uff0c\u5b83\u5141\u8bb8\u7f16\u8bd1\u5668\u5728\u6a21\u677f\u5b9e\u4f8b\u5316\u65f6\u68c0\u67e5\u7c7b\u578b\u662f\u5426\u6ee1\u8db3\u7279\u5b9a\u7684\u6761\u4ef6\u3002\u5982\u679c\u7c7b\u578b\u4e0d\u6ee1\u8db3\u6761\u4ef6\uff0c\u7f16\u8bd1\u5668\u4f1a\u5ffd\u7565\u8be5\u5b9e\u4f8b\u5316\uff0c\u4ece\u800c\u907f\u514d\u7f16\u8bd1\u9519\u8bef\u3002 SFINAE \u7684\u5b9e\u73b0\u65b9\u5f0f\u901a\u5e38\u662f\u4f7f\u7528\u4e00\u4e2a\u7279\u5316\u7248\u672c\u7684\u6a21\u677f\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\u4e3a\u5f85\u68c0\u67e5\u7684\u7c7b\u578b\uff0c\u8fd4\u56de\u7c7b\u578b\u4e3a void\u3002\u5982\u679c\u8be5\u51fd\u6570\u7684\u5b9e\u4f8b\u5316\u6210\u529f\uff0c\u5219\u8bf4\u660e\u7c7b\u578b\u6ee1\u8db3\u6761\u4ef6\uff0c\u5426\u5219\u4e0d\u6ee1\u8db3\u6761\u4ef6\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;type_traits&gt;\n#include &lt;vector&gt;\n\n// SFINAE\u6d4b\u8bd5: \u4e00\u4e2a\u8f85\u52a9\u7c7b\u578b\uff08helper type\uff09\ntemplate&lt;typename T, typename = void&gt;\nstruct HasSize : std::false_type {};\ni\n// \u5bf9\u4e8e\u6709.size()\u6210\u5458\u51fd\u6570\u7684\u7c7b\u578b\u7279\u5316\ntemplate&lt;typename T&gt;\nstruct HasSize&lt;T, std::void_t&lt;decltype(std::declval&lt;T&gt;().size())&gt;&gt; : std::true_type {};\n\n// \u4ec5\u63a5\u53d7\u5177\u6709.size()\u6210\u5458\u51fd\u6570\u7684\u7c7b\u578b\u7684\u51fd\u6570\ntemplate&lt;typename T&gt;\ntypename std::enable_if&lt;HasSize&lt;T&gt;::value, void&gt;::type printSize(const T&amp; container) {\n    std::cout &lt;&lt; \"Size: \" &lt;&lt; container.size() &lt;&lt; std::endl;\n}\n\n// \u91cd\u8f7d\u7684\u7248\u672c\uff0c\u7528\u4e8e\u90a3\u4e9b\u4e0d\u5177\u6709.size()\u6210\u5458\u51fd\u6570\u7684\u7c7b\u578b\nvoid printSize(...) {\n    std::cout &lt;&lt; \"Type does not have a size.\" &lt;&lt; std::endl;\n}\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 3};\n    int arr[3] = {1, 2, 3};\n\n    printSize(vec); // \u6b63\u786e: vector\u6709.size()\u6210\u5458\u51fd\u6570\n    printSize(arr); // \u8f93\u51fa: Type does not have a size.\n    return 0;\n}\n</code></pre> <p>\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u8f85\u52a9\u7c7b\u578b<code>HasSize</code>\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b\u53c2\u6570<code>T</code>\u548c\u4e00\u4e2a\u53ef\u9009\u7684\u7c7b\u578b\u53c2\u6570<code>U</code>\u3002\u5982\u679c<code>U</code>\u6ca1\u6709\u88ab\u6307\u5b9a\uff0c\u5219\u9ed8\u8ba4\u4e3a<code>void</code>\u3002<code>HasSize</code>\u662f\u4e00\u4e2a\u6a21\u677f\u7c7b\uff0c\u5b83\u6709\u4e00\u4e2a\u6210\u5458\u7c7b\u578b<code>value</code>\uff0c\u8868\u793a\u7c7b\u578b<code>T</code>\u662f\u5426\u5177\u6709<code>.size()</code>\u6210\u5458\u51fd\u6570\u3002 \u540c\u65f6\u5b9a\u4e49\u4e86\u4e00\u4e2a<code>printSize</code>\u51fd\u6570\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u7c7b\u578b\u4e3a<code>T</code>\u7684\u53c2\u6570\u3002\u5982\u679c\u7c7b\u578b<code>T</code>\u5177\u6709<code>.size()</code>\u6210\u5458\u51fd\u6570\uff0c\u5219\u4f7f\u7528<code>std::enable_if</code>\u6765\u542f\u7528\u8be5\u91cd\u8f7d\u3002\u5982\u679c\u7c7b\u578b<code>T</code>\u4e0d\u5177\u6709<code>.size()</code>\u6210\u5458\u51fd\u6570\uff0c\u5219\u4f7f\u7528<code>...</code>\u53c2\u6570\u5305\u5339\u914d\u6765\u542f\u7528\u53e6\u4e00\u4e2a\u91cd\u8f7d\u3002</p> <p><code>std::enable_if</code>\u662f\u4e00\u4e2a\u5728 C++11 \u4e2d\u5f15\u5165\u7684\u7c7b\u578b triat\uff0c\u5b83\u57fa\u4e8e\u4e00\u4e2a\u7f16\u8bd1\u65f6\u5e03\u5c14\u8868\u8fbe\u5f0f\uff0c\u80fd\u591f\u5728\u6ee1\u8db3\u6761\u4ef6\u65f6\u542f\u7528\u67d0\u4e2a\u6a21\u677f\u7279\u5316\u6216\u51fd\u6570\u91cd\u8f7d\u3002\u82e5\u6761\u4ef6\u4e3a\u771f\uff08\u5373\uff0c\u8868\u8fbe\u5f0f\u4e3a true\uff09\uff0c<code>std::enable_if</code> \u5c06\u6709\u4e00\u4e2a\u540d\u4e3a <code>type</code> \u7684\u6210\u5458\u5b9a\u4e49\uff0c\u5176\u7c7b\u578b\u662f\u5176\u7b2c\u4e8c\u4e2a\u6a21\u677f\u53c2\u6570\uff08\u9ed8\u8ba4\u4e3a <code>void</code>\uff09\u3002\u5982\u679c\u6761\u4ef6\u4e3a\u5047\uff08\u5373\uff0c\u8868\u8fbe\u5f0f\u4e3a false\uff09\uff0c\u5219 std::enable_if \u6ca1\u6709 <code>type</code> \u6210\u5458\uff0c\u5bfc\u81f4\u66ff\u6362\u5931\u8d25\uff0c\u8fd9\u4e5f\u662f\u57fa\u4e8e <code>SFINAE</code> \u539f\u5219\u5b9e\u73b0\u7684\u3002</p>"},{"location":"blog/2024/11/24/c-concept/#concept","title":"Concept","text":"<p>\u6709\u4e86 Concept\uff0c\u6211\u4eec\u53ef\u4ee5\u66f4\u52a0\u7b80\u6d01\u5730\u5b9e\u73b0\u7c7b\u4f3c\u7684\u529f\u80fd\u3002\u6539\u5199\u5982\u4e0a\u4ee3\u7801\uff0c\u4f7f\u7528 Concept \u6765\u5b9e\u73b0\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;concepts&gt;\n\n// \u5b9a\u4e49\u4e00\u4e2a Concept\uff0c\u68c0\u67e5\u7c7b\u578b T \u662f\u5426\u5177\u6709 .size() \u6210\u5458\u51fd\u6570\ntemplate&lt;typename T&gt;\nconcept HasSize = requires(T t) {\n    { t.size() } -&gt; std::convertible_to&lt;std::size_t&gt;;\n};\n\n// \u4f7f\u7528 HasSize concept \u7684 printSize \u7248\u672c\uff0c\u4ec5\u63a5\u53d7\u5177\u6709 .size() \u6210\u5458\u51fd\u6570\u7684\u7c7b\u578b\ntemplate&lt;typename T&gt;\nrequires HasSize&lt;T&gt;\nvoid printSize(const T&amp; container) {\n    std::cout &lt;&lt; \"Size: \" &lt;&lt; container.size() &lt;&lt; std::endl;\n}\n\n// \u91cd\u8f7d\u7684\u7248\u672c\uff0c\u7528\u4e8e\u6240\u6709\u4e0d\u6ee1\u8db3 HasSize concept \u7684\u7c7b\u578b\nvoid printSize(...) {\n    std::cout &lt;&lt; \"Type does not have a size.\" &lt;&lt; std::endl;\n}\n\nint main() {\n    std::vector&lt;int&gt; vec = {1, 2, 3};\n    int arr[3] = {1, 2, 3};\n\n    printSize(vec); // \u6b63\u786e: vector \u6709 .size() \u6210\u5458\u51fd\u6570\n    printSize(arr); // \u8f93\u51fa: Type does not have a size.\n    return 0;\n}\n</code></pre>"},{"location":"blog/2024/11/24/c-concept/#concept_1","title":"\u5b9a\u4e49 Concept","text":"<p>\u4e00\u4e2a Concept \u7684\u5b9a\u4e49\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>template &lt; template-parameter-list &gt;\nconcept concept-name attr(optional) = constraint-expression;\n</code></pre> <p><code>constraint-expression</code>\u53ef\u4ee5\u662f\u5bf9\u6a21\u677f\u53c2\u6570 <code>T</code> \u7684\u4e00\u7cfb\u5217\u8981\u6c42\uff0c\u901a\u5e38\u4f7f\u7528\u6807\u51c6\u5e93\u4e2d\u7684\u7c7b\u578b\u7279\u6027<code>\uff08std::is_integral_v&lt;T&gt;\uff09</code>\u7b49\u8fdb\u884c\u68c0\u67e5\uff0c\u6216\u8005\u4f7f\u7528 <code>requires</code> \u8868\u8fbe\u5f0f\u76f4\u63a5\u63cf\u8ff0 T \u8981\u652f\u6301\u7684\u64cd\u4f5c\u3002</p> <ul> <li>\u7b80\u5355\u7684\u7c7b\u578b\u68c0\u67e5</li> </ul> <pre><code>#include &lt;type_traits&gt;\n\ntemplate&lt;typename T&gt;\nconcept Integral = std::is_integral_v&lt;T&gt;;\n</code></pre> <ul> <li>\u4f7f\u7528 requires \u8868\u8fbe\u5f0f</li> </ul> <pre><code>#include &lt;concepts&gt;\n\ntemplate&lt;typename T&gt;\nconcept HasSize = requires(T t) {\n    { t.size() } -&gt; std::convertible_to&lt;std::size_t&gt;;\n};\n</code></pre>"},{"location":"blog/2024/11/24/c-concept/#constraint-expression","title":"constraint-expression","text":"<p>cppreference/constraint</p>"},{"location":"blog/2024/11/24/c-concept/#requires","title":"requires \u8868\u8fbe\u5f0f","text":"<p>requires \u8868\u8fbe\u5f0f\u662f C++20 \u5f15\u5165\u7684\u8bed\u6cd5\uff0c\u7528\u4e8e\u63cf\u8ff0\u7c7b\u578b T \u7684\u7ea6\u675f\u6761\u4ef6\u3002\u5b83\u53ef\u4ee5\u7528\u4e8e\u7c7b\u578b\u68c0\u67e5\u3001\u51fd\u6570\u91cd\u8f7d\u3001\u6a21\u677f\u53c2\u6570\u63a8\u5bfc\u7b49\u573a\u666f\u3002 requires \u7684\u8bed\u6cd5\u5982\u4e0b\uff1a</p> <pre><code>requires (parameter-list) {\n    requirement-seq\n}\n</code></pre> <p><code>parameter-list</code>\u662f\u53ef\u9009\u7684\uff0c\u7528\u4e8e\u5b9a\u4e49 requires \u8868\u8fbe\u5f0f\u4e2d\u7684\u53c2\u6570\u5217\u8868\u3002\u8fd9\u4e9b\u53c2\u6570\u6ca1\u6709\u94fe\u63a5\u3001\u5b58\u50a8\u6216\u751f\u547d\u5468\u671f\uff0c\u5b83\u4eec\u4ec5\u4f5c\u4e3a\u5b9a\u4e49<code>requirement-seq</code>\u7684\u6ce8\u89e3\u4f7f\u7528\u3002 <code>requirement-seq</code>\u662f\u4e00\u7ec4 requirement\uff0c\u6bcf\u4e2a requirement \u6709\u5982\u4e0b\u51e0\u79cd\u5f62\u5f0f\u4e4b\u4e00\uff1a</p> <ul> <li>simple-requirement:   \u7b80\u5355\u8981\u6c42\u662f\u4e0d\u4ee5\u5173\u952e\u5b57 requires \u5f00\u5934\u7684\u4efb\u610f\u8868\u8fbe\u5f0f\u8bed\u53e5\u3002\u5b83\u65ad\u8a00\u8868\u8fbe\u5f0f\u6709\u6548\u3002\u8868\u8fbe\u5f0f\u662f\u672a\u8ba1\u7b97\u7684\u64cd\u4f5c\u6570;\u4ec5\u68c0\u67e5\u8bed\u8a00\u6b63\u786e\u6027\u3002</li> </ul> <pre><code>template&lt;typename T&gt;\nconcept Addable = requires (T a, T b)\n{\n    a + b; // \"the expression \u201ca + b\u201d is a valid expression that will compile\"\n};\n\ntemplate&lt;class T, class U = T&gt;\nconcept Swappable = requires(T&amp;&amp; t, U&amp;&amp; u)\n{\n    swap(std::forward&lt;T&gt;(t), std::forward&lt;U&gt;(u));\n    swap(std::forward&lt;U&gt;(u), std::forward&lt;T&gt;(t));\n};\n</code></pre> <ul> <li>type-requirement:   \u7c7b\u578b\u8981\u6c42\u662f\u5173\u952e\u5b57 <code>typename</code> \u540e\u8ddf\u7c7b\u578b\u540d\u79f0\uff08\u53ef\u9009\u7c7b\u578b\u9650\u5b9a\u7b26\uff09\u3002\u8be5 type-requirement \u6210\u7acb\u7684\u6761\u4ef6\u662f<code>typename</code>\u540e\u7684\u7c7b\u578b\u6709\u6548\uff1atype-requirement \u53ef\u7528\u4e8e\u9a8c\u8bc1\u4e00\u4e2a\u5d4c\u5957\u7c7b\u578b\u662f\u5426\u5b58\u5728\uff0c\u6216\u8005\u4e00\u4e2a\u7279\u5316\u7684\u7c7b\u6a21\u677f\u662f\u5426\u58f0\u660e\u4e86\u67d0\u4e2a\u7c7b\u578b\uff0c\u6216\u8005\u522b\u540d\u6a21\u677f\u7279\u5316\u58f0\u660e\u4e86\u67d0\u4e2a\u7c7b\u578b\u3002</li> </ul> <pre><code>template&lt;typename T&gt;\nusing Ref = T&amp;;\n\ntemplate&lt;typename T&gt;\nconcept C = requires\n{\n    typename T::inner; // required nested member name\n    typename S&lt;T&gt;;     // required class template specialization\n    typename Ref&lt;T&gt;;   // required alias template substitution\n};\n\ntemplate&lt;class T, class U&gt;\nusing CommonType = std::common_type_t&lt;T, U&gt;;\n\ntemplate&lt;class T, class U&gt;\nconcept Common = requires (T&amp;&amp; t, U&amp;&amp; u)\n{\n    typename CommonType&lt;T, U&gt;; // CommonType&lt;T, U&gt; is valid and names a type\n    { CommonType&lt;T, U&gt;{std::forward&lt;T&gt;(t)} };\n    { CommonType&lt;T, U&gt;{std::forward&lt;U&gt;(u)} };\n};\n</code></pre> <ul> <li>compound-requirement:   \u590d\u5408 requirement \u7684\u57fa\u672c\u5f62\u5f0f\u662f\uff1a</li> </ul> <pre><code>{ expression } noexcept(optional) return-type-requirement\u200a(optional) ;\nreturn-type-requirement -&gt; type-constraint\n</code></pre> <pre><code>template&lt;typename T&gt;\nconcept C2 = requires(T x)\n{\n    // the expression *x must be valid\n    // AND the type T::inner must be valid\n    // AND the result of *x must be convertible to T::inner\n    {*x} -&gt; std::convertible_to&lt;typename T::inner&gt;;\n\n    // the expression x + 1 must be valid\n    // AND std::same_as&lt;decltype((x + 1)), int&gt; must be satisfied\n    // i.e., (x + 1) must be a prvalue of type int\n    {x + 1} -&gt; std::same_as&lt;int&gt;;\n\n    // the expression x * 1 must be valid\n    // AND its result must be convertible to T\n    {x * 1} -&gt; std::convertible_to&lt;T&gt;;\n};\n</code></pre> <ul> <li>nested-requirement:   \u5d4c\u5957 requirement \u7684\u5f62\u5f0f\u4e3a:</li> </ul> <pre><code>requires constraint-expression ;\n</code></pre> <pre><code>template&lt;class T&gt;\nconcept Semiregular = DefaultConstructible&lt;T&gt; &amp;&amp;\n    CopyConstructible&lt;T&gt; &amp;&amp; CopyAssignable&lt;T&gt; &amp;&amp; Destructible&lt;T&gt; &amp;&amp;\nrequires(T a, std::size_t n)\n{\n    requires Same&lt;T*, decltype(&amp;a)&gt;; // nested: \"Same&lt;...&gt; evaluates to true\"\n    { a.~T() } noexcept; // compound: \"a.~T()\" is a valid expression that doesn't throw\n    requires Same&lt;T*, decltype(new T)&gt;; // nested: \"Same&lt;...&gt; evaluates to true\"\n    requires Same&lt;T*, decltype(new T[n])&gt;; // nested\n    { delete new T }; // compound\n    { delete new T[n] }; // compound\n};\n</code></pre>"},{"location":"blog/2024/11/24/c-concept/#concept_2","title":"\u4f7f\u7528 Concept","text":"<p>Concept \u53ef\u4ee5\u7528\u4e8e\u51fd\u6570\u6a21\u677f\u7684\u53c2\u6570\u7c7b\u578b\u68c0\u67e5\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e8e\u7c7b\u6a21\u677f\u7684\u7ea6\u675f\u3002</p>"},{"location":"blog/2024/11/24/c-concept/#_1","title":"\u51fd\u6570\u6a21\u677f","text":"<p>\u58f0\u660e\u4e00\u4e2a<code>Intergral</code>\u7684 concept\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>template&lt;typename T&gt;\nconcept Integral = std::is_integral_v&lt;T&gt;;\n</code></pre> <p>\u5728\u51fd\u6570\u6a21\u677f\u4e2d\u4f7f\u7528 Concept\uff0c\u53ef\u4ee5\u4f7f\u7528 requires \u8868\u8fbe\u5f0f\u6765\u63cf\u8ff0\u51fd\u6570\u7684\u7ea6\u675f\u6761\u4ef6\u3002\u6709\u5982\u4e0b\u51e0\u79cd\u65b9\u5f0f\u3002</p> <ul> <li>\u65b9\u5f0f\u4e00   \u7b2c\u4e00\u79cd\u662f Bjarne Stroustrup \u6700\u559c\u6b22\u7684\uff0c\u4ed6\u751a\u81f3\u89c9\u5f97\u5269\u4e0b\u7684\u51e0\u79cd\u7528\u6cd5\u90fd\u662f\u591a\u4f59\u7684\uff0c\u4f46\u662f\u4f17\u53e3\u96be\u8c03\uff0c\u6295\u7968\u51b3\u5b9a\uff0c\u5f88\u591a\u4e1c\u897f\u4ed6\u4e5f\u505a\u4e0d\u4e86\u4e3b\u3002\u6765\u770b\u770b\u8fd9\u79cd\u7528\u6cd5\u5427\uff0c\u5c31\u662f\u7528\u4e86\u4e00\u4e2a\u591a\u4f59\u7684<code>auto</code>\u5173\u952e\u5b57\uff0c\u6765\u8bf4\u660e<code>auto</code>\u524d\u9762\u7684 Integral \u662f\u4e00\u4e2a<code>concept</code>\uff1a</li> </ul> <pre><code>Integral auto Add(Integral auto a, Integral auto b) {\n    return a + b;\n}\n</code></pre> <p>\u53ef\u4ee5\u7528\u65b0\u7684\u683c\u5f0f\uff1a</p> <pre><code>Integral auto c = Add(10, 3)\n</code></pre> <p>\u6765\u8c03\u7528\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u7528\u4ee5\u524d\u7684\u8c03\u7528\u65b9\u6cd5\uff1a</p> <pre><code>int c = Add(10, 3)\n</code></pre> <ul> <li>\u65b9\u5f0f\u4e8c   \u518d\u6765\u770b\u7b2c\u4e8c\u79cd\uff0c\u5728<code>template</code>\u58f0\u660e\u4ee5\u540e\u7d27\u63a5\u7740\u7528<code>requires</code>\u5173\u952e\u5b57\u8bf4\u660e\u6a21\u677f\u53c2\u6570\u9700\u8981\u6ee1\u8db3\u7684<code>concept</code>\uff0c\u4e5f\u5f88\u76f4\u89c2\uff1a</li> </ul> <pre><code>template&lt;typename T&gt;;\nrequires Integral&lt;T&gt;;\nT Add(T a, T b){\n    return a + b;\n}\n</code></pre> <p>\u8fd9\u79cd\u7528\u6cd5\u4e0d\u5fc5\u5bf9\u51fd\u6570\u58f0\u660e\u4e2d\u7684\u6bcf\u4e2a T \u90fd\u5199\u6210\u957f\u957f\u7684<code>Integral auto</code>\uff0c\u5f53\u51fd\u6570\u53c2\u6570\u8f83\u591a\u65f6\u660e\u663e\u6bd4\u7b2c\u4e00\u79cd\u8981\u597d\uff0c\u6240\u4ee5 Bjarne Stroustrup \u4e5f\u4e0d\u89c1\u5f97\u662f\u5bf9\u7684\uff0c\u6bd5\u7adf\u4eba\u90fd\u6709\u504f\u89c1\u3002</p> <ul> <li>\u65b9\u5f0f\u4e09   \u7ee7\u7eed\u770b\u7b2c\u4e09\u79cd\uff0c\u8fd9\u79cd\u548c\u7b2c\u4e8c\u79cd\u7684\u533a\u522b\u5c31\u662f\u5c06<code>requires Integral&lt;T&gt;</code>\u632a\u52a8\u4e86\u4f4d\u7f6e\uff0c\u653e\u5728\u4e86\u51fd\u6570\u58f0\u660e\u7684\u540e\u9762\uff0c\u6548\u679c\u662f\u4e00\u6837\u7684\uff1a</li> </ul> <pre><code>template&lt;typename T&gt;\nT Add(T a, T b) requires Integral&lt;T&gt;{\n    return a + b;\n}\n</code></pre> <ul> <li>\u65b9\u5f0f\u56db   \u7b2c\u56db\u79cd\u662f\u7701\u7565\u4e86<code>requires</code>\u5173\u952e\u5b57\uff0c\u76f4\u63a5\u5c06<code>concept</code>\u7684\u540d\u5b57\u653e\u5165\u5230\u6a21\u677f\u53c2\u6570\u524d\u9762\uff0c\u540c\u65f6\u4e5f\u7701\u53bb\u4e86\u5e73\u5e38\u6a21\u677f\u58f0\u660e\u7528\u7684<code>typename</code>\u6216<code>class</code>\uff0c\u5176\u5b9e\u6211\u89c9\u5f97\u8fd9\u79cd\u6700\u76f4\u89c2\uff0c\u5982\u4e0b\uff1a</li> </ul> <pre><code>template&lt;Integral T&gt;\nT Add(T a, T b){\n    return a + b;\n}\n</code></pre> <p><code>concept</code>\u8fd8\u53ef\u7528\u4e8e\u51fd\u6570\u7684\u91cd\u8f7d\uff0c\u5047\u8bbe\u6211\u518d\u52a0\u4e0a\u4e00\u4e2a\u666e\u901a\u7684<code>Add</code>\u51fd\u6570\uff0c\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u4ee5\u7f16\u8bd1\u901a\u8fc7\uff0c\u666e\u901a\u7684<code>Add</code>\u51fd\u6570\u5c31\u548c C++20 \u4e4b\u524d\u7684\u51fd\u6570\u4e00\u6837\uff1a template; T Add(T a, T b){ return a + b; } \u52a0\u4e86\u8fd9\u4e2a\u51fd\u6570\u4ee5\u540e\uff0c\u4e0d\u6ee1\u8db3<code>Integral</code>\u7684\u53c2\u6570\u5c31\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\uff0c\u800c\u6ee1\u8db3<code>Integral</code>\u7684\u53c2\u6570\u4f1a\u8c03\u7528\u4e4b\u524d\u7528<code>concept</code>\u5b9a\u4e49\u7684\u51fd\u6570\u3002\u7f16\u8bd1\u5668\u4e00\u5982\u65e2\u5f80\u5730\u9009\u62e9\u6700\u5339\u914d\u7684\u51fd\u6570\u3002"},{"location":"blog/2024/11/24/c-concept/#_2","title":"\u7c7b\u6a21\u677f","text":"<p>\u58f0\u660e\u4e00\u4e2a<code>Printable</code>\u7684 concept\uff0c\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;concepts&gt;\n\ntemplate&lt;typename T&gt;\nconcept Printable = requires(T x) {\n    { std::cout &lt;&lt; x } -&gt; std::convertible_to&lt;std::ostream&amp;&gt;;\n};\n</code></pre> <p>\u5982\u4e0b\u6240\u793a\uff0c\u5728\u7c7b\u6a21\u677f\u4e2d\u4f7f\u7528\u8be5 concept\uff1a</p> <pre><code>template&lt;Printable T&gt;\nclass Printer {\npublic:\n    void print(const T&amp; value) const {\n        std::cout &lt;&lt; value &lt;&lt; std::endl;\n    }\n};\n\ntemplate&lt;typename T&gt;\nrequires Printable&lt;T&gt;\nclass Printer {\npublic:\n    void print(const T&amp; value) const {\n        std::cout &lt;&lt; value &lt;&lt; std::endl;\n    }\n};\n</code></pre>"},{"location":"blog/2024/11/24/c-coroutines/","title":"C++: Coroutines","text":"<p>Daily Bite of C++ Coroutines: Step by Step</p> <p>C++20 \u6807\u51c6\u5e93\u4e2d\u65b0\u589e\u4e86\u5bf9\u534f\u7a0b\u7684\u652f\u6301\u3002\u5bf9\u4e8e\u5927\u591a\u6570 C++\u7528\u6237\u6765\u8bf4\uff0c\u4f7f\u7528\u534f\u7a0b\u53ea\u9700\u8981\u9075\u5faa\u5e93\u7684\u6587\u6863\uff0c\u63d0\u4f9b\u534f\u7a0b\u7c7b\u578b\u5373\u53ef\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u9700\u8981\u5b9e\u73b0\u81ea\u5b9a\u4e49\u534f\u7a0b\u7c7b\u578b\uff0c\u672c\u7bc7\u6587\u7ae0\u5c31\u662f\u4e3a\u4f60\u51c6\u5907\u7684\u3002 \u5728\u672c\u7bc7\u6587\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e03\u79cd\u4e0d\u540c\u7684\u534f\u7a0b\u7c7b\u578b\uff0c\u4ee5\u6b64\u6765\u4ecb\u7ecd\u4e0e\u534f\u7a0b\u6709\u5173\u7684\u6982\u5ff5\u3002</p>"},{"location":"blog/2024/11/24/c-coroutines/#_1","title":"\u4f7f\u7528\u534f\u7a0b","text":"<p>\u5728 C++\u4e2d\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u4e24\u4e2a\u6761\u4ef6\u7684\u4efb\u4f55\u51fd\u6570\uff08\u9664\u4e86<code>main</code>\uff09\u90fd\u88ab\u89c6\u4e3a\u4e00\u4e2a\u534f\u7a0b\uff1a</p> <ul> <li>\u51fd\u6570\u4f53\u5305\u542b\u81f3\u5c11\u4e00\u4e2a\u534f\u7a0b\u5173\u952e\u5b57\uff1a<code>co_return</code>, <code>co_yield</code>, <code>co_await</code></li> <li>\u8fd4\u56de\u7c7b\u578b\u7b26\u5408\u534f\u7a0b\u8981\u6c42\uff08\u76f4\u63a5\u6216\u901a\u8fc7 <code>std::coroutine_traits</code>\uff09</li> </ul> <p>\u5bf9\u4e8e\u88ab\u89c6\u4e3a\u534f\u7a0b\u7684\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u989d\u5916\u7684\u4ee3\u7801\u6765\u5b9e\u73b0\u534f\u7a0b\u89c4\u5b9a\u7684\u884c\u4e3a\u3002</p> <p>C++\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86<code>std::generator</code>\uff08C++23\uff09\uff0c\u5b83\u53ef\u4ee5\u7528\u6765\u5b9e\u73b0\u60f0\u6027\u8ba1\u7b97\u5143\u7d20\u5e8f\u5217\u3002<code>std::generator</code>\u53ef\u4ee5\u901a\u8fc7<code>co_yield</code>\u5173\u952e\u5b57\u6765\u751f\u6210\u5143\u7d20\uff0c\u6709\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li><code>co_yield value</code> : \u751f\u6210\u5355\u4e2a\u5143\u7d20</li> <li><code>co_yield std::ranges::elements_of(range)</code> : \u751f\u6210\u4e00\u4e2a\u6ee1\u8db3<code>range</code>\u7684\u63a5\u53e3\u7684\u5143\u7d20\u5e8f\u5217</li> </ul> <p>\u4e0b\u4f8b\u5b50\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528 <code>std::generator</code> \u6765\u5b9e\u73b0\u6590\u6ce2\u90a3\u5951\u6570\u5217\u7684\u8ba1\u7b97\u3002</p> <pre><code>#include &lt;generator&gt;\n#include &lt;print&gt;\n#include &lt;utility&gt;\n\n// The return type has to conform to coroutine requirements\nstd::generator&lt;int&gt; fibonacci(int cnt) {\n    int a = 0;\n    int b = 1;\n    for (;cnt &gt; 0; --cnt)\n        // and the function must use at least one coroutine keyword\n        co_yield std::exchange(a, std::exchange(b, a+b));\n    // This coroutine naturally ends after the loop is exhausted\n    // but we can also co_return to exit immediately.\n}\n\nint main() {\n    for (int v : fibonacci(10)) {\n        std::println(\"{}\", v);\n    }\n}\n</code></pre> <p><code>std::generator</code> \u7c7b\u578b\u5b9e\u73b0\u4e86<code>range</code>\u7684\u63a5\u53e3\uff0c\u8fd9\u610f\u5473\u7740\u4ece\u8c03\u7528\u8005\u7684\u89d2\u5ea6\u6765\u770b\uff0c\u53ea\u662f\u8c03\u7528\u4e86\u4e00\u4e2a\u8fd4\u56de\u503c\u4f1a<code>std::generator&lt;T&gt;</code>\u7684\u51fd\u6570\uff0c\u8be5\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u7684<code>range</code>\u7c7b\u578b\u3002\u4f7f\u7528<code>std::generator</code>\u6539\u5199\u90a3\u4e9b\u4f9d\u8d56\u4e8e\u56de\u8c03\u51fd\u6570\u6216\u8005\u9700\u8981\u63d0\u524d\u8ba1\u7b97\u8f93\u51fa\u7684\u7a0b\u5e8f\u975e\u5e38\u6709\u7528\u3002\u4f8b\u5982\uff0c\u4f7f\u7528<code>std::generator</code>\u5b9e\u73b0\u4e0d\u540c\u7684\u6811\u904d\u5386\u7b97\u6cd5\u5c31\u975e\u5e38\u7b80\u5355\u3002</p> <pre><code>#include &lt;print&gt;\n#include &lt;generator&gt;\n\nstruct Node {\n    int value;\n    Node* left;\n    Node* right;\n};\n\nstd::generator&lt;Node*&gt; pre_order(Node* root) {\n    if (root == nullptr) co_return;\n\n    co_yield root;\n    co_yield std::ranges::elements_of(pre_order(root-&gt;left));\n    co_yield std::ranges::elements_of(pre_order(root-&gt;right));\n}\n\nstd::generator&lt;Node*&gt; in_order(Node* root) {\n    if (root == nullptr) co_return;\n\n    co_yield std::ranges::elements_of(in_order(root-&gt;left));\n    co_yield root;\n    co_yield std::ranges::elements_of(in_order(root-&gt;right));\n}\n\nstd::generator&lt;Node*&gt; post_order(Node* root) {\n    if (root == nullptr) co_return;\n\n    co_yield std::ranges::elements_of(post_order(root-&gt;left));\n    co_yield std::ranges::elements_of(post_order(root-&gt;right));\n    co_yield root;\n}\n\n\n#include &lt;vector&gt;\n#include &lt;memory&gt;\n\nstd::vector&lt;std::unique_ptr&lt;Node&gt;&gt; make_tree();\n\nint main() {\n    auto tree = make_tree();\n    Node* root = tree[0].get();\n\n    for (Node* node : pre_order(root))\n        std::print(\"{} \", node-&gt;value);\n    std::println(\"\");\n\n    for (Node* node : in_order(root))\n        std::print(\"{} \", node-&gt;value);\n    std::println(\"\");\n\n    for (Node* node : post_order(root))\n        std::print(\"{} \", node-&gt;value);\n    std::println(\"\");\n}\n\nstd::vector&lt;std::unique_ptr&lt;Node&gt;&gt; make_tree() {\n    std::vector&lt;std::unique_ptr&lt;Node&gt;&gt; tree;\n\n    tree.push_back(std::make_unique&lt;Node&gt;(4));\n    Node* root = tree.back().get();\n\n    tree.push_back(std::make_unique&lt;Node&gt;(2));\n    Node* left = tree.back().get();\n    root-&gt;left = left;\n\n    tree.push_back(std::make_unique&lt;Node&gt;(6));\n    Node* right = tree.back().get();\n    root-&gt;right = right;\n\n    tree.push_back(std::make_unique&lt;Node&gt;(1));\n    left-&gt;left = tree.back().get();\n    tree.push_back(std::make_unique&lt;Node&gt;(3));\n    left-&gt;right = tree.back().get();\n\n    tree.push_back(std::make_unique&lt;Node&gt;(5));\n    right-&gt;left = tree.back().get();\n    tree.push_back(std::make_unique&lt;Node&gt;(7));\n    right-&gt;right = tree.back().get();\n\n    return tree;\n}\n</code></pre> <p>\u901a\u8fc7\u5176\u4ed6\u5e93\u63d0\u4f9b\u7684\u534f\u7a0b\u7c7b\u578b\u4e5f\u8bb8\u4f1a\u63d0\u4f9b\u4e0d\u540c\u7684\u63a5\u53e3\u548c\u884c\u4e3a\u3002\u56e0\u6b64\uff0c\u5728\u4f7f\u7528\u81ea\u5b9a\u4e49\u534f\u7a0b\u7c7b\u578b\u4e4b\u524d\uff0c\u8bf7\u59cb\u7ec8\u68c0\u67e5\u76f8\u5e94\u7684\u6587\u6863\u3002</p>"},{"location":"blog/2024/11/24/c-coroutines/#_2","title":"\u521b\u5efa\u534f\u7a0b","text":"<p>\u5728\u4f7f\u7528 C++\u7684 coroutine \u4e4b\u524d\uff0c\u8981\u660e\u786e\u4e00\u4ef6\u4e8b\u60c5\uff1aC++\u7684 coroutine \u5e76\u6ca1\u6709\u5b9a\u4e49\u4e00\u4e2a\u5f02\u6b65\u6a21\u578b\u3002\u76f8\u53cd\uff0ccoroutine \u7c7b\u578b\u53ef\u4ee5\u9002\u914d\u51e0\u4e4e\u4efb\u4f55\u5de5\u4f5c\u6d41\u3002 \u521b\u5efa\u4e00\u4e2a\u534f\u7a0b\u9700\u8981\u660e\u786e\u4e09\u4e2a\u4e3b\u8981\u90e8\u5206\uff1a\u8fd4\u56de\u7c7b\u578b\uff08\u4f8b\u5982 <code>std::generator</code>\uff09\uff0c<code>promise</code> \u7c7b\u578b\uff08\u63cf\u8ff0\u534f\u7a0b\u884c\u4e3a\uff09\u548c <code>awaitable</code> \u7c7b\u578b\uff08\u63a7\u5236\u4f4e\u5c42\u673a\u5236\u5982\u4f55\u6682\u505c\u548c\u6062\u590d\u534f\u7a0b\uff09\u3002</p> <p>\u5728\u4e0b\u9762\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e03\u79cd\u4e0d\u540c\u7684\u534f\u7a0b\u7c7b\u578b\uff0c\u6bcf\u4e2a\u7c7b\u578b\u90fd\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u6982\u5ff5\u3002</p>"},{"location":"blog/2024/11/24/c-coroutines/#_3","title":"\u521b\u5efa\u4e00\u4e2a\u4f8b\u7a0b","text":"<p>coroutine \u662f\u4e00\u822c\u51fd\u6570\u7684\u6cdb\u5316\u3002\u56e0\u6b64\uff0c\u8ba9\u6211\u4eec\u4ece\u5b9e\u73b0\u4e00\u4e2a\u8fd4\u56de void \u7684\u51fd\u6570\u7c7b\u578b\u5f00\u59cb\u6765\u9010\u6b65\u5b9e\u73b0\u4e00\u4e2a\u5b8c\u6574\u7684 coroutine \u7c7b\u578b\u3002\u4e0b\u9762\u901a\u8fc7\u4f7f\u7528 C++\u63d0\u4f9b\u7684 coroutine \u7684\u57fa\u7840\u8bbe\u65bd\uff0c\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684 <code>Routine</code> \u7c7b\u578b(\u5373\u53ea\u662f\u6839\u636e\u8f93\u5165\u6267\u884c\u4e00\u6bb5\u8ba1\u7b97\u4efb\u52a1\uff0c\u65e0\u8fd4\u56de\u503c)\uff0c\u6211\u4eec\u53ef\u4ee5\u5feb\u901f\u5730\u4e86\u89e3 coroutine \u4e2d <code>promise_type</code> \u4e2d\u6240\u6709\u53ef\u7528\u7684\u81ea\u5b9a\u4e49\u70b9\u3002</p> <pre><code>#include &lt;coroutine&gt;\n#include &lt;print&gt;\n\nstruct RoutinePromise;\n\nstruct Routine {\n    // The return type has to contain a promise_type\n    using promise_type = RoutinePromise;\n};\n\nstruct RoutinePromise {\n    // This function is used to create the instance\n    // of the return type for the caller\n    Routine get_return_object() { return {}; }\n\n    // What should happen before the coroutine body starts\n    std::suspend_never initial_suspend() noexcept { return {}; }\n    // What should happen after the coroutine body has finished\n    std::suspend_never final_suspend() noexcept { return {}; }\n    // What should happen when the coroutine executes co_return;\n    void return_void() {}\n    // What should happen when there is an unhandled exception\n    void unhandled_exception() {}\n};\n\nint main() {\n    auto coro = [] -&gt; Routine {\n        std::println(\"Running...\");\n        co_return;\n    };\n\n    auto x = coro(); // coroutine starts and runs to completion\n    // decltype(x) == Routine\n    static_assert(std::is_same_v&lt;decltype(x), Routine&gt;);\n\n    coro(); // Because the return type is empty, this is the same as above\n}\n</code></pre> <p><code>promise_type</code>\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u5d4c\u5957\u7c7b\u578b\uff0c\u800c\u4e0d\u5fc5\u50cf\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\u901a\u8fc7\u4e00\u4e2a <code>using</code> \u522b\u540d\u6765\u5b9a\u4e49\u3002\u9996\u5148\u4ecb\u7ecd<code>promise_type</code>\u4e2d\u7684\u4e24\u4e2a\u81ea\u5b9a\u4e49\u70b9\uff1a<code>initial_suspend</code>\u548c<code>final_suspend</code>\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a <code>awaitable</code> \u7c7b\u578b\uff08\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u8282\u8ba8\u8bba\uff09\u3002<code>initial_suspend</code>\u5728\u534f\u7a0b\u4f53\u5f00\u59cb\u4e4b\u524d\u88ab\u8c03\u7528\uff0c<code>final_suspend</code>\u5728\u534f\u7a0b\u4f53\u7ed3\u675f\u4e4b\u540e\u88ab\u8c03\u7528\u3002 \u901a\u8fc7 <code>awaitable</code> \u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u6765\u63a7\u5236\u4e0b\u9762\u4e09\u4e2a\u884c\u4e3a\uff1a</p> <ul> <li>\u7ee7\u7eed\u8fd0\u884c</li> <li>\u8fd4\u56de\u63a7\u5236\u7ed9\u8c03\u7528\u8005(\u6216\u6700\u540e\u4e00\u4e2a resumer)</li> <li>\u8f6c\u79fb\u63a7\u5236\u7ed9\u53e6\u4e00\u4e2a\u534f\u7a0b</li> </ul> <p>C++\u6807\u51c6\u63d0\u4f9b\u4e86\u4e24\u79cd <code>awaitable</code> \u7c7b\u578b\uff1a<code>std::suspend_never</code>\uff08\u534f\u7a0b\u7ee7\u7eed\u8fd0\u884c\uff09\u548c <code>std::suspend_always</code>\uff08\u63a7\u5236\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\uff09\u3002\u5728\u4e00\u822c\u7684<code>Routine</code>\u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u7a0b\u5e8f\u4e00\u76f4\u8fd0\u884c\u5230\u5b8c\u6210\uff0c\u56e0\u6b64\uff0c\u6211\u4eec\u4f7f\u7528 <code>std::suspend_never</code> \u4f5c\u4e3a <code>initial_suspend</code> \u548c <code>final_suspend</code> \u7684\u8fd4\u56de\u7c7b\u578b\u3002</p> <pre><code>auto coro = [] -&gt; Routine {\n    std::println(\"Running...\");\n    co_return;\n};\n\nauto x = coro(); // coroutine starts and runs to completion\n\ncoro(); // Because the return type is empty, this is the same as above\n</code></pre> <p>\u4e0a\u8ff0\u5b9e\u73b0\u7684\u4e00\u4e2a\u95ee\u9898\u5728\u4e8e\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u662f\u56fa\u5b9a\u7684(\u5bf9\u5e94\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u7684<code>Routine</code>)\u3002\u7531\u4e8e <code>Routine</code> \u662f\u6211\u4eec\u81ea\u5df1\u5b9e\u73b0\u7684\u7c7b\u578b\uff0c\u6211\u4eec\u53ef\u4ee5\u4e3a\u5b83\u6307\u5b9a\u4e00\u4e2a<code>promise_type</code>\uff0c\u4f46\u5f53\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u7f16\u5199\u4e00\u4e2a\u8fd4\u56de\u7c7b\u578b\u6765\u81ea\u4e00\u4e2a\u4f60\u65e0\u6cd5\u4fee\u6539\u7684\u7b2c\u4e09\u65b9\u5e93\u7684\u534f\u7a0b\uff0c\u4e0a\u9762\u7684\u5b9e\u73b0\u662f\u4e0d\u5408\u9002\u7684\u3002\u5bf9\u4e8e\u8fd9\u79cd\u60c5\u51b5\uff0c\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86<code>std::coroutine_traits</code>\u81ea\u5b9a\u4e49\u70b9\u3002</p> <pre><code>#include &lt;coroutine&gt;\n#include &lt;print&gt;\n\n// No need to modify\nstruct Routine {};\n\n// Any coroutine returning Routine\ntemplate &lt;typename... Arg&gt;\nstruct std::coroutine_traits&lt;Routine, Arg...&gt; {\n    using promise_type = RoutinePromise;\n};\n\nint main() {\n    auto coro = [] -&gt; Routine {\n        std::println(\"coro running...\");\n        co_return;\n    };\n\n    auto x = coro(); // coroutine starts and runs to completion\n    // decltype(x) == Routine\n    static_assert(std::is_same_v&lt;decltype(x), Routine&gt;);\n\n    coro(); // Because the return type is empty, this is the same as above\n}\n</code></pre> <p>\u5982\u4e0a\u6240\u793a\uff0c\u5047\u5982<code>Routine</code>\u7c7b\u578b\u6765\u81ea\u4e00\u4e2a\u7b2c\u4e09\u65b9\u5e93\uff0c\u6211\u4eec\u53ef\u4ee5\u5728<code>std::coroutine_traits</code>\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u7279\u5316\uff0c\u4ee5\u4fbf\u4e8e\u7f16\u8bd1\u5668\u80fd\u591f\u627e\u5230\u6b63\u786e\u7684 <code>promise_type</code>\u3002</p>"},{"location":"blog/2024/11/24/c-coroutines/#_4","title":"\u521b\u5efa\u4e00\u4e2a\u51fd\u6570","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a<code>Routine</code>\uff0c\u6211\u4eec\u53ef\u4ee5\u5ffd\u7565\u5b83\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u4f46\u5f53\u6211\u4eec\u4f7f\u7528\u534f\u7a0b\u7684\u57fa\u7840\u8bbe\u65bd\u5b9e\u73b0\u4e00\u4e2a\u5e26\u8fd4\u56de\u503c\u7684<code>Function</code>\u65f6\uff0c\u5219\u9700\u8981\u4e00\u4e2a\u673a\u5236\u6765\u8ba9\u534f\u7a0b\u548c\u8c03\u7528\u8005\uff08\u53ea\u6709\u901a\u8fc7\u8fd4\u56de\u7c7b\u578b\u503c\u8fd9\u4e00\u4e2a\u624b\u6bb5\uff09\u8fdb\u884c\u901a\u4fe1\u3002 C++\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86<code>std::coroutine_handle</code>\u7c7b\u578b\u6765\u63a7\u5236\u5bf9\u5e94\u7684\u534f\u7a0b\u548c\u8bbf\u95ee\u5b83\u7684<code>promise</code>\u7c7b\u578b\u3002\u4e3a\u4e86\u4f7f\u4e0b\u9762\u7684\u793a\u4f8b\u7b80\u6d01\uff0c\u6211\u4eec\u5c06\u5305\u88c5<code>std::coroutine_handle</code>\uff08\u5177\u6709\u5f15\u7528\u8bed\u4e49\uff09\u5230\u4e00\u4e2a RAII \u5bf9\u8c61\u4e2d\u3002</p> <pre><code>template &lt;typename promise_type&gt;\nstruct owning_handle {\n    owning_handle() : handle_() {}\n    owning_handle(std::nullptr_t) : handle_(nullptr) {}\n    owning_handle(std::coroutine_handle&lt;promise_type&gt; handle) : handle_(std::move(handle)) {}\n\n    owning_handle(const owning_handle&lt;promise_type&gt;&amp;) = delete;\n    owning_handle(owning_handle&lt;promise_type&gt;&amp;&amp; other) : handle_(std::exchange(other.handle_, nullptr)) {}\n    owning_handle&lt;promise_type&gt;&amp; operator=(const owning_handle&lt;promise_type&gt;&amp;) = delete;\n    owning_handle&lt;promise_type&gt;&amp; operator=(owning_handle&lt;promise_type&gt;&amp;&amp; other) {\n        handle_ = std::exchange(other.handle_, nullptr);\n        return *this;\n    }\n    promise_type&amp; promise() { return handle_.promise(); }\n    ~owning_handle() {\n        if (handle_)\n            handle_.destroy();\n    }\nprivate:\n    std::coroutine_handle&lt;promise_type&gt; handle_;\n}\n</code></pre> <p>\u6ce8\u610f\u6211\u4eec\u5728\u6790\u6784\u51fd\u6570\u4e2d\u663e\u5f0f\u9500\u6bc1\u4e86\u534f\u7a0b\u3002 \u5411\u8c03\u7528\u8005\u4f20\u9012\u8fd4\u56de\u503c\u7684\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\u5c06\u7ed3\u679c\u5b58\u50a8\u5728 promise \u4e2d\u3002\u5982\u679c\u6211\u4eec\u7ed9\u8c03\u7528\u8005\u8bbf\u95ee\u534f\u7a0b\u53e5\u67c4\u7684\u6743\u9650\uff0c\u8c03\u7528\u8005\u53ef\u4ee5\u901a\u8fc7\u53e5\u67c4\u8bfb\u53d6\u5b58\u50a8\u7684\u503c\u3002 \u4f46\u662f\uff0c\u5f53 coroutine \u8fd0\u884c\u7ed3\u675f\uff0cpromise \u88ab\u9500\u6bc1\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u4fdd\u6301\u534f\u7a0b\u7684\u5b58\u6d3b\u3002</p> <pre><code>#include &lt;coroutine&gt;\n#include &lt;print&gt;\n#include &lt;utility&gt;\n\ntemplate &lt;typename T&gt;\nstruct Function;\n\ntemplate &lt;typename T&gt;\nstruct FunctionPromise {\n    using handle_t = std::coroutine_handle&lt;FunctionPromise&lt;T&gt;&gt;;\n    // To read the result from the coroutine,\n    // the caller needs to have access to it\n    Function&lt;T&gt; get_return_object() {\n        // Construct a coroutine handle from this promise\n        return Function&lt;T&gt;{handle_t::from_promise(*this)};\n    }\n\n    std::suspend_never initial_suspend() noexcept { return {}; }\n    // Because we need to give the caller a chance to read\n    // the result, the coroutine now cannot finish after\n    // completing the body. It needs to stick around.\n    std::suspend_always final_suspend() noexcept { return {}; }\n\n    // The mechanism used to \"return\" a result.\n    // We can simply store it.\n    template &lt;std::convertible_to&lt;T&gt; Arg&gt;\n    void return_value(Arg&amp;&amp; result) {\n        result_ = std::forward&lt;Arg&gt;(result);\n    }\n\n    void unhandled_exception() {}\n\n    // The result of the coroutine stored in the promise\n    T result_;\n};\n</code></pre> <p>\u5728<code>get_return_object</code>\u4e2d\uff0c\u6211\u4eec\u5c06\u5bf9\u534f\u7a0b\u53e5\u67c4\u7684\u8bbf\u95ee\u6743\u9650\u4f20\u9012\u7ed9\u8fd4\u56de\u5bf9\u8c61,\u4ece\u800c\u4f7f\u8c03\u7528\u8005\u53ef\u4ee5\u8bbf\u95ee\u534f\u7a0b\u7684\u7ed3\u679c\u3002\u5728<code>final_suspend</code>\u4e2d\uff0c\u6211\u4eec\u8fd4\u56de<code>std::suspend_always</code>\uff0c\u8fd9\u5c06\u8fd4\u56de\u63a7\u5236\u7ed9\u8c03\u7528\u8005\uff08\u4ece\u800c\u4fdd\u7559\u534f\u7a0b\u5b58\u6d3b\uff09\uff0c\u8c03\u7528\u8005\u5219\u53ef\u4ee5\u901a\u8fc7\u534f\u7a0b\u53e5\u67c4\u8bbf\u95ee\u534f\u7a0b\u5185\u90e8\u7684\u5bf9\u8c61\u3002<code>return_value</code>\u65b9\u6cd5\u4e3a\u534f\u7a0b\u63d0\u4f9b\u4e86\u4e00\u4e2a\u901a\u8fc7<code>return</code>\u8fd4\u56de\u7ed3\u679c\u7684\u673a\u5236\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6211\u4eec\u5141\u8bb8\u4efb\u4f55\u53ef\u4ee5\u8f6c\u6362\u4e3a <code>T</code> \u7684\u53c2\u6570\uff1b\u7136\u800c\uff0c\u8fd9\u5b8c\u5168\u53d6\u51b3\u4e8e\u5b9e\u73b0\u8005\u3002\u4f60\u4e5f\u53ef\u4ee5\u901a\u8fc7\u63d0\u4f9b\u591a\u4e2a <code>return_value</code> \u7684\u5b9e\u73b0\u6765\u4f9d\u8d56\u91cd\u8f7d\u89e3\u6790\u3002 \u5728\u6211\u4eec\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u5b9e\u73b0\u5bf9\u5e94\u7684\u6784\u9020\u51fd\u6570\u548c\u4e00\u4e2a <code>helper</code> \u65b9\u6cd5\u6765\u8bbf\u95ee\u534f\u7a0b\u7684\u7ed3\u679c\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct Function {\n    using promise_type = FunctionPromise&lt;T&gt;;\n\n    // Store the coroutine handle\n    explicit Function(promise_type::handle_t handle)\n      : handle_(handle) {}\n\n    // Interface for extracting the result\n    T get() { return handle_.promise().result_; }\n    operator T() { return get(); }\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u534f\u7a0b\u8fd4\u56de\u540e\u4f9d\u7136\u5b58\u6d3b(<code>final_suspend</code>),\u56e0\u6b64\u6e05\u7406\u8d44\u6e90\u7684\u8d23\u4efb\u5c5e\u4e8e\u8fd4\u56de\u7c7b\u578b\uff0c\u4e0a\u9762\u7684\u4f8b\u5b50\u901a\u8fc7\u4e00\u4e2a RAII \u7c7b\u578b<code>owning_handle</code>\u89e3\u51b3\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <pre><code>int main() {\n    auto coro = [] -&gt; Function&lt;int&gt; {\n        std::println(\"Running...\");\n        co_return 42;\n    };\n\n    auto x = coro();\n    int result = x.get(); // Get the result\n    std::println(\"result == {}\", result);\n\n    int y = coro(); // Same, but through implicit conversion\n    std::println(\"y == {}\", y);\n}\n</code></pre>"},{"location":"blog/2024/11/24/c-coroutines/#_5","title":"\u5904\u7406\u5f02\u5e38","text":"<p>\u5728\u5b9e\u73b0\u4e00\u4e2a\u51fd\u6570\u534f\u7a0b\u4e4b\u540e\uff0c\u6211\u4eec\u9700\u8981\u8003\u8651\u5f02\u5e38\u5904\u7406\u3002\u5f53\u5f02\u5e38\u6ca1\u6709\u5728\u534f\u7a0b\u4e2d\u88ab\u6355\u83b7\u65f6\uff0c\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4ee3\u7801\u5c06\u8c03\u7528 unhandled_exception \u65b9\u6cd5\u3002 \u6211\u4eec\u6709\u4e24\u79cd\u9009\u62e9\uff1a\u8c03\u7528 std::terminate \u6216\u5b58\u50a8\u5f53\u524d\u6b63\u5728\u98de\u884c\u7684\u5f02\u5e38\u5e76\u5728\u8c03\u7528\u8005\u5c1d\u8bd5\u8bbf\u95ee\u7ed3\u679c\u65f6\u91cd\u65b0\u629b\u51fa\u5b83\u3002</p> <pre><code>int main() {\n    auto coro = [] -&gt; Function&lt;int&gt; {\n        throw std::runtime_error(\"Error\");\n        co_return 42;\n    };\n\n    auto x = coro();\n    int result = x.get(); // Get the result\n    std::println(\"result == {}\", result);\n\n    int y = coro(); // Same, but through implicit conversion\n    std::println(\"y == {}\", y);\n}\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>std::current_exception</code>, <code>std::exception_ptr</code>\u548c<code>std::rethrow_exception</code>\u6765\u6355\u83b7\u548c\u91cd\u65b0\u629b\u51fa\u5f02\u5e38\u3002</p> <pre><code>struct FunctionPromise {\n    /* ... */\n    void unhandled_exception() {\n        exception_ = std::current_exception();\n    }\n    std::exception_ptr exception_;\n}\n\ntemplate &lt;typename T&gt;\nstruct Function {\n    /*... */\n    operator T() {\n        if (handle_.promise().exception_) {\n            std::rethrow_exception(handle_.promise().exception_);\n        }\n        return handle_.promise().result_;\n    }\n};\n\nauto coro = []-&gt;Function&lt;int&gt; {\n    throw std::runtime_error(\"Error\");\n    co_return 42;\n};\n\ntry {\n    auto x = coro();\n} catch (const std::exception&amp; e) {\n    std::println(\"Caught exception: {}\", e.what());\n}\n</code></pre> <p>\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u5c06\u4f7f\u7528 std::terminate \u53d8\u4f53\u3002</p>"},{"location":"blog/2024/11/24/c-coroutines/#_6","title":"\u521b\u5efa\u4e00\u4e2a\u60f0\u6027\u51fd\u6570","text":"<p>\u524d\u9762\u4e24\u4e2a\u4f8b\u5b50\uff08Routine \u548c Function\uff09\u5f88\u597d\u7684\u4ecb\u7ecd\u4e86\u534f\u7a0b\u7684\u57fa\u7840\u77e5\u8bc6\u3002\u7136\u800c\u5e76\u6ca1\u6709\u63ed\u793a\u6211\u4eec\u4e3a\u4ec0\u4e48\u9700\u8981\u534f\u7a0b\uff0c\u4e0a\u9762\u4e24\u4e2a\u4f8b\u5b50\u4f7f\u7528 C \u90fd\u53ef\u4ee5\u7f16\u5199\u5e76\u8fbe\u5230\u76ee\u7684\u3002\u60f0\u6027\u8ba1\u7b97\u51fd\u6570\u662f\u5728\u6ca1\u6709\u534f\u7a0b\u7684\u60c5\u51b5\u4e0b\u65e0\u6cd5\u7b80\u5355\u5b9e\u73b0\u7684\u573a\u666f\u3002\u4e0e\u524d\u9762\u7684\u4f8b\u5b50\u4e0d\u540c\u7684\u662f\uff0c\u60f0\u6027\u8ba1\u7b97\u51fd\u6570\u5728\u88ab\u8bf7\u6c42\u7ed3\u679c\u4e4b\u524d\u4e0d\u5e94\u8be5\u8fd0\u884c\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u6539\u53d8 <code>initial_suspend</code> \u7684\u8fd4\u56de\u7c7b\u578b\u4e3a <code>std::suspend_always</code>\uff0c\u8fd9\u5c06\u6302\u8d77\u534f\u7a0b\u5e76\u8fd4\u56de\u63a7\u5236\u7ed9\u8c03\u7528\u8005\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct LazyFunction;\n\ntemplate &lt;typename T&gt;\nstruct LazyFunctionPromise {\n    using handle_t = std::coroutine_handle&lt;LazyFunctionPromise&lt;T&gt;&gt;;\n    // Get the caller access to the handle\n    LazyFunction&lt;T&gt; get_return_object() {\n        return LazyFunction&lt;T&gt;{handle_t::from_promise(*this)};\n    }\n\n    // Immediately return control to the caller\n    std::suspend_always initial_suspend() noexcept { return {}; }\n    // Keep the coroutine alive so we can read the result\n    std::suspend_always final_suspend() noexcept { return {}; }\n\n    // Support for co_return\n    template &lt;std::convertible_to&lt;T&gt; Arg&gt;\n    void return_value(Arg&amp;&amp; result) {\n        result_ = std::forward&lt;Arg&gt;(result);\n    }\n    void unhandled_exception() {}\n    T result_;\n};\n</code></pre> <p>\u7531\u4e8e\u4e0d\u518d\u81ea\u52a8\u8fd0\u884c\u534f\u7a0b\uff0c\u6211\u4eec\u5c06\u542f\u52a8\u534f\u7a0b\u7684\u8d23\u4efb\u4ea4\u7ed9\u8fd4\u56de\u503c\u3002\u5f53\u6211\u4eec\u5c1d\u8bd5\u8bbf\u95ee\u8fd4\u56de\u503c\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u786e\u4fdd\u534f\u7a0b\u5df2\u7ecf\u5b8c\u6210\u8fd0\u884c\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct LazyFunction {\n    using promise_type = LazyFunctionPromise&lt;T&gt;;\n\n    // Store the coroutine handle\n    explicit LazyFunction(promise_type::handle_t handle)\n      : handle_(handle) {}\n\n    T get() {\n        // If the coroutine body has not finished running, resume it\n        if (not handle_.done())\n            handle_.resume();\n        return handle_.promise().result_;\n    }\n\n    operator T() { return get(); }\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u8bf7\u6ce8\u610f\uff0c<code>std::coroutine_handle</code> \u63d0\u4f9b\u4e86 <code>done</code> \u548c <code>resume</code> \u65b9\u6cd5\uff0c\u6211\u4eec\u901a\u8fc7\u6211\u4eec\u7684 RAII \u5305\u88c5\u5668\u5c01\u88c5\u5b83\u4eec\u3002</p> <pre><code>int main() {\n    auto coro = [] -&gt; LazyFunction&lt;int&gt; {\n        std::println(\"Running...\");\n        co_return 42;\n    };\n\n    {\n    auto x = coro();\n    int result = x.get(); // Run the coroutine and get the result\n    int other = x.get(); // Get the result\n\n    std::println(\"result == {}, other == {}\", result, other);\n    } // coroutine held by x destroyed\n\n    {\n    int y = coro(); // Same, but through implicit conversion,\n                    // coroutine is run and destroyed as part\n                    // of this expression.\n    std::println(\"y == {}\", y);\n    }\n}\n</code></pre>"},{"location":"blog/2024/11/24/c-coroutines/#generator","title":"\u521b\u5efa Generator","text":"<p>\u867d\u7136\u6807\u51c6\u5e93\u63d0\u4f9b\u4e86 <code>std::generator</code>\uff0c\u7f16\u5199\u6211\u4eec\u81ea\u5df1\u7684\u4ecd\u7136\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u7ec3\u4e60\uff0c\u4e5f\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u65b9\u5f0f\u5f15\u5165<code>co_yield</code>\u3002 \u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u53ea\u751f\u6210\u4e86\u4e00\u4e2a\u7ed3\u679c\u3002\u7136\u800c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 <code>co_yield</code> \u6765\u91cd\u590d\u751f\u6210\u503c\uff0c\u800c <code>co_return</code> \u4ec5\u7528\u4e8e\u63d0\u524d\u7ec8\u6b62\u3002 <code>co_yield</code>\u7c7b\u4f3c\u5e26\u53c2\u6570\u7684<code>co_return</code>\u3002\u4e0e\u524d\u9762\u7684\u4f8b\u5b50\u4e00\u6837\uff0c\u6211\u4eec\u5141\u8bb8\u4efb\u4f55\u53ef\u4ee5\u8f6c\u6362\u4e3a T \u7684\u53c2\u6570\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct Generator;\n\ntemplate &lt;typename T&gt;\nstruct GeneratorPromise {\n    using handle_t = std::coroutine_handle&lt;GeneratorPromise&lt;T&gt;&gt;;\n    // Get the caller access to the handle\n    Generator&lt;T&gt; get_return_object() {\n        return Generator&lt;T&gt;{handle_t::from_promise(*this)};\n    }\n\n    // Immediately return control to the caller\n    std::suspend_always initial_suspend() noexcept { return {}; }\n    // Keep the coroutine alive so we can read the final result\n    std::suspend_always final_suspend() noexcept { return {}; }\n\n    // Support for co_yield\n    template &lt;std::convertible_to&lt;T&gt; Arg&gt;\n    std::suspend_always yield_value(Arg&amp;&amp; result) {\n        result_ = std::forward&lt;Arg&gt;(result);\n        return {};\n    }\n    // Support for co_return\n    void return_void() {}\n    void unhandled_exception() {}\n    T result_;\n};\n</code></pre> <p><code>co_yield</code>\u4e0e<code>co_return</code>\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\u662f <code>co_yield</code>\u8fd4\u56de\u4e00\u4e2a <code>awaitable</code> \u7684\u503c\u3002\u8fd9\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u53e6\u4e00\u4e2a\u5b9a\u5236\u70b9\uff0c\u63a7\u5236\u5728<code>co_yield</code>\u7684\u8fd4\u56de\u7ed3\u679c\u4e4b\u540e\u7684\u534f\u7a0b\u6267\u884c\u6743\uff0c\u6709\u4e09\u79cd\u4e3b\u8981\u9009\u9879\uff1a</p> <ul> <li>\u534f\u7a0b\u7ee7\u7eed\u8fd0\u884c</li> <li>\u63a7\u5236\u8fd4\u56de\u7ed9\u8c03\u7528\u8005/\u6062\u590d\u8005</li> <li>\u63a7\u5236\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u534f\u7a0b</li> </ul> <p>\u5728 <code>Generator</code> \u4e2d\uff0c\u6211\u4eec\u5e0c\u671b\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ef\u4ee5\u8fd4\u56de\u6807\u51c6\u7684 <code>std::suspend_always</code>\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct Generator {\n    using promise_type = GeneratorPromise&lt;T&gt;;\n\n    // Store the coroutine handle\n    explicit Generator(promise_type::handle_t handle)\n      : handle_(handle) {}\n\n    bool exhausted() {\n        if (not handle_.done())\n            handle_.resume();\n        return handle_.done();\n    }\n\n    T get() {\n        return handle_.promise().result_;\n    }\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u540c\u65f6\uff0c\u6211\u4eec\u9700\u8981\u5728\u8fd4\u56de\u7c7b\u578b\u4e2d\u589e\u52a0\u4e00\u4e2a\u529f\u80fd\uff0c\u6765\u652f\u6301\u6062\u590d coroutine \u7684\u6267\u884c\uff0c\u4ee5\u751f\u6210\u4e0b\u4e00\u4e2a\u503c\u3002</p> <pre><code>int main() {\n    auto coro = [] -&gt; Generator&lt;int&gt; {\n        co_yield 1;\n        co_yield 2;\n        co_yield 3;\n        co_yield 4;\n        co_yield 5;\n        co_return;\n    };\n\n    auto empty = [] -&gt; Generator&lt;int&gt; {\n        co_return;\n    };\n\n\n    auto x = coro();\n    while (not x.exhausted()) {\n        int result = x.get();\n        std::println(\"result == {}\", result);\n    }\n\n    auto y = empty();\n    while (not y.exhausted()) {\n        int result = y.get();\n        std::println(\"result == {}\", result);\n    }\n}\n</code></pre> <p>\u867d\u7136\u8fd9\u4e2a\u5b9e\u73b0\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u5b83\u7684\u590d\u6742\u6027\u76f8\u5f53\u9ad8\u3002\u6211\u4eec\u5fc5\u987b\u5355\u72ec\u542f\u52a8 coroutine\uff0c\u68c0\u67e5\u5b83\u662f\u5426\u8017\u5c3d\uff08\u8fd9\u5c06\u6062\u590d coroutine\uff09\uff0c\u7136\u540e\u4ec5\u7136\u540e\u8bfb\u53d6\u5f53\u524d\u503c\u3002std::generator \u901a\u8fc7\u652f\u6301<code>range</code>\u63a5\u53e3\u6765\u514b\u670d\u8fd9\u4e2a\u590d\u6742\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u4eff\u7167\u4e3a\u81ea\u5df1\u7684 Generator \u4e5f\u5b9e\u73b0\u4e00\u4e2a\u3002 \u9996\u5148\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u8fed\u4ee3\u5668\u7c7b\u578b\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct Generator {\n    /*... */\n\n    struct iterator {\n        using value_type = T;\n        using difference_type = ptrdiff_t;\n\n        // Move-only interface\n        iterator(owning_handle&lt;promise_type&gt; handle) : handle_(std::move(handle)) {}\n        iterator(iterator&amp;&amp; other) noexcept : handle_{std::exchange(other.handle_, {})} {};\n        iterator&amp; operator=(iterator&amp;&amp; other) noexcept {\n            handle_ = std::exchange(other.handle_, {});\n            return *this;\n        }\n\n        // Read current value\n        T&amp; operator*() const {\n            return handle_.promise().result_;\n        }\n        // Advance the iterator\n        iterator&amp; operator++() {\n            assert(not handle_.done());\n            handle_.resume();\n            return *this;\n        }\n        void operator++(int) {\n            return ++*this;\n        }\n\n        // We are done when the coroutine is done\n        // done is called when we call iter == end()\n        friend bool operator==(const iterator&amp; i, std::default_sentinel_t) {\n            return i.handle_.done();\n        }\n    private:\n        owning_handle&lt;promise_type&gt; handle_;\n    };\n\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u4e3a\u907f\u514d\u7a7a\u7684 coroutine \u5bfc\u81f4\u7684\u95ee\u9898\uff0c\u6211\u4eec\u5728\u8fd4\u56de <code>begin</code> \u8fed\u4ee3\u5668\u65f6\u5fc5\u987b\u6062\u590d coroutine\u3002\u5982\u679c coroutine \u7acb\u5373\u5b8c\u6210\uff0c<code>handle_.done()</code> \u5c06\u8fd4\u56de true\uff0c\u8fd9\u610f\u5473\u7740 <code>begin == default_sentinel_t{}</code>\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct Generator {\n    /*... */\n    iterator begin() {\n        handle_.resume();\n        return iterator{std::move(handle_)};\n    }\n\n    std::default_sentinel_t end() const noexcept { return {}; }\n};\n</code></pre> <p>\u6709\u4e86\u4e0a\u8ff0\u7684<code>range</code>\u63a5\u53e3\uff0c\u6211\u4eec\u73b0\u5728\u53ef\u4ee5\u4f7f\u7528 range for \u5faa\u73af\u6765\u8fed\u4ee3\u6240\u6709\u751f\u6210\u7684\u503c\u3002</p> <pre><code>int main() {\n    auto coro = [] -&gt; Generator&lt;int&gt; {\n        co_yield 1;\n        co_yield 2;\n        co_yield 3;\n        co_return;\n    };\n\n    auto empty = [] -&gt; Generator&lt;int&gt; {\n        co_return;\n    };\n\n    for (auto result : coro()) {\n        std::println(\"result == {}\", result);\n    }\n\n    for (auto result : empty()) {\n        std::println(\"result == {}\", result);\n    }\n}\n</code></pre>"},{"location":"blog/2024/11/24/c-coroutines/#_7","title":"\u591a\u4efb\u52a1\u534f\u4f5c","text":"<p>\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u4e86\u89e3\u4e00\u79cd\u7531\u8c03\u7528\u65b9\u63a7\u5236\u7684<code>in-flight</code>\u534f\u7a0b\u3002\u534f\u7a0b\u66f4\u52a0\u6709\u8da3\u7684\u7528\u4f8b\u901a\u5e38\u8bbe\u8ba1\u7531\u8c03\u5ea6\u7a0b\u5e8f/\u6267\u884c\u7a0b\u5e8f\u63a7\u5236\u7684\u591a\u4e2a\u540c\u65f6\u6267\u884c\u7684\u534f\u7a0b\u3002 \u6211\u4eec\u53ef\u4ee5\u4ece\u4e00\u4e2a\u7b80\u5355\u7684\u534f\u4f5c\u5f0f\u591a\u4efb\u52a1\u5904\u7406\u6848\u4f8b\u5f00\u59cb\uff0c\u5176\u4e2d\u591a\u4e2a\u534f\u7a0b\u5171\u4eab\u540c\u4e00\u4e2a\u6267\u884c\u7ebf\u7a0b\uff0c\u5e76\u81ea\u613f\u653e\u5f03\u5bf9\u8be5\u7ebf\u7a0b\u7684\u63a7\u5236\u6743\uff0c\u8ba9\u5176\u4ed6\u534f\u7a0b\u8fd0\u884c\u3002 \u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u70b9\uff0c\u6211\u4eec\u9700\u8981\u4e86\u89e3 <code>awaitable</code> \u7c7b\u578b\u3002\u6211\u4eec\u5df2\u7ecf\u4e86\u89e3\u5230 <code>std::suspend_always</code>\uff08\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u8c03\u7528\u65b9\uff09\u548c <code>std::suspend_never</code>\uff08\u8ba9\u534f\u7a0b\u7ee7\u7eed\uff09\u3002\u6211\u4eec\u8fd8\u8ba8\u8bba\u4e86\u8fd4\u56de <code>awaitable</code> \u7684\u4e09\u79cd\u65b9\u6cd5\uff1a<code>initial_suspend</code>\u3001<code>final_suspend</code> \u548c <code>yield_value</code>\u3002 \u5728\u8fd9\u80cc\u540e\u6709\u4e00\u4e2a\u88ab\u9690\u85cf\u8d77\u6765\u7684 <code>co_await</code> \u5173\u952e\u5b57\uff0c\u4e3b\u8981\u662f\u56e0\u4e3a\u8fd9\u4e2a\u5173\u952e\u5b57\u51fa\u73b0\u5728\u7f16\u8bd1\u5668\u751f\u6210\u7684\u4ee3\u7801\u4e2d\u3002\u751f\u6210\u7684\u5bf9\u4e0a\u8ff0\u65b9\u6cd5\u7684\u8c03\u7528\u5177\u6709\u4ee5\u4e0b\u5f62\u5f0f\uff1a</p> <pre><code>co_await promise().initial_suspend();\nco_await promise().final_suspend();\nco_await promise().yield_value(arg); // \u7b49\u540c\u4e8e co_yield arg;\n</code></pre> <p>\u8fd9\u610f\u5473\u7740\u6211\u4eec\u5728\u8c03\u7528\u8fd9\u4e9b\u8fd4\u56de\u7684 <code>awaitable</code> \u7c7b\u578b\u7684\u65b9\u6cd5\u524d\u4f7f\u7528 <code>co_await</code>\u5173\u952e\u5b57\uff0c\u7136\u540e\uff0c\u8fd9\u53cd\u8fc7\u6765\u53c8\u63a7\u5236\u63a5\u4e0b\u6765\u4f1a\u53d1\u751f\u4ec0\u4e48\uff1a</p> <ul> <li>\u534f\u7a0b\u7ee7\u7eed\u8fd0\u884c</li> <li>\u63a7\u5236\u8fd4\u56de\u7ed9\u8c03\u7528\u8005/\u6062\u590d\u8005</li> <li>\u63a7\u5236\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u534f\u7a0b</li> </ul> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5728\u534f\u7a0b\u4e3b\u4f53\u4e2d\u76f4\u63a5\u8c03\u7528 <code>co_await</code>\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u8c03\u7528 <code>co_await std\uff1a\uff1asuspend_always{}</code>\uff0c\u6211\u4eec\u5c06\u6682\u505c\u534f\u7a0b\u5e76\u5c06\u63a7\u5236\u6743\u8fd4\u56de\u7ed9\u8c03\u7528\u8005\uff0c\u8c03\u7528\u8005\u53ef\u4ee5\u6839\u636e\u9700\u8981\u9500\u6bc1\u6216\u6062\u590d\u534f\u7a0b\u3002\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u672c\u8282\u4ecb\u7ecd\u7684\u8c03\u5ea6\u5668\uff08Scheduler\uff09\u6765\u505a\u8fd9\u4ef6\u4e8b\u60c5\u3002</p> <pre><code>struct Scheduler {\n    // Add a coroutine under the control of the scheduler\n    // \u5c06\u534f\u7a0b\u53e5\u67c4\u4fdd\u5b58\u5728Scheduler\u7684\u4e00\u4e2a\u5185\u90e8\u961f\u5217\u4e2d\n    void enqueue(std::coroutine_handle&lt;&gt; handle) const {\n        coroutines_.push_back(handle);\n    }\n\n    void run() const {\n        // As long as we have active coroutines, continue running\n        // \u8fd8\u6709\u6709\u534f\u7a0b\u5728\u8fd0\u884c\n        while (not coroutines_.empty()) {\n            // Grab the first coroutine from the queue\n            // \u62ff\u5230\u4e00\u4e2a\u8fd8\u672a\u6267\u884c\u5b8c\u6210\u7684\u534f\u7a0b\n            auto active = coroutines_.front();\n            coroutines_.pop_front();\n\n            // \u6062\u590d\u6267\u884c\n            active.resume();\n            // The coroutine is owned by the scheduler,\n            // meaning it is responsible for destroying it\n            if (active.done())\n                active.destroy();\n        }\n    }\n\n\n    WakeupAwaitable wake_up() const { return WakeupAwaitable{}; }\nprivate:\n    // Monostate\n    static std::list&lt;std::coroutine_handle&lt;&gt;&gt; coroutines_;\n};\nstd::list&lt;std::coroutine_handle&lt;&gt;&gt; Scheduler::coroutines_{};\n</code></pre> <p>\u8fd9\u4e5f\u662f\u6211\u4eec\u7b2c\u4e00\u6b21\u4f7f\u7528\u7c7b\u578b\u64e6\u9664\u7684 <code>std\uff1a\uff1acoroutine_handle&lt;&gt;</code>\u3002\u8c03\u5ea6\u7a0b\u5e8f\u4ec5\u7ba1\u7406\u534f\u7a0b\u7684\u751f\u547d\u5468\u671f\uff0c\u4e0d\u9700\u8981\u8bbf\u95ee\u4efb\u4f55\u534f\u7a0b\u5185\u7684\u7ec6\u8282\u3002 \u5bf9\u4e8e\u534f\u7a0b\u7c7b\u578b\uff0c\u6211\u4eec\u8fd4\u56de\u5230\u4e00\u4e2a\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u91cd\u8981\u7684\u9644\u52a0\u529f\u80fd\uff1a\u5c06\u534f\u7a0b\u7684\u6240\u6709\u6743\u79fb\u4ea4\u7ed9\u8c03\u5ea6\u7a0b\u5e8f\u7684 detach \u65b9\u6cd5\u3002</p> <pre><code>struct Task {\n    struct promise_type {\n        using handle_t = std::coroutine_handle&lt;promise_type&gt;;\n        // Get the caller access to the handle\n        Task get_return_object() {\n            return Task{handle_t::from_promise(*this)};\n        }\n        std::suspend_always initial_suspend() noexcept { return {}; }\n        std::suspend_always final_suspend() noexcept { return {}; }\n        void return_void() {}\n        void unhandled_exception() {}\n    };\n\n    void detach() {\n        // Give control of this coroutine to the scheduler\n        Scheduler{}.enqueue(handle_.detach());\n    }\n\n    // Store the coroutine handle\n    explicit Task(promise_type::handle_t handle)\n      : handle_(handle) {}\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u6700\u540e\u4e00\u90e8\u5206\u662f <code>awaitable</code> \u7c7b\u578b\uff0c\u5b83\u7528\u6765\u5b9e\u73b0\u6682\u505c\u4e00\u4e2a\u534f\u7a0b\u5e76\u8ba9\u5176\u4ed6\u534f\u7a0b\u8fd0\u884c\u3002</p> <pre><code>struct WakeupAwaitable {\n    // Opportunity for early continuation, returning true\n    // will let the coroutine continue without suspending.\n    // \u6700\u65e9\u6267\u884c\uff0c\u8fd4\u56detrue\u5219\u534f\u7a0b\u7ee7\u7eed\u6267\u884c\uff0c\u4e0d\u6302\u8d77\n    bool await_ready() { return false; }\n    // \u534f\u7a0b\u88ab\u6302\u8d77\u540e\u6267\u884c\n    // Called after the coroutine is suspended, controls\n    // what happens next. The void returning variant returns\n    // control to the caller.\n    void await_suspend(std::coroutine_handle&lt;&gt; ctx) {\n        // Re-schedule the suspended coroutine\n        // ctx is a handle to the suspended coroutine\n        Scheduler{}.enqueue(ctx);\n    }\n    // Called as the last part of evaluating co_await,\n    // the coroutine is resumed just before this call\n    // (if it was suspended in the first place).\n    // co_await\u8868\u8fbe\u5f0f\u7684\u6700\u540e\u4e00\u90e8\u5206\uff0c\u534f\u7a0b\u88ab\u6062\u590d\u540e\u6267\u884c\n    void await_resume() {}\n};\n</code></pre> <p>\u5f53\u534f\u7a0b\u6267\u884c <code>co_await WakeupAwaitable{}</code> \u65f6\uff0c\u5b83\u5c06\u88ab\u6682\u505c\uff0c\u63a7\u5236\u6743\u5c06\u8fd4\u56de\u7ed9\u8c03\u7528\u65b9\uff0c\u5373\u8c03\u5ea6\u7a0b\u5e8f\u3002</p>"},{"location":"blog/2024/11/24/c-coroutines/#asynchrony","title":"\u4f7f\u7528 asynchrony","text":"<p>\u4e0e asynchrony \u4ea4\u4e92\u65f6\uff0c\u60a8\u901a\u5e38\u9700\u8981\u4f7f\u7528\u534f\u7a0b\u4ee5\u6ee1\u8db3\u60a8\u7684\u7279\u5b9a\u9700\u6c42\u3002\u4f46\u662f\uff0c\u4e00\u79cd\u76f8\u5f53\u5bb9\u6613\u96c6\u6210\u7684\u5f02\u6b65\u7c7b\u578b\u662f time\u3002\u5b83\u8fd8\u5f15\u5165\u4e86\u4e00\u4e2a\u8c08\u8bba<code>await_transform</code>\u7684\u7edd\u4f73\u673a\u4f1a\u3002 \u4e3b\u8981\u53d8\u5316\u662f\u6211\u4eec\u7684\u8c03\u5ea6\u7a0b\u5e8f\uff0c\u5b83\u73b0\u5728\u9700\u8981\u4e00\u4e2a\u6709\u5e8f\u7684\u5bb9\u5668\u6765\u5b58\u50a8\u534f\u7a0b\u53e5\u67c4\uff0c\u6bcf\u4e2a\u53e5\u67c4\u4e5f\u9644\u52a0\u4e86\u5524\u9192\u65f6\u95f4\u3002</p> <pre><code>struct Scheduler {\n    using time_point = std::chrono::time_point&lt;std::chrono::system_clock&gt;;\n\n    // Add a coroutine under the control of the scheduler\n    void enqueue(std::coroutine_handle&lt;&gt; handle, time_point time = std::chrono::system_clock::now()) const {\n        pending_coroutines_.push(std::make_pair(time, handle));\n    }\n\n    void run() const {\n        while (not pending_coroutines_.empty()) {\n            if (pending_coroutines_.top().first &gt;\n                std::chrono::system_clock::now()) {\n                std::this_thread::sleep_until(pending_coroutines_.top().first);\n            }\n\n            auto active = pending_coroutines_.top().second;\n            pending_coroutines_.pop();\n\n            active.resume();\n\n            if (active.done())\n                active.destroy();\n        }\n    }\n\n    struct WakeupAwaitable {\n        // Opportunity for early continuation, returning true\n        // will let the coroutine continue without suspending.\n        bool await_ready() { return false; }\n        // Called after the coroutine is suspended, controls\n        // what happens next. The void returning variant returns\n        // control to the caller.\n        void await_suspend(std::coroutine_handle&lt;&gt; ctx) {\n            // The argument is a handle to the suspended coroutine.\n            Scheduler{}.enqueue(ctx, time_);\n        }\n        // Called as the last part of evaluating co_await,\n        // the coroutine is resumed just before this call\n        // (if it was suspended in the first place).\n        void await_resume() {}\n\n        time_point time_;\n    };\n\n    WakeupAwaitable wake_up() const { return WakeupAwaitable{std::chrono::system_clock::now()}; }\n    WakeupAwaitable wake_up(time_point time) const { return WakeupAwaitable{time}; }\nprivate:\n    // Monostate\n    using timed_coroutine = std::pair&lt;time_point, std::coroutine_handle&lt;&gt;&gt;;\n    static std::priority_queue&lt;timed_coroutine, std::vector&lt;timed_coroutine&gt;, std::greater&lt;&gt;&gt; pending_coroutines_;\n};\n\nstd::priority_queue&lt;Scheduler::timed_coroutine, std::vector&lt;Scheduler::timed_coroutine&gt;, std::greater&lt;&gt;&gt; Scheduler::pending_coroutines_{};\n</code></pre> <p>\u6269\u5c55\u4e0a\u4e00\u4e2a\u793a\u4f8b\u4e2d\u7684 Scheduler \u63a5\u53e3\u6765\u5b9e\u73b0\u8fd9\u4e2a\u9700\u6c42\uff0c\u4e00\u4e2a\u81ea\u7136\u7684\u505a\u6cd5\u662f <code>co_await Scheduler{}.wake_up\uff08time_point\uff09</code>;\u4f46\u662f\uff0c\u8fd9\u6709\u70b9\u9ebb\u70e6\u3002\u5982\u679c\u6211\u4eec\u80fd\u5199 <code>co_await time_point</code> \u4f1a\u5e72\u51c0\u5f97\u591a\u3002\u6211\u4eec\u53ef\u4ee5\u5728 <code>promise_type</code> \u4e0a\u4f7f\u7528 <code>await_transform</code> \u65b9\u6cd5\u6765\u5b9e\u73b0\u8fd9\u4e00\u70b9\u3002</p> <pre><code>struct promise_type {\n    using handle_t = std::coroutine_handle&lt;promise_type&gt;;\n    // Get the caller access to the handle\n    Task get_return_object() {\n        return Task{handle_t::from_promise(*this)};\n    }\n    std::suspend_always initial_suspend() noexcept { return {}; }\n    std::suspend_always final_suspend() noexcept { return {}; }\n    void return_void() {}\n    void unhandled_exception() {}\n    auto await_transform(std::chrono::time_point&lt;std::chrono::system_clock&gt; time) const {\n        return Scheduler{}.wake_up(time);\n    }\n};\n</code></pre> <p>\u4f46\u662f\uff0c\u5982\u679c <code>promise_type</code> \u5b9a\u4e49\u4e86\u81f3\u5c11\u4e00\u4e2a <code>await_transform</code>\uff0c\u5219\u53ea\u6709\u4e0e\u5176\u4e2d\u4e00\u4e2a <code>await_transform</code> \u91cd\u8f7d\u5339\u914d\u7684\u7c7b\u578b\u624d\u80fd\u4e0e <code>co_await</code> \u4e00\u8d77\u4f7f\u7528</p> <pre><code>int main() {\n    using namespace std::chrono;\n    auto coro = [] -&gt; Task {\n        auto time = system_clock::now();\n        std::println(\"{}\", system_clock::now());\n        co_await (time+200ms);\n        std::println(\"{}\", system_clock::now());\n        co_await (time+400ms);\n        std::println(\"{}\", system_clock::now());\n    };\n\n    coro().detach();\n    coro().detach();\n\n    Scheduler{}.run();\n}\n</code></pre>"},{"location":"blog/2024/11/24/c-coroutines/#_8","title":"\u53ef\u7b49\u5f85\u7684\u534f\u7a0b","text":"<p>\u6211\u4eec\u5c06\u4ecb\u7ecd\u7684\u6700\u540e\u4e00\u79cd\u534f\u7a0b\u7c7b\u578b\u662f <code>awaitable coroutine</code>\u3002\u5728\u524d\u9762\u7684\u793a\u4f8b\u4e2d\uff0c\u6211\u4eec\u8ba9\u534f\u7a0b\u7b49\u5f85\u4e8b\u4ef6\u3002 \u867d\u7136\u57fa\u4e8e\u4e8b\u4ef6\u7684\u89e6\u53d1\u5728\u5f02\u6b65\u7cfb\u7edf\u4e2d\u975e\u5e38\u5178\u578b\uff0c\u4f46\u6709\u65f6\u6211\u4eec\u5e0c\u671b\u7b49\u5f85\u64cd\u4f5c\u5b8c\u6210\u3002\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u5efa\u6a21\u4e3a\u534f\u7a0b\u4e5f\u975e\u5e38\u65b9\u4fbf\u3002 \u60a8\u53ef\u80fd\u8003\u8651\u76f4\u63a5\u8c03\u7528\u53e6\u4e00\u4e2a\u534f\u7a0b;\u4f46\u662f\uff0c\u8fd9\u6837\u5b58\u5728\u4ee5\u4e0b\u4e24\u4e2a\u95ee\u9898\uff1a</p> <ul> <li>\u64cd\u4f5c\u5b8c\u6210\u540e\u5982\u4f55\u6062\u590d\u7236\u534f\u7a0b\uff08\u8003\u8651\u5230\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u6682\u505c\u4ee5\u7b49\u5f85\u4e8b\u4ef6\u6216\u5176\u4ed6\u64cd\u4f5c\uff09\uff1f</li> <li>\u5728\u4e00\u4e2a\u4e25\u91cd\u4f9d\u8d56 coroutines \u7684\u7cfb\u7edf\u4e2d\uff0c\u6211\u4eec\u6700\u7ec8\u53ef\u80fd\u4f1a\u6709\u6570\u767e\u4e07\u4e2a\u6b63\u5728\u8fdb\u884c\u7684 coroutine\uff0c\u8fd9\u4e9b coroutine \u53ef\u80fd\u4f1a\u6df1\u5ea6\u5d4c\u5957\uff08\u6bd4 functions \u66f4\u6fc0\u8fdb\uff09\u3002\u6211\u4eec\u5982\u4f55\u907f\u514d\u5806\u6808\u7a7a\u95f4\u4e0d\u8db3\uff1f</li> </ul> <p>\u8fd9\u4e9b\u95ee\u9898\u53ef\u4ee5\u901a\u8fc7\u6dfb\u52a0\u4e00\u4e2a\u4f9d\u8d56\u4e8e\u5bf9\u79f0\u4f20\u8f93\u7684\u53ef\u7b49\u5f85\u7c7b\u578b\u6dfb\u52a0\u95f4\u63a5\u5c42\u6765\u89e3\u51b3\u3002</p> <pre><code>AwaitableTask child() {\n    co_return;\n}\n\nAwaitableTask parent() {\n    // Start child and wait until it is completed\n    co_await child();\n    co_return;\n}\n</code></pre> <p>\u6211\u4eec\u4ece\u57fa\u672c\u7684 Task \u63a5\u53e3\u5f00\u59cb\uff0c\u6211\u4eec\u4f7f\u7528 awaitable \u7c7b\u578b\u63a5\u53e3\u5bf9\u5176\u8fdb\u884c\u6269\u5c55\u3002</p> <pre><code>struct AwaitableTask {\n    struct promise_type {\n        using handle_t = std::coroutine_handle&lt;promise_type&gt;;\n        // Get the caller access to the handle\n        AwaitableTask get_return_object() {\n            return AwaitableTask{handle_t::from_promise(*this)};\n        }\n\n        std::suspend_always initial_suspend() noexcept { return {}; }\n        ContinuationAwaitable final_suspend() noexcept {\n            return { continuation_ };\n        }\n        void return_void() {}\n        void unhandled_exception() { std::terminate(); }\n\n        std::coroutine_handle&lt;&gt; continuation_{std::noop_coroutine()};\n    };\n\n    // Store the coroutine handle\n    explicit AwaitableTask(std::coroutine_handle&lt;promise_type&gt; handle)\n      : handle_(handle) {}\n\n    // Awaitable interface\n    bool await_ready() noexcept { return false; }\n    // When we await on the result of calling a coroutine\n    // the coroutine will start, but will also remember its caller\n    std::coroutine_handle&lt;&gt; await_suspend(std::coroutine_handle&lt;&gt; caller) noexcept {\n        // Remember the caller\n        handle_.promise().continuation_ = caller;\n        // Returning a coroutine handle will run the corresponding coroutine\n        return handle_.raw_handle();\n    }\n    void await_resume() {}\n\n    void run_until_completion() {\n        while (not handle_.done())\n            handle_.resume();\n    }\n\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u5f53\u6211\u4eec <code>co_await coroutine()</code> \u65f6\uff0c\u6211\u4eec\u5e0c\u671b\u534f\u7a0b\u6302\u8d77\uff0c\u4ece\u800c\u751f\u6210 <code>result</code> \u7c7b\u578b\u7684\u5b9e\u4f8b\u3002\u7136\u540e\uff0c<code>co_await</code> \u8fd0\u7b97\u7b26\u5c06\u8c03\u7528<code>awaitable</code>\u7684\u63a5\u53e3\uff0c\u5728\u672c\u4f8b\u4e2d\uff0c\u8be5\u63a5\u53e3\u4f7f\u7528 <code>await_supend</code> \u7684\u534f\u7a0b\u53e5\u67c4\u7248\u672c\u3002 \u6211\u4eec\u4ece <code>await_ready</code> \u8fd4\u56de <code>false</code> \u4ee5\u6682\u505c\u8c03\u7528\u65b9\uff0c\u7136\u540e\u8fd4\u56de\u88ab\u8c03\u7528\u65b9\u7684\u53e5\u67c4\u4ee5\u5f00\u59cb\u6267\u884c\u3002\u4f46\u662f\uff0c\u6211\u4eec\u8fd8\u4f1a\u8bb0\u4f4f\u8c03\u7528\u65b9\uff0c\u4ee5\u4fbf\u5728\u88ab\u8c03\u7528\u65b9\u5b8c\u6210\u6267\u884c\u540e\u6062\u590d\u5b83\u3002</p> <pre><code>struct ContinuationAwaitable {\n    bool await_ready() noexcept { return false; }\n    std::coroutine_handle&lt;&gt; await_suspend(std::coroutine_handle&lt;&gt;) noexcept {\n        return continuation_;\n    }\n    void await_resume() noexcept {}\n    std::coroutine_handle&lt;&gt; continuation_{std::noop_coroutine()};\n};\nstruct AwaitableTask {\n    struct promise_type {\n        using handle_t = std::coroutine_handle&lt;promise_type&gt;;\n        // Get the caller access to the handle\n        AwaitableTask get_return_object() {\n            return AwaitableTask{handle_t::from_promise(*this)};\n        }\n\n        std::suspend_always initial_suspend() noexcept { return {}; }\n        ContinuationAwaitable final_suspend() noexcept {\n            return { continuation_ };\n        }\n        void return_void() {}\n        void unhandled_exception() { std::terminate(); }\n\n        std::coroutine_handle&lt;&gt; continuation_{std::noop_coroutine()};\n    };\n\n    // Store the coroutine handle\n    explicit AwaitableTask(std::coroutine_handle&lt;promise_type&gt; handle)\n      : handle_(handle) {}\n\n    // Awaitable interface\n    bool await_ready() noexcept { return false; }\n    // When we await on the result of calling a coroutine\n    // the coroutine will start, but will also remember its caller\n    std::coroutine_handle&lt;&gt; await_suspend(std::coroutine_handle&lt;&gt; caller) noexcept {\n        // Remember the caller\n        handle_.promise().continuation_ = caller;\n        // Returning a coroutine handle will run the corresponding coroutine\n        return handle_.raw_handle();\n    }\n    void await_resume() {}\n\n    void run_until_completion() {\n        while (not handle_.done())\n            handle_.resume();\n    }\n\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u867d\u7136\u8fd9\u4e00\u5207\u90fd\u6709\u6548\uff0c\u4f46\u60a8\u53ef\u80fd\u60f3\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u5c06\u76f8\u540c\u7684\u903b\u8f91\u5e94\u7528\u4e8e\u51fd\u6570\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u60a8\u53ef\u4ee5\u3002<code>co_await</code> \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u662f <code>await_resume</code> \u7684\u7ed3\u679c\u3002</p> <pre><code>template &lt;typename T&gt;\nstruct AwaitableFunction {\n    struct promise_type {\n        using handle_t = std::coroutine_handle&lt;promise_type&gt;;\n        // Get the caller access to the handle\n        AwaitableFunction get_return_object() {\n            return AwaitableFunction{handle_t::from_promise(*this)};\n        }\n\n        std::suspend_always initial_suspend() noexcept { return {}; }\n        ContinuationAwaitable final_suspend() noexcept {\n            return { continuation_ };\n        }\n        // Same logic as in Function example\n        template &lt;std::convertible_to&lt;T&gt; Arg&gt;\n        void return_value(Arg&amp;&amp; result) {\n            result_ = std::forward&lt;Arg&gt;(result);\n        }\n        void unhandled_exception() { std::terminate(); }\n\n        std::coroutine_handle&lt;&gt; continuation_{std::noop_coroutine()};\n        T result_;\n    };\n\n    // Store the coroutine handle\n    explicit AwaitableFunction(std::coroutine_handle&lt;promise_type&gt; handle)\n      : handle_(handle) {}\n\n    // Awaitable interface\n    bool await_ready() noexcept { return false; }\n    // When we await on the result of calling a coroutine\n    // the coroutine will start, but will also remember its caller\n    std::coroutine_handle&lt;&gt; await_suspend(std::coroutine_handle&lt;&gt; caller) noexcept {\n        // Remember the caller\n        handle_.promise().continuation_ = caller;\n        // Returning a coroutine handle will run the corresponding coroutine\n        return handle_.raw_handle();\n    }\n    T await_resume() {\n        return handle_.promise().result_;\n    }\n\n    void run_until_completion() {\n        while (not handle_.done())\n            handle_.resume();\n    }\n\nprivate:\n    owning_handle&lt;promise_type&gt; handle_;\n};\n</code></pre> <p>\u8fd9\u5141\u8bb8\u6211\u4eec\u4ece\u53ef\u7b49\u5f85\u7684\u534f\u7a0b\u8fd4\u56de\u503c\uff0c\u5e76\u5c06\u4efb\u52a1\u4e0e\u51fd\u6570\u6df7\u5408\u548c\u5339\u914d\u3002</p> <pre><code>AwaitableFunction&lt;int&gt; child_func() {\n    co_return 42;\n}\n\nAwaitableTask other_parent() {\n    int v = co_await child_func();\n    std::println(\"Child returned: {}\", v);\n    co_return;\n}\n</code></pre>"},{"location":"blog/2024/11/24/c-coroutines/#_9","title":"\u7ed3\u8bba","text":"<p>\u901a\u8fc7\u672c\u7bc7\u6587\u7ae0\uff0c\u6211\u4eec\u4e86\u89e3\u4e86\u5176\u4e2d\u4e0d\u540c\u5f62\u5f0f\u7684 coroutine:</p> <ul> <li> <p>routine</p> </li> <li> <p>function</p> </li> <li> <p>lazy function</p> </li> <li> <p>generator</p> </li> <li> <p>cooperative tasks</p> </li> <li> <p>cooperative tasks with asynchrony</p> </li> <li> <p>awaitable coroutines</p> </li> </ul>"},{"location":"blog/2024/10/24/freecache/","title":"FreeCache","text":"<p>FreeCache \u662f\u4e00\u4e2a\u7528\u4e8e Go \u7684\u7f13\u5b58\u5e93\uff0c\u5177\u6709\u96f6 GC \u5f00\u9500\u548c\u9ad8\u5e76\u53d1\u6027\u80fd\u3002</p> <p>\u53f7\u79f0\u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u5b58\u50a8\u6570\u4ebf\u4e2a\u6761\u76ee</li> <li>\u96f6 GC \u5f00\u9500</li> <li>\u9ad8\u5e76\u53d1\u7ebf\u7a0b\u5b89\u5168\u8bbf\u95ee</li> <li>Pure Go \u5b9e\u73b0</li> <li>\u652f\u6301\u7f13\u5b58\u6761\u76ee\u8fc7\u671f</li> <li>\u63a5\u8fd1 LRU \u7b97\u6cd5\u7684\u7f13\u5b58\u6dd8\u6c70\u7b56\u7565</li> <li>\u4e25\u683c\u9650\u5236\u5185\u5b58\u4f7f\u7528</li> <li>\u9644\u5e26\u4e00\u4e2a\u73a9\u5177\u670d\u52a1\u5668\uff0c\u5b83\u652f\u6301\u4e00\u4e9b\u5e26\u6709 pipeline \u7684\u57fa\u672c Redis \u547d\u4ee4</li> <li>\u8fed\u4ee3\u5668\u652f\u6301</li> </ul> <p>\u57fa\u672c\u4f7f\u7528\uff1a <pre><code>// In bytes, where 1024 * 1024 represents a single Megabyte, and 100 * 1024*1024 represents 100 Megabytes.\ncacheSize := 100 * 1024 * 1024\ncache := freecache.NewCache(cacheSize)\ndebug.SetGCPercent(20)\nkey := []byte(\"abc\")\nval := []byte(\"def\")\nexpire := 60 // expire in 60 seconds\ncache.Set(key, val, expire)\ngot, err := cache.Get(key)\nif err != nil {\n    fmt.Println(err)\n} else {\n    fmt.Printf(\"%s\\n\", got)\n}\naffected := cache.Del(key)\nfmt.Println(\"deleted key \", affected)\nfmt.Println(\"entry count \", cache.EntryCount())\n</code></pre></p>"},{"location":"blog/2024/10/24/freecache/#_1","title":"\u6838\u5fc3\u7c7b","text":""},{"location":"blog/2024/10/24/freecache/#cache","title":"Cache","text":"<p><code>Cache</code> \u662f FreeCache \u7684\u4f7f\u7528\u5165\u53e3\uff0c\u7531\u591a\u4e2a segment \u5206\u7247\u7ec4\u6210\uff0c\u6bcf\u4e2a segment \u5206\u7247\u4e00\u628a\u9501\uff0c\u51cf\u8f7b\u9501\u4e89\u7528\u538b\u529b\u3002 <pre><code>// Cache is a freecache instance.\ntype Cache struct {\n    locks    [segmentCount]sync.Mutex\n    segments [segmentCount]segment\n}\n</code></pre></p>"},{"location":"blog/2024/10/24/freecache/#ringbuffer","title":"RingBuffer","text":"<p>RingBuffer \u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u7f13\u51b2\u533a\uff0c\u5f53\u5199\u5165\u6570\u636e\u8d85\u8fc7 RingBuffer \u7684\u957f\u5ea6\u65f6\uff0c\u4f1a\u5faa\u73af\u590d\u7528\u7f13\u51b2\u533a\u5f00\u7aef\u7684\u5185\u5b58\uff0c\u53ef\u4ee5\u770b\u505a\u4e00\u4e2a\u73af\u5f62\u7684\u7f13\u51b2\u533a\u3002FreeCache \u4e2d\u7684 RingBuffer \u63d0\u4f9b\u4e00\u79cd\u9762\u5411\u6d41\u5f0f\u6570\u636e\u5199\u5165\u7684\u63a5\u53e3\uff0c\u6570\u636e\u7ed3\u6784\u5b9a\u4e49\u5982\u4e0b\uff1a</p> <pre><code>// Ring buffer has a fixed size, when data exceeds the\n// size, old data will be overwritten by new data.\n// It only contains the data in the stream from begin to end\ntype RingBuf struct {\n    begin int64 // beginning offset of the data stream.\n    end   int64 // ending offset of the data stream.\n    data  []byte\n    index int //range from '0' to 'len(rb.data)-1'\n}\n</code></pre> <p><code>begin</code> \u548c <code>end</code> \u6307\u5411\u7684\u662f\u8f93\u5165\u6570\u636e\u6d41\u4e2d\u7684\u5f00\u59cb\u7ed3\u675f\u7d22\u5f15\uff0c<code>index</code> \u662f\u6307 rb.data \u7684\u7d22\u5f15\uff0c<code>index</code> \u603b\u662f\u5728\u533a\u95f4 [0,len(rb.data)-1] \u4e2d\u3002</p> <p></p>"},{"location":"blog/2024/10/24/freecache/#_2","title":"\u5199\u5165","text":"<p>\u6570\u636e\u5199\u5165 RingBuffer \u5373\u662f\u666e\u901a\u7684\u5185\u5b58\u62f7\u8d1d\u64cd\u4f5c\uff0c\u5173\u952e\u5728\u4e8e\u5982\u4f55\u5904\u7406\u51e0\u4e2a\u7d22\u5f15\uff0c\u5047\u8bbe RingBuffer \u7684\u7f13\u51b2\u533a\u4e00\u5171 size \u5b57\u8282\u957f\u5ea6\uff0c\u8981\u5199\u5165 n \u5b57\u8282,\u6709\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\u3002</p> <ul> <li>n &lt;= (size-index+1) : \u4e0d\u4f1a\u51fa\u73b0\u5faa\u73af\u56de\u7f13\u51b2\u533a\u5f00\u59cb\u7684\u60c5\u51b5\uff0c\u76f4\u63a5 append \u5373\u53ef\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b index=index+n\u3002</li> <li>n &gt;  (size-index+1): \u9700\u8981\u5faa\u73af\u56de\u5934\u5199\uff0c\u5219 n \u5b57\u8282\u4e00\u90e8\u5206\u5199\u5165 buffer \u5c3e\u90e8\uff0c\u4e00\u90e8\u5206\u5199\u5165\u5934\u90e8\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff1aindex=index+n-size\u3002</li> </ul> <p>\u800c\u7531\u4e8e rb \u7684\u7f13\u51b2\u533a\uff0c\u81f3\u591a\u4fdd\u5b58 size \u5b57\u8282\u7684\u5185\u5bb9\uff0c\u56e0\u6b64\u5bf9\u4e8e\u8f93\u5165\u6570\u636e\u6d41\uff0c\u5982\u679c rb.end-rb.begin \u6bd4 size \u8fd8\u5927\uff0c\u90a3\u4e48 rb.begin = rb.end-size\u3002</p>"},{"location":"blog/2024/10/24/freecache/#_3","title":"\u8bfb\u53d6","text":"<p>\u8bfb\u53d6\u6d41\u7a0b\u4e0e\u5199\u5165\u76f8\u5dee\u65e0\u51e0\uff0c\u4e5f\u662f\u8981\u5904\u7406\u51e0\u4e2a\u7d22\u5f15\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p>"},{"location":"blog/2024/10/24/freecache/#_4","title":"\u968f\u673a\u8bfb\u5199","text":"<p>\u7531\u4e8e\u8be5 RingBuffer \u662f\u9762\u5411\u4e00\u4e2a\u8f93\u5165\u6570\u636e\u6d41\u7684\uff0c\u56e0\u6b64\u63d0\u4f9b\u7684\u8bfb\u53d6\u3001\u5199\u5165\u63a5\u53e3\u4e5f\u662f\u9762\u5411\u6570\u636e\u6d41\u7684 offset \u7684\u3002 <pre><code>func (rb *RingBuf) ReadAt(p []byte, off int64) (n int, err error)\nfunc (rb *RingBuf) WriteAt(p []byte, off int64) (n int, err error)\n</code></pre></p> <p>\u5176\u4e2d off \u662f\u76f8\u5bf9\u4e8e\u8f93\u5165\u6570\u636e\u6d41\u7684\u504f\u79fb\u3002\u56e0\u6b64\uff0c\u5728\u8bfb\u5199\u6570\u636e\u4e4b\u524d\uff0c\u8981\u5c06\u8be5 offset \u8f6c\u6362\u6210\u5b9e\u9645 rb \u7f13\u51b2\u533a\u7684\u504f\u79fb\uff08dataOff\uff09\u3002\u5bf9\u4e8e rb \u7f13\u51b2\u533a\uff0c\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u88ab\u8f93\u5165\u6570\u636e\u6d41\u586b\u6ee1\uff0c\u6b64\u65f6 off-&gt;dataOff \u7684\u8f6c\u6362\u5173\u7cfb\u4e3a\uff1adataOff = rb.index + int(off-rb.begin) \u4e14\u5982\u679c\u6d89\u53ca\u5230\u5faa\u73af\u56de\u5934\uff0c\u5219\u9700\u8981\u51cf\u53bb\u4e00\u4e2a size\u3002</li> <li>\u672a\u88ab\u8f93\u5165\u6570\u636e\u6d41\u586b\u6ee1\uff0c\u5219\u6b64\u65f6\u8f6c\u6362\u5173\u7cfb\u4e3a\uff1adataOff = int(off - rb.begin) \u4e14\u5982\u679c\u6d89\u53ca\u5230\u5faa\u73af\u56de\u5934\uff0c\u5219\u9700\u8981\u51cf\u53bb\u4e00\u4e2a size\u3002</li> </ul> <p>\u5b8c\u6210 off-&gt;dataOff \u7684\u8f6c\u6362\u4e4b\u540e\uff0c\u8bfb\u5199\u6d41\u7a0b\u5219\u548c\u4e0a\u8ff0\u666e\u901a\u7684\u8bfb\u5199\u6d41\u7a0b\u65e0\u5f02\u3002</p>"},{"location":"blog/2024/10/24/freecache/#_5","title":"\u6570\u636e\u8fc1\u79fb","text":"<p>RingBuffer \u63d0\u4f9b\u5982\u4e0b\u63a5\u53e3\uff0c\u7528\u6765\u5b9e\u73b0\u8bfb\u53d6\u6570\u636e\u6d41\u4e2d\u504f\u79fb\u4e3a off \u957f\u5ea6\u4e3a length \u7684\u6570\u636e\uff0c\u5e76\u91cd\u65b0\u5199\u5165\u6570\u636e\u6d41\u3002\u8be5\u63a5\u53e3\u7684\u4e3b\u8981\u4f5c\u7528\u4e3a\u9632\u6b62\u65e7\u6570\u636e\u88ab\u65b0\u5199\u5165\u6570\u636e\u8986\u76d6\u3002 <pre><code>func (rb *RingBuf) Evacuate(off int64, length int) (newOff int64)\n</code></pre> \u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u8f6c\u5316 off \u4e3a\u7f13\u51b2\u533a\u7d22\u5f15 dataOff<ul> <li>\u5982\u679c dataOff == rb.index,\u5219\u91cd\u65b0\u5199\u5165\u65e0\u9700\u62f7\u8d1d\uff0c\u76f4\u63a5\u4fee\u6539 index \u7684\u503c\u5373\u53ef\u3002</li> <li>\u5982\u679c dataOff &lt; rb.index,\u5219\u5411\u7f13\u51b2\u533a\u5185 append \u533a\u95f4[dataOff:dataOff+length]\u7684\u6570\u636e\uff0c\u9700\u8981\u5904\u7406 index \u5faa\u73af\u56de\u5934\u7684\u60c5\u51b5\u3002</li> <li>\u5982\u679c dataOff&gt;rb.index\uff0c\u4e0e\u4e8c\u7c7b\u4f3c\uff0c\u5bf9 index \u7684\u5904\u7406\u6709\u5dee\u522b\u3002</li> </ul> </li> <li>\u8fd4\u56de\u8f6c\u79fb\u4e4b\u524d\u7684\u6570\u636e\u6d41\u7ed3\u675f\u7d22\u5f15 end\uff0c\u5373\u8fc1\u79fb\u6570\u636e\u5757\u8fc1\u79fb\u4e4b\u540e\u7684\u8d77\u59cb offset\u3002</li> </ul> <p>\u53ef\u89c1\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u53ea\u662f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6570\u636e\u8fc1\u79fb\u7684\u65b9\u6cd5\uff0cRingBuffer \u5bf9\u8f93\u5165\u6d41\u7684\u6709\u6548\u6027\u4e0d\u505a\u4fdd\u8bc1\uff0c\u9700\u8981\u8c03\u7528\u65b9\u4fdd\u8bc1\uff0c\u5373\u8981\u4fdd\u8bc1\u91cd\u65b0\u8fc1\u79fb\u7684\u6570\u636e\u91cd\u65b0\u5199\u5165\u65f6\u4e0d\u4f1a\u8986\u76d6\u9664\u8fc1\u79fb\u6570\u636e\u5757\u4e4b\u5916\u7684\u5185\u5bb9\u3002</p>"},{"location":"blog/2024/10/24/freecache/#segment","title":"Segment","text":"<p>Segment \u6709\u51e0\u4e2a\u6838\u5fc3\u7684\u6570\u636e\u7ed3\u6784\uff1a</p> <ul> <li><code>entryPtr</code>: \u6807\u8bc6 RingBuffer \u4e2d\u7684\u6570\u636e\u6d41\u8d77\u59cb Offset\uff0c\u4fdd\u5b58 key \u7684 hash16\u3001\u957f\u5ea6\u3002</li> <li><code>slot</code>\uff1aentryPtr \u6570\u7ec4\uff0c\u6309\u7167 hash16 \u5347\u5e8f\u6392\u5217\u3002\u67e5\u627e\u65f6\u53ef\u7528\u4e8c\u5206\u3002</li> <li><code>entryHdr</code>\uff1a\u4fdd\u5b58 key/value \u6570\u636e\u7684\u4e00\u4e9b\u57fa\u672c\u4fe1\u606f\uff0c\u5305\u62ec\u8fc7\u671f\u65f6\u95f4\u3001key \u957f\u5ea6\u3001hash16\u3001val \u5b9e\u9645\u957f\u5ea6\u4ee5\u53ca\u5728 RingBuffer \u4e2d\u7528\u6765\u4fdd\u5b58 val \u7684\u7f13\u51b2\u533a\u957f\u5ea6\u3001slotid\uff0c\u662f\u5426\u5df2\u7ecf\u88ab\u5220\u9664\u3002</li> </ul> <p>\u4e00\u4e2a Segment \u4e00\u5171\u6709 256 \u4e2a slot\uff0c\u6240\u6709 slot \u7684 cap \u662f\u4e00\u6837\u7684\uff0c\u4f46\u5b9e\u9645\u957f\u5ea6\u5404\u5f02\u3002</p> <p></p>"},{"location":"blog/2024/10/24/freecache/#_6","title":"\u5199\u5165","text":"<p>\u4ece\u5199\u5165 key \u7684 64 \u4f4d hash \u63d0\u53d6\u51fa hash16 \u4ee5\u53ca slotId\u3002 <pre><code>// hashVal: 32|16       |8      |8\n//            |hash16   |slotId1\n</code></pre> \u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li> <p>\u5224\u65ad\u662f\u5426\u4e3a\u66f4\u65b0   \u901a\u8fc7 hash16 \u4e8c\u5206\u67e5\u627e slot \u4e2d\u5bf9\u5e94\u7684 entryPtr \u5de6\u8fb9\u754c\uff0c\u627e\u5230\u5bf9\u5e94\u7684 entryPtr\uff0c\u5982\u679c\u548c set \u7684\u952e\u503c\u4e00\u81f4\u5219\u4e3a\u66f4\u65b0\uff0c\u5426\u5219\u4e3a\u65b0\u589e\u3002</p> </li> <li> <p>\u66f4\u65b0   \u68c0\u67e5\u662f\u5426\u80fd\u539f\u5730\u66f4\u65b0\uff0c\u5373\u63d2\u5165\u65f6\u9884\u7559\u7684 cap \u4e0e\u5f53\u524d\u63d2\u5165\u7684 value len \u5bf9\u6bd4\uff0c\u80fd\u539f\u5730\u66f4\u65b0\u5219\u76f4\u63a5\u66f4\u65b0\u6570\u636e\uff0c\u5426\u5219\u9700\u8981\u5220\u9664\u65e7 KV\u3002\u800c\u540e\u8f6c\u5165\u63d2\u5165\u6570\u636e\u6d41\u7a0b\u3002</p> </li> <li> <p>\u65b0\u589e   \u7ec4\u7ec7\u597d entryHdr \u4e2d\u7684\u4fe1\u606f\uff0c\u8f6c\u5165\u63d2\u5165\u6570\u636e\u6d41\u7a0b\u3002</p> </li> <li> <p>\u63d2\u5165\u6570\u636e   \u6309\u9700\u8fc1\u79fb\u6570\u636e\uff0c\u817e\u632a\u51fa\u5f85\u63d2\u5165\u6570\u636e\u7684\u7a7a\u95f4\uff0c\u63d2\u5165\u65b0\u6570\u636e\u3002</p> </li> </ul> <p>\u5b50\u6d41\u7a0b\uff1a  </p> <ul> <li>\u5220\u9664   slot \u4e2d\u5220\u9664 entryPtr\uff0crb \u4e2d\u6807\u8bb0 entryHdr \u4e2d delete \u4e3a true\u3002</li> <li>\u9a71\u9010   \u817e\u632a\u65f6\u9047\u5230\u5df2\u6807\u8bb0\u5220\u9664\u7684 entry \u5219\u76f4\u63a5\u590d\u7528\u7a7a\u95f4\uff0c\u9047\u5230\u672a\u5220\u9664\u7684\u5206\u60c5\u51b5\u5224\u65ad\uff1a  </li> <li>\u8fc7\u671f\u3001lru\u3001\u8fde\u7eed\u4e94\u6b21\u817e\u632a rb \u4e2d\u7684\u6570\u636e\uff1a\u76f4\u63a5\u9a71\u9010\u8be5 entry\u3002  </li> <li>\u817e\u632a rb \u4e2d\u7684 entry\uff0c\u5373\u5c06\u4e0b\u4e00\u4e2a entry \u8bfb\u51fa\u91cd\u65b0\u5199\u5165\uff0c\u590d\u7528\u73b0\u5728\u7684\u8fd9\u6bb5\u7a7a\u95f4\u3002</li> </ul> <p>\u4e0a\u8ff0\u9a71\u9010\u7b56\u7565\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5728\u9891\u7e41\u63d2\u5165\u65f6\uff0c\u9a71\u9010\u7684 entry \u5e76\u4e0d\u7b26\u5408 LRU \u7684\u7b56\u7565\uff0c\u8fd9\u662f\u56e0\u4e3a\u9891\u7e41\u89e6\u53d1\u4e86\u300e\u8fde\u7eed\u4e94\u6b21\u817e\u632a rb \u4e2d\u7684\u6570\u636e\u300f\u7b56\u7565\u3002</p>"},{"location":"blog/2024/10/24/freecache/#_7","title":"\u8bfb\u53d6","text":"<p>\u83b7\u53d6 entryPtr \u8bfb\u53d6 rb \u4e2d\u6570\u636e\u5373\u53ef\u3002</p>"},{"location":"blog/2024/10/24/freecache/#lru","title":"LRU \u5b9e\u73b0","text":"<p>segment \u4e2d\u4fdd\u5b58\u6240\u6709 entry \u7684\u6700\u5927 access \u65f6\u95f4\u603b\u548c\uff1a</p> <ul> <li>\u4e00\u4e2a entry \u88ab\u6dfb\u52a0\u65f6\uff1atotal+now</li> <li>\u4e00\u4e2a entry \u88ab\u66f4\u65b0\u65f6\uff1atotal+(now-prev_access)</li> <li>\u4e00\u4e2a entry \u88ab\u83b7\u53d6\u65f6\uff1atotal+(now-prev_access)</li> <li>\u4e00\u4e2a entry \u88ab\u5220\u9664\u65f6\uff1atotal-prev_access</li> </ul> <p>\u5728\u817e\u632a\u7a7a\u95f4\u65f6\u7684\u9a71\u9010\u7b56\u7565\u4e2d\uff0c\u901a\u8fc7 total \u6765\u5b9e\u73b0\u7c7b\u4f3c LRU \u7684\u6dd8\u6c70\u7b56\u7565\uff1a <pre><code>leastRecentUsed := int64(oldHdr.accessTime)*atomic.LoadInt64(&amp;seg.totalCount) &lt;= atomic.LoadInt64(&amp;seg.totalTime)\n</code></pre></p> <p>\u5373\uff1a\u5982\u679c\u6309\u7167 seg \u4e2d\u6240\u6709 entry \u7684\u6700\u5927 access time \u90fd\u662f\u8be5 entry \u7684 access time\uff0c\u90a3\u4e48 total \u7684\u503c\u4e0e\u5b9e\u9645 total \u503c\u5bf9\u6bd4\uff0c\u5c0f\u4e8e\u5219\u8bc1\u660e\u8be5 entry \u7684 access time \u5c0f\u4e8e\u6240\u6709 entry \u8bbf\u95ee\u65f6\u95f4\u7684\u5e73\u5747\u503c\uff0c\u5c5e\u4e8e\u8f83\u5c11\u88ab\u8bbf\u95ee\u7684\uff0c\u5219\u8ba4\u4e3a\u8be5 entry \u53ef\u4ee5\u88ab\u6dd8\u6c70\u3002</p>"},{"location":"blog/2024/10/24/freecache/#_8","title":"\u53c2\u8003","text":"<ul> <li>FreeCache</li> </ul>"},{"location":"blog/2024/10/24/go-%E7%AC%94%E8%AE%B0/","title":"Go \u7b14\u8bb0","text":""},{"location":"blog/2024/10/24/go-%E7%AC%94%E8%AE%B0/#_1","title":"\u57fa\u7840","text":"<p>make \u8bed\u6cd5 <pre><code>// \u521d\u59cb cap \u4e3a 10\uff0clen \u4e3a 0\nslice = make([]int, 0, 10)\n\n// \u521d\u59cb cap \u4e3a 10\uff0clen \u4e3a 10\nslice = make([]int, 10)\n\n// \u521d\u59cb map\uff0c\u6ca1\u6709 size \u53c2\u6570\ndict = make(map[int]int)\n\n// \u521d\u59cb channel\nch1 = make(chan int) // \u65e0\u7f13\u51b2\nch1 = make(chan int,10) // \u6709\u7f13\u51b2\n</code></pre></p> <p>slice \u64cd\u4f5c</p> <p>\u53ef\u4ee5\u901a\u8fc7 <code>[lower-bound:upper-bound]</code> \u6765\u622a\u53d6\u5207\u7247\uff0c\u5176\u4e2d <code>upper-bound</code> \u53ef\u4ee5\u8d85\u51fa <code>len</code> \u4f46\u4e0d\u80fd\u8d85\u8fc7 <code>cap</code>\u3002\u5982\u4e0b\u64cd\u4f5c\uff1a</p> <pre><code>slice := make([]int,0,10)\nsliceRef := slice[1:cap(slice)]\n\nfmt.Println(slice) // len:0 cap:10\nfmt.Println(sliceRef) // len:9 cap:9\n</code></pre> <p><code>append</code> \u5fc5\u987b\u8981\u4f7f\u7528\u8fd4\u56de\u503c\uff0c\u53ef\u80fd\u4f1a\u89e6\u53d1\u5207\u7247\u6269\u5bb9\uff0c\u5bfc\u81f4\u5207\u7247\u5e95\u5c42\u7684\u5185\u5b58\u53d8\u5316\uff0c\u4f7f\u7528\u4e4b\u524d\u7684 slice header \u4f1a\u5bfc\u81f4\u5185\u5b58\u8bbf\u95ee\u9519\u8bef\u3002 <pre><code>slice = append(slice,1)\n</code></pre></p> <p>slice \u4e4b\u95f4\u8d4b\u503c\u90fd\u53ea\u662f\u590d\u5236\u4e86\u4e00\u4e2a\u5bf9\u5e95\u5c42\u5185\u5b58\u7a7a\u95f4\u7684\u5f15\u7528\uff0c\u8fd8\u662f\u5171\u4eab\u5e95\u5c42\u5185\u5b58\u7684\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>copy</code> \u6765\u62f7\u8d1d\u4e00\u4e2a\u5207\u7247\u5230\u53e6\u4e00\u4e2a\u5207\u7247\uff0c\u76ee\u6807\u5207\u7247\u9700\u8981\u6709\u8db3\u591f\u7684\u7a7a\u95f4\uff0c\u5426\u5219\u53ea\u4f1a\u6700\u591a\u590d\u5236\u5230 <code>len(dst)</code>\u3002</p> <pre><code>slice := []int{1,2,3}\nsliceCopy := make([]int,6)\ncopy(sliceCopy,slice)\nfmt.Println(sliceCopy)\n</code></pre> <p>type assert</p> <pre><code>// \u7c7b\u578b\u65ad\u8a00\nslice, ok := x.([]int)\n</code></pre> <p>type switch <pre><code>// \u7c7b\u578b\u5224\u65ad\nswitch v := interface{}(slice).(type) {\ncase []int:\n    fmt.Println(\"slice\")\n}\n</code></pre></p> <p>generic <pre><code>// \u6cdb\u578b\nfunc generic[T any](slice []T) []T {\n    return slice\n}\n</code></pre></p>"},{"location":"blog/2024/10/24/go-%E7%AC%94%E8%AE%B0/#_2","title":"\u8e29\u5751","text":"<p>Q: \u5982\u4e0b\u4ee3\u7801\u4f1a\u8f93\u51fa\u4ec0\u4e48\uff1f <pre><code>func rangeTest() []*int {\n    slice := []int{\n        1, 2, 3, 4, 5, 6, 7, 8, 9, 10,\n    }\n\n    temp := []*int{}\n    for _, v := range slice {\n        temp = append(temp, &amp;v) \n    }\n    return temp\n}\n\nfunc main() {\n    slice := rangeTest()\n    for _, v := range slice {\n        fmt.Println(*v)\n    }\n}\n</code></pre> A: \u5728 Go 1.22 \u4e4b\u524d\uff0c\u4f1a\u5168\u90e8\u8f93\u51fa 10\uff1b\u5728 Go 1.22 \u4e4b\u540e\uff0c\u4f1a\u8f93\u51fa 1 \u5230 10\u30021.22 \u7248\u672c Fix \u4e86\u8fd9\u4e2a\u95ee\u9898\uff0c\u8be6\u89c1 loopvar\u3002</p> <p>Q: sync.Pool \u7684\u4f7f\u7528</p>"},{"location":"blog/2024/10/24/go-%E7%AC%94%E8%AE%B0/#_3","title":"\u5176\u4ed6","text":""},{"location":"blog/2024/10/24/go-%E7%AC%94%E8%AE%B0/#embed-binary","title":"\u4f7f\u7528 embed \u5c06\u6587\u4ef6\u5d4c\u5165 Binary \u4e2d","text":"<p>\u5728Go\u4e2d\uff0c\u4ece 1.16 \u7248\u672c\u5f00\u59cb\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u7279\u6027\u6765\u5185\u5d4c\u6587\u4ef6\uff1a<code>//go:embed</code> \u6307\u4ee4\u3002\u8fd9\u4f7f\u5f97\u4f60\u53ef\u4ee5\u5c06\u6587\u4ef6\u548c\u6587\u4ef6\u5939\u76f4\u63a5\u5185\u5d4c\u5230\u4f60\u7684 Go \u4e8c\u8fdb\u5236\u7a0b\u5e8f\u4e2d\u3002\u4f7f\u7528\u8fd9\u4e2a\u6307\u4ee4\uff0c\u4f60\u53ef\u4ee5\u8bfb\u53d6\u5185\u5d4c\u7684\u6587\u4ef6\uff0c\u5c31\u50cf\u64cd\u4f5c\u666e\u901a\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6587\u4ef6\u4e00\u6837\uff0c\u4f46\u5b83\u4eec\u5b9e\u9645\u4e0a\u662f\u88ab\u7f16\u8bd1\u8fdb\u4f60\u7684\u7a0b\u5e8f\u4e2d\u7684\u3002 \u5982\u679c\u4f60\u60f3\u8981\u5185\u5d4c\u4e00\u4e2a\u76ee\u5f55\u4e2d\u7684\u6240\u6709 .yaml \u6587\u4ef6\uff0c\u4f60\u53ef\u4ee5\u91c7\u53d6\u5982\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u5bfc\u5165 <code>embed</code> \u5305 <pre><code>import (\n    \"embed\"\n    // ... \u5176\u4ed6\u5bfc\u5165\n)\n</code></pre></li> <li>\u4f7f\u7528 <code>//go:embed</code> \u6307\u4ee4\uff1a\u8be5\u6307\u4ee4\u4f1a\u5185\u5d4c\u4e0e Go \u6e90\u6587\u4ef6\u540c\u4e00\u76ee\u5f55\u4e2d\u7684\u6240\u6709 .yaml \u6587\u4ef6\u3002\u8fd9\u4e2a <code>yamlFiles</code> \u53d8\u91cf\u5f97\u5230\u7684\u662f\u4e00\u4e2a <code>embed.FS</code> \u7c7b\u578b\u7684\u6587\u4ef6\u7cfb\u7edf\u5bf9\u8c61\uff0c\u4f60\u53ef\u4ee5\u50cf\u4f7f\u7528\u5176\u4ed6\u4efb\u4f55\u6587\u4ef6\u7cfb\u7edf\u4e00\u6837\u6765\u4f7f\u7528\u5b83\u3002 <pre><code>//go:embed *.yaml\nvar yamlFiles embed.FS\n</code></pre></li> <li>\u8bbf\u95ee\u5185\u5d4c\u6587\u4ef6\uff1a\u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684io/fs\u5305\u4e2d\u7684\u51fd\u6570\u6765\u8bbf\u95ee\u8fd9\u4e9b\u6587\u4ef6\u3002 <pre><code>import (\n    \"embed\"\n    \"io/fs\"\n    \"log\"\n)\n\n//go:embed *.yaml\nvar yamlFiles embed.FS\n\nfunc main() {\n    // \u83b7\u53d6\u6587\u4ef6\u5217\u8868\n    fileEntries, err := fs.ReadDir(yamlFiles, \".\")\n    if err != nil {\n        log.Fatal(err)\n    }\n\n    for _, fileEntry := range fileEntries {\n        bytes, err := fs.ReadFile(yamlFiles, fileEntry.Name())\n        if err != nil {\n            log.Fatal(err)\n        }\n\n        // \u8fd9\u91cc\u53ef\u4ee5\u5904\u7406\u6bcf\u4e2a\u6587\u4ef6\u7684bytes\u5185\u5bb9\n        // \u4f8b\u5982\u6253\u5370\u51fa\u6765\n        log.Printf(\"Contents of %s:\\n%s\\n\", fileEntry.Name(), string(bytes))\n    }\n}\n</code></pre></li> </ul> <p>\u8bf7\u6ce8\u610f\uff0c\u4f7f\u7528//go:embed\u65f6\u5fc5\u987b\u9075\u5faa\u7684\u4e24\u4e2a\u9650\u5236\uff1a</p> <ul> <li><code>//go:embed</code> \u53ea\u80fd\u5e94\u7528\u4e8e\u5305\u7ea7\u522b\u7684\u53d8\u91cf\u3002</li> <li>\u88ab\u5185\u5d4c\u7684\u53d8\u91cf\u5fc5\u987b\u6709 <code>embed.FS</code> \u7c7b\u578b\u6216\u8005\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\uff08<code>string</code>\uff09\u3001\u5b57\u8282\u5207\u7247\u7c7b\u578b\uff08<code>[]byte</code>\uff09\u3002</li> </ul> <p>\u4f7f\u7528 <code>//go:embed</code> \u5bf9\u8d44\u6e90\u6587\u4ef6\u8fdb\u884c\u5185\u5d4c\u53ef\u4ee5\u7b80\u5316\u7a0b\u5e8f\u90e8\u7f72\uff0c\u56e0\u4e3a\u4f60\u4e0d\u9700\u8981\u5355\u72ec\u5730\u7ba1\u7406\u8fd9\u4e9b\u9759\u6001\u8d44\u6e90\u6587\u4ef6\u3002\u5b83\u4eec\u90fd\u662f\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\u88ab\u7f16\u8bd1\u6210\u5355\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3002</p>"},{"location":"blog/2024/10/24/go-%E7%AC%94%E8%AE%B0/#go_1","title":"\u7f16\u8bd1\u65f6\u52a8\u6001\u5730\u8bbe\u7f6eGo\u7a0b\u5e8f\u4e2d\u7684\u5b57\u7b26\u4e32\u53d8\u91cf","text":"<p>\u5728 Go \u8bed\u8a00\u4e2d\uff0cgo build \u547d\u4ee4\u7528\u4e8e\u7f16\u8bd1 Go \u6e90\u7801\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002<code>-ldflags</code> \u53c2\u6570\u662f\u4e00\u4e2a\u7f16\u8bd1\u65f6\u6807\u5fd7\uff0c\u5b83\u5411 Go \u7684\u94fe\u63a5\u5668\uff08\u5373 ld \uff09\u4f20\u9012\u6307\u4ee4\u3002<code>-X</code> \u662f ldflags \u4e2d\u7684\u4e00\u4e2a\u9009\u9879\uff0c\u5b83\u53ef\u4ee5\u8bbe\u5b9a\u5305\u5185\u7684\u5168\u5c40\u53d8\u91cf\u7684\u503c\u3002</p> <p>\u5f53\u4f60\u4f7f\u7528 <code>-ldflags \"-X importpath.name=value\"</code> \u7684\u683c\u5f0f\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u52a8\u6001\u5730\u8bbe\u7f6e Go \u7a0b\u5e8f\u4e2d\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u3002\u8fd9\u5728\u8bbe\u7f6e\u7248\u672c\u53f7\u3001\u6784\u5efa\u65f6\u95f4\u3001\u63d0\u4ea4\u54c8\u5e0c\u7b49\u7f16\u8bd1\u65f6\u53d8\u91cf\u65f6\u7279\u522b\u6709\u7528\u3002 <pre><code>go build -ldflags \"-X mymod/cmd.Version=x.y.z\"\n</code></pre></p> <ul> <li>mymod/cmd \u8868\u793a\u53d8\u91cf <code>Version</code> \u6240\u5728\u7684\u5305\u8def\u5f84\u3002</li> <li><code>Version</code> \u662f\u4f60\u60f3\u8981\u8bbe\u7f6e\u7684\u53d8\u91cf\u540d\u3002</li> <li>x.y.z \u662f\u4f60\u4e3a\u53d8\u91cf <code>Version</code> \u6307\u5b9a\u7684\u503c\u3002</li> </ul> <p>\u6267\u884c\u6b64\u547d\u4ee4\u540e\uff0c\u5305 mymod/cmd \u4e2d\u7684 <code>Version</code> \u53d8\u91cf\u5728\u7f16\u8bd1\u65f6\u5c06\u88ab\u8bbe\u7f6e\u4e3a x.y.z\u3002\u901a\u5e38\uff0c\u8fd9\u4e2a\u547d\u4ee4\u662f\u5728\u6784\u5efa\u8f6f\u4ef6\u53d1\u884c\u7248\u672c\u65f6\u4f7f\u7528\uff0c\u4ee5\u4fbf\u5c06\u7248\u672c\u4fe1\u606f\u5d4c\u5165\u751f\u6210\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e2d\u3002</p> <p>\u786e\u4fdd\u5728\u4f7f\u7528 -X \u53c2\u6570\u65f6\uff0c\u53d8\u91cf\u7684\u5b8c\u6574\u5bfc\u5165\u8def\u5f84\u548c\u540d\u79f0\u662f\u6b63\u786e\u7684\uff0c\u5e76\u4e14\u8be5\u53d8\u91cf\u5728\u6e90\u4ee3\u7801\u4e2d\u5df2\u5b9a\u4e49\u4e3a\u4e00\u4e2a\u53ef\u5bfc\u51fa\uff08\u9996\u5b57\u6bcd\u5927\u5199\uff09\u7684\u5168\u5c40\u53d8\u91cf\u3002</p>"},{"location":"blog/2025/07/14/cgroup-namespace/","title":"Linux: Cgroup \u548c Namespace","text":""},{"location":"blog/2025/07/14/cgroup-namespace/#cgroup","title":"Cgroup\uff1a\u8d44\u6e90\u9650\u5236","text":"<p>Cgroup \u7528\u4e8e\u9650\u5236\uff0c\u8bb0\u5f55\uff0c\u9694\u79bb\u8fdb\u7a0b\u7ec4\u7684\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u3002\u901a\u8fc7 cgroup \u53ef\u4ee5\u5b9e\u73b0\uff1a</p> <ul> <li>\u8d44\u6e90\u9650\u5236\uff1acgroup \u53ef\u4ee5\u5bf9\u8fdb\u7a0b\u7ec4\u4f7f\u7528\u7684\u8d44\u6e90\u603b\u989d\u8fdb\u884c\u9650\u5236\uff0c\u4f8b\u5982\u5bf9\u7279\u5b9a\u8fdb\u7a0b\u8fdb\u884c\u5185\u5b58\u4e0a\u9650\u9650\u5236\uff0c\u8d85\u8fc7\u9650\u5236\u89e6\u53d1 OOM\u3002</li> <li>\u4f18\u5148\u7ea7\u5206\u914d\uff1a</li> <li>\u8d44\u6e90\u7edf\u8ba1\uff1a\u5bf9\u8fdb\u7a0b\u7ec4\u4f7f\u7528\u7684\u8d44\u6e90\u8fdb\u884c\u7edf\u8ba1\uff0c\u4f8b\u5982\u7edf\u8ba1\u5185\u5b58\u4f7f\u7528\u91cf\uff0cCPU \u5360\u7528\u65f6\u95f4\u7b49\u3002</li> <li>\u8fdb\u7a0b\u63a7\u5236\uff1acgroup \u53ef\u4ee5\u5bf9\u8fdb\u7a0b\u7ec4\u8fdb\u884c\u63a7\u5236\uff0c\u4f8b\u5982\u6682\u505c\uff0c\u91cd\u542f\uff0c\u7ec8\u6b62\u8fdb\u7a0b\u7ec4\u3002</li> </ul>"},{"location":"blog/2025/07/14/cgroup-namespace/#_1","title":"\u6982\u5ff5","text":"<ul> <li>cgroup\uff1a cgroup \u5c06\u4e00\u7ec4 task \u4e0e\u4e00\u4e2a\u6216\u591a\u4e2a subsystem \u7684\u4e00\u7ec4\u53c2\u6570\u76f8\u5173\u8054\u3002</li> <li>subsystem\uff1asubsystem \u662f\u4e00\u4e2a\u5229\u7528 cgroups \u63d0\u4f9b\u7684\u4efb\u52a1\u5206\u7ec4\u5de5\u5177\u4ee5\u7279\u5b9a\u65b9\u5f0f\u5904\u7406\u4efb\u52a1\u7ec4\u7684\u6a21\u5757\u3002subsystem \u901a\u5e38\u662f\u8c03\u5ea6\u8d44\u6e90\u6216\u5e94\u7528\u4e8e\u6bcf\u4e2a cgroup \u9650\u5236\u7684 \u201c\u8d44\u6e90\u63a7\u5236\u5668\u201d\uff0c\u4f46\u5b83\u4e5f\u53ef\u4ee5\u662f\u60f3\u8981\u4f5c\u7528\u4e8e\u4e00\u7ec4 tasks \u7684\u4efb\u4f55\u4e1c\u897f\uff0c\u4f8b\u5982\u865a\u62df\u5316\u5b50\u7cfb\u7edf\u3002</li> <li>hierarchy\uff1a\u67d0\u4e2a\u63a7\u5236\u5668\u7684\u5404\u4e2a cgroup \u4ee5\u5c42\u6b21\u7ed3\u6784\u7684\u5f62\u5f0f\u7ec4\u7ec7\u3002\u8fd9\u4e2a\u5c42\u6b21\u7ed3\u6784\u662f\u901a\u8fc7\u5728 cgroup \u6587\u4ef6\u7cfb\u7edf\u4e2d\u521b\u5efa\u3001\u5220\u9664\u548c\u91cd\u547d\u540d\u5b50\u76ee\u5f55\u6765\u5b9a\u4e49\u7684\u3002\u5728\u5c42\u6b21\u7ed3\u6784\u7684\u6bcf\u4e00\u7ea7\uff0c\u90fd\u53ef\u4ee5\u5b9a\u4e49\u5c5e\u6027\uff08\u4f8b\u5982\u9650\u5236\uff09\u3002cgroup \u63d0\u4f9b\u7684\u9650\u5236\u3001\u63a7\u5236\u548c\u7edf\u8ba1\u529f\u80fd\u901a\u5e38\u4f1a\u5f71\u54cd\u5b9a\u4e49\u8fd9\u4e9b\u5c5e\u6027\u7684 cgroup \u4e0b\u7684\u6574\u4e2a\u5b50\u5c42\u6b21\u7ed3\u6784\u3002\u4f8b\u5982\uff0c\u5c42\u6b21\u7ed3\u6784\u4e2d\u8f83\u9ad8\u7ea7\u522b\u7684 cgroup \u6240\u8bbe\u7f6e\u7684\u9650\u5236\u4e0d\u80fd\u88ab\u5176\u5b50 cgroup \u7a81\u7834\u3002</li> </ul> <p>\u5728 Linux \u5b9e\u73b0\u4e2d\uff0ccgroup \u901a\u8fc7\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u6765\u63d0\u4f9b\u5bf9 cgroup \u8d44\u6e90\u7684\u8bbf\u95ee\u3002\u8fd9\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u7684\u6839\u76ee\u5f55\u662f <code>/sys/fs/cgroup</code>\uff0c\u6bcf\u4e2a cgroup \u90fd\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u76ee\u5f55\uff0c\u76ee\u5f55\u540d\u5c31\u662f cgroup \u7684\u540d\u79f0\u3002Hierarchy \u5c42\u7ea7\u7ed3\u6784\u901a\u8fc7\u6587\u4ef6\u5939\u7ed3\u6784\u5b9e\u73b0\uff0c\u800c\u6bcf\u4e2a cgroup \u7684 Subsystem \u914d\u7f6e\u548c Tasks \u5219\u901a\u8fc7\u6587\u4ef6\u6765\u914d\u7f6e\u3002</p> <pre><code>/sys/fs/cgroup/\n|-- blkio\n|-- cpu -&gt; cpu,cpuacct\n|-- cpuacct -&gt; cpu,cpuacct\n|-- cpu,cpuacct\n|-- cpuset\n|-- devices\n|-- freezer\n|-- hugetlb\n|-- memory\n|-- net_cls -&gt; net_cls,net_prio\n|-- net_cls,net_prio\n|-- net_prio -&gt; net_cls,net_prio\n|-- perf_event\n|-- pids\n</code></pre> <p>\u4e0a\u8ff0\u6bcf\u4e00\u4e2a\u5b50\u76ee\u5f55\u5c31\u5bf9\u5e94\u4e00\u4e2a Subsystem\u3002</p> <ul> <li>cpu\uff1a\u4f7f\u7528\u8c03\u5ea6\u7a0b\u5e8f\u63a7\u5236\u4efb\u52a1\u5bf9cpu\u7684\u4f7f\u7528</li> <li>cpuacct\uff1a\u81ea\u52a8\u751f\u6210cgroup\u4e2d\u4efb\u52a1\u5bf9cpu\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u7684\u62a5\u544a</li> <li>cpuset\uff1a\u53ef\u4ee5\u4e3acgroup\u4e2d\u7684\u4efb\u52a1\u5206\u914d\u72ec\u7acb\u7684cpu\u548c\u5185\u5b58</li> <li>blkio\uff1a\u53ef\u4ee5\u4e3a\u5757\u8bbe\u5907\u8bbe\u5b9a\u8f93\u5165 \u8f93\u51fa\u9650\u5236\uff0c\u6bd4\u5982\u7269\u7406\u9a71\u52a8\u8bbe\u5907</li> <li>devices\uff1a\u53ef\u4ee5\u5f00\u542f\u6216\u5173\u95edcgroup\u4e2d\u4efb\u52a1\u5bf9\u8bbe\u5907\u7684\u8bbf\u95ee</li> <li>freezer\uff1a \u53ef\u4ee5\u6302\u8d77\u6216\u6062\u590dcgroup\u4e2d\u7684\u4efb\u52a1</li> <li>pids\uff1a\u9650\u5236\u4efb\u52a1\u6570\u91cf</li> <li>memory\uff1a\u53ef\u4ee5\u8bbe\u5b9acgroup\u4e2d\u4efb\u52a1\u5bf9\u5185\u5b58\u4f7f\u7528\u91cf\u7684\u9650\u5b9a\uff0c\u5e76\u4e14\u81ea\u52a8\u751f\u6210\u8fd9\u4e9b\u4efb\u52a1\u5bf9\u5185\u5b58\u8d44\u6e90\u4f7f\u7528\u60c5\u51b5\u7684\u62a5\u544a</li> <li>perf_event\uff1a\u4f7f\u7528\u540e\u4f7fcgroup\u4e2d\u7684\u4efb\u52a1\u53ef\u4ee5\u8fdb\u884c\u7edf\u4e00\u7684\u6027\u80fd\u6d4b\u8bd5</li> <li>net_cls\uff1adocker\u6ca1\u6709\u76f4\u63a5\u4f7f\u7528\u5b83\uff0c\u5b83\u901a\u8fc7\u4f7f\u7528\u7b49\u7ea7\u8bc6\u522b\u7b26\u6807\u8bb0\u7f51\u7edc\u6570\u636e\u5305\uff0c\u4ece\u800c\u5141\u8bb8linux\u6d41\u91cf\u63a7\u5236\u7a0b\u5e8f\u8bc6\u522b\u4ece\u5177\u4f53cgroup\u4e2d\u751f\u6210\u7684\u6570\u636e\u5305</li> </ul>"},{"location":"blog/2025/07/14/cgroup-namespace/#_2","title":"\u4f7f\u7528","text":"<p>\u7ec4\u7ec7 cgroup \u7684\u5c42\u6b21\u7ed3\u6784\uff08hierarchy\uff09\u662f\u901a\u8fc7\u5728 cgroup \u6587\u4ef6\u7cfb\u7edf\uff08\u901a\u5e38\u662f <code>/sys/fs/cgroup</code>\uff09\u4e2d\u521b\u5efa\u76ee\u5f55\u548c\u5b50\u76ee\u5f55\u6765\u5b8c\u6210\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u76f4\u89c2\u5730\u5c06 cgroup \u7ec4\u7ec7\u6210\u6811\u72b6\u7ed3\u6784\u3002</p> <p>\u4ee5\u4e0b\u662f\u7ec4\u7ec7 cgroup \u5c42\u6b21\u7ed3\u6784\u7684\u57fa\u672c\u539f\u5219\u548c\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u6839\u5c42\u6b21\u7ed3\u6784\uff1a     \u5728 cgroup v2 \u4e2d\uff0c\u6240\u6709\u8d44\u6e90\u63a7\u5236\u5668\uff08CPU, memory, I/O \u7b49\uff09\u90fd\u4f4d\u4e8e\u4e00\u4e2a\u7edf\u4e00\u7684\u5c42\u6b21\u7ed3\u6784\u4e0b\uff0c\u6839\u76ee\u5f55\u5c31\u662f<code>/sys/fs/cgroup</code>\u3002\u8fd9\u4e2a\u6839 cgroup \u5305\u542b\u4e86\u7cfb\u7edf\u4e0a\u6240\u6709\u7684\u8fdb\u7a0b\u3002</p> </li> <li> <p>\u521b\u5efa\u5b50 cgroup\uff1a     \u60a8\u53ef\u4ee5\u901a\u8fc7\u521b\u5efa\u5b50\u76ee\u5f55\u6765\u521b\u5efa\u65b0\u7684 cgroup\u3002\u6bcf\u4e2a\u76ee\u5f55\u90fd\u4ee3\u8868\u4e00\u4e2a cgroup\uff0c\u5b83\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u8d44\u6e90\u9650\u5236\uff0c\u5e76\u4e14\u53ef\u4ee5\u5305\u542b\u8fdb\u7a0b\u3002</p> <p>\u4f8b\u5982\uff0c\u5047\u8bbe\u60a8\u60f3\u4e3a\u7cfb\u7edf\u4e0a\u7684 Web \u670d\u52a1\u5668\u548c\u6570\u636e\u5e93\u670d\u52a1\u5206\u522b\u521b\u5efa\u8d44\u6e90\u7ec4\uff0c\u53ef\u4ee5\u8fd9\u6837\u7ec4\u7ec7\uff1a</p> <pre><code># \u5728\u6839 cgroup \u4e0b\u521b\u5efa\u4e00\u4e2a\u7528\u4e8e\u201cservices\u201d\u7684 cgroup\nsudo mkdir /sys/fs/cgroup/services\n\n# \u5728 services/cgroup \u4e0b\uff0c\u5206\u522b\u4e3a web \u548c db \u521b\u5efa\u5b50 cgroup\nsudo mkdir /sys/fs/cgroup/services/web\nsudo mkdir /sys/fs/cgroup/services/db\n</code></pre> <p>\u8fd9\u6837\uff0c\u60a8\u5c31\u521b\u5efa\u4e86\u5982\u4e0b\u7684\u5c42\u6b21\u7ed3\u6784\uff1a <pre><code>/sys/fs/cgroup/\n\u2514\u2500\u2500 services/\n    \u251c\u2500\u2500 web/\n    \u2514\u2500\u2500 db/\n</code></pre></p> </li> <li> <p>\u8d44\u6e90\u7ee7\u627f\u548c\u9650\u5236\uff1a     \u5c42\u6b21\u7ed3\u6784\u7684\u4e00\u4e2a\u5173\u952e\u7279\u6027\u662f\u8d44\u6e90\u7684\u7ee7\u627f\u548c\u9650\u5236\u3002</p> <ul> <li>\u9650\u5236\u4f20\u9012\uff1a\u7236 cgroup \u7684\u8d44\u6e90\u9650\u5236\u4f1a\u4f20\u9012\u7ed9\u5176\u5b50 cgroup\u3002\u5b50 cgroup \u53ef\u7528\u7684\u8d44\u6e90\u4e0d\u80fd\u8d85\u8fc7\u5176\u7236 cgroup \u7684\u9650\u5236\u3002</li> <li>\u5206\u5e03\u8d44\u6e90\uff1a\u60a8\u53ef\u4ee5\u5c06\u7236 cgroup \u7684\u8d44\u6e90\u5206\u914d\u7ed9\u5176\u5b50 cgroup\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4e3a <code>services</code> cgroup \u8bbe\u7f6e\u4e00\u4e2a\u603b\u7684\u5185\u5b58\u9650\u5236\uff1a <pre><code># \u9650\u5236\u6240\u6709 services \u6700\u591a\u4f7f\u7528 10GB \u5185\u5b58\necho \"10G\" | sudo tee /sys/fs/cgroup/services/memory.max\n</code></pre> \u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u8fd910GB\u7684\u5185\u5b58\u5728<code>web</code>\u548c<code>db</code>\u5b50cgroup\u4e4b\u95f4\u8fdb\u884c\u5206\u914d\uff1a <pre><code># \u9650\u5236 web \u670d\u52a1\u6700\u591a\u4f7f\u7528 6GB \u5185\u5b58\necho \"6G\" | sudo tee /sys/fs/cgroup/services/web/memory.max\n\n# \u9650\u5236 db \u670d\u52a1\u6700\u591a\u4f7f\u7528 4GB \u5185\u5b58\necho \"4G\" | sudo tee /sys/fs/cgroup/services/db/memory.max\n</code></pre> <code>web</code>\u548c<code>db</code>\u7684\u5185\u5b58\u9650\u5236\u4e4b\u548c\uff086G + 4G = 10G\uff09\u4e0d\u80fd\u8d85\u8fc7\u5176\u7236 cgroup <code>services</code>\u7684\u9650\u5236\u3002</p> </li> <li> <p>\u79fb\u52a8\u8fdb\u7a0b\uff1a     \u5c06\u8fdb\u7a0b\u7684 PID \u5199\u5165\u76ee\u6807 cgroup \u7684 <code>cgroup.procs</code> \u6587\u4ef6\uff0c\u5373\u53ef\u5c06\u8fdb\u7a0b\u79fb\u52a8\u5230\u8be5 cgroup \u4e2d\uff0c\u4ece\u800c\u53d7\u5176\u8d44\u6e90\u9650\u5236\u3002</p> <pre><code># \u5c06 PID \u4e3a 1234 \u7684 web \u670d\u52a1\u5668\u8fdb\u7a0b\u79fb\u52a8\u5230 web cgroup\necho 1234 | sudo tee /sys/fs/cgroup/services/web/cgroup.procs\n\n# \u5c06 PID \u4e3a 5678 \u7684\u6570\u636e\u5e93\u8fdb\u7a0b\u79fb\u52a8\u5230 db cgroup\necho 5678 | sudo tee /sys/fs/cgroup/services/db/cgroup.procs\n</code></pre> </li> </ol> <p>\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u60a8\u53ef\u4ee5\u6839\u636e\u5e94\u7528\u7a0b\u5e8f\u3001\u7528\u6237\u6216\u7cfb\u7edf\u670d\u52a1\u7684\u7c7b\u522b\u6765\u6784\u5efa\u7cbe\u7ec6\u5316\u7684\u8d44\u6e90\u63a7\u5236\u5c42\u6b21\u7ed3\u6784\uff0c\u4ece\u800c\u5b9e\u73b0\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u6709\u6548\u7ba1\u7406\u548c\u9694\u79bb\u3002</p>"},{"location":"blog/2025/07/14/cgroup-namespace/#namespace","title":"Namespace\uff1a\u8d44\u6e90\u9694\u79bb","text":"<p>Namespace \u662f Linux \u5185\u6838\u63d0\u4f9b\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u9694\u79bb\u4e0d\u540c\u8fdb\u7a0b\u7684\u8d44\u6e90\u89c6\u56fe\u3002\u6bcf\u4e2a Namespace \u90fd\u6709\u81ea\u5df1\u7684\u4e00\u5957\u8d44\u6e90\uff0c\u5305\u62ec\u8fdb\u7a0b ID\u3001\u6587\u4ef6\u7cfb\u7edf\u3001\u7f51\u7edc\u7b49\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u53ea\u80fd\u770b\u5230\u81ea\u5df1\u547d\u540d\u7a7a\u95f4\u5185\u7684\u5bf9\u5e94\u8d44\u6e90\u3002</p> <p>Namespace \u4e3b\u8981\u6709\u4ee5\u4e0b\u51e0\u79cd\u7c7b\u578b\uff1a</p> \u7c7b\u578b Flag \u9694\u79bb\u8d44\u6e90 Cgroup CLONE_NEWCGROUP Cgroup IPC CLONE_NEWIPC IPC,POSIX msg queue Network CLONE_NEWNET \u7f51\u7edc\u8bbe\u5907\uff0c\u534f\u8bae\u6808\uff0c\u7aef\u53e3\u7b49 Mount CLONE_NEWNS \u6302\u8f7d\u70b9 PID CLONE_NEWPID PID Time CLONE_NEWTIME User CLONE_NEWUSER \u7528\u6237\u548c\u7528\u6237\u7ec4 ID UTS CLONE_NEWUTS \u4e3b\u673a\u540d\u548c\u57df\u540d"},{"location":"blog/2025/07/14/cgroup-namespace/#api","title":"API","text":"<p>Namespace \u53ef\u4ee5\u901a\u8fc7\u4e00\u4e0b\u7cfb\u7edf\u8c03\u7528\u6765\u64cd\u4f5c\uff1a</p> <ul> <li><code>clone(2)</code>\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u8fdb\u7a0b\uff0c\u5982\u679c\u6307\u5b9a\u4e86 <code>CLONE_NEW*</code> \u6807\u5fd7\uff0c\u4f1a\u521b\u5efa\u65b0\u7684 Namespace\uff0c\u5e76\u5c06\u5b50\u8fdb\u7a0b\u52a0\u5165\u5230\u65b0\u7684 Namespace \u4e2d\u3002</li> <li><code>setns(2)</code>\uff1a\u5c06\u8c03\u7528\u8fdb\u7a0b\u52a0\u5165\u5230\u6307\u5b9a\u7684 Namespace \u4e2d\u3002</li> <li><code>unshare(2)</code>\uff1a\u5c06\u8c03\u7528\u8fdb\u7a0b\u52a0\u5165\u5230\u65b0\u7684 Namespace \u4e2d\u3002</li> </ul> <p>\u5173\u4e8e <code>/proc/[pid]/ns</code> \u76ee\u5f55\uff1a</p> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u7684 <code>/proc/[pid]/ns</code> \u76ee\u5f55\u5305\u542b\u4e86\u4e00\u7ec4\u6587\u4ef6\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5bf9\u5e94\u8be5\u8fdb\u7a0b\u6240\u53c2\u4e0e\u7684\u5404\u79cd\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u4e9b\u6587\u4ef6\u5b9e\u9645\u4e0a\u662f\u7b26\u53f7\u94fe\u63a5\uff0c\u94fe\u63a5\u5230\u5185\u6838\u4e2d\u5bf9\u5e94\u547d\u540d\u7a7a\u95f4\u7684\u6807\u8bc6\u7b26\uff0c\u901a\u5e38\u8868\u73b0\u4e3a\u7c7b\u4f3c <code>ns:[4026531840]</code> \u7684\u683c\u5f0f\uff0c\u6570\u5b57\u662f\u8be5\u547d\u540d\u7a7a\u95f4\u7684\u5185\u6838\u5bf9\u8c61\u6807\u8bc6\u7b26\uff08inode\uff09\u3002</p>"},{"location":"blog/2025/07/14/cgroup-namespace/#_3","title":"\u53c2\u8003","text":"<ul> <li>cgroup</li> <li>Linux: Cgroup \u548c Namespace</li> </ul>"},{"location":"blog/2025/07/03/filesystem/","title":"Linux: \u6587\u4ef6\u7cfb\u7edf","text":"<p>\u672c\u6587\u8bb0\u5f55\u4e00\u4e0b Linux \u4e0b\u6587\u4ef6\u7cfb\u7edf\u7684\u4e00\u4e9b\u57fa\u7840\u6982\u5ff5\u3002</p>"},{"location":"blog/2025/07/03/filesystem/#_1","title":"\u78c1\u76d8\u4e0e\u5206\u533a","text":"<p>\u5728 Linux \u4e0b\uff0c\u5bf9 SCSI \u548c SATA \u78c1\u76d8\u8bbe\u5907\u662f\u4ee5 sd \u547d\u540d\u7684\uff0c\u7b2c\u4e00\u4e2a scsi \u8bbe\u5907\u662f sda\uff0c\u7b2c\u4e8c\u4e2a\u662f sdb\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002IDE \u63a5\u53e3\u8bbe\u5907\u662f\u7528 hd \u547d\u540d\u7684\uff0c\u7b2c\u4e00\u4e2a\u8bbe\u5907\u662f hda\uff0c\u7b2c\u4e8c\u4e2a\u662f hdb\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002NVMe \u786c\u76d8\u547d\u540d\u89c4\u5219\u4e3a nvme[0-9]n[1-9]\uff0c\u5176\u4e2d nvme \u662f\u56fa\u5b9a\u7684\u524d\u7f00\uff0c\u7b2c\u4e00\u4e2a\u6570\u5b57\u8868\u793a\u63a7\u5236\u5668\u7684\u7f16\u53f7\uff0c n \u662f\u56fa\u5b9a\u5b57\u7b26\uff0c\u7b2c\u4e8c\u4e2a\u6570\u5b57\u8868\u793a\u8be5\u63a7\u5236\u5668\u4e0b\u7684\u547d\u540d\u7a7a\u95f4\u7f16\u53f7\u3002</p> <p>\u5206\u533a\uff08Partition\uff09\u662f\u6307\u5bf9\u4e00\u5757\u78c1\u76d8\u5b50\u5206\u533a\u7684\u5212\u5206\uff0c\u6bcf\u4e2a\u5206\u533a\u53ef\u4ee5\u88ab\u683c\u5f0f\u5316\u4e3a\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5206\u533a\u662f\u7528\u8bbe\u5907\u540d\u79f0\u52a0\u6570\u5b57\u547d\u540d\u7684\u3002\u4f8b\u5982 hda1 \u4ee3\u8868 hda \u8fd9\u4e2a\u786c\u76d8\u8bbe\u5907\u4e0a\u7684\u7b2c\u4e00\u4e2a\u5206\u533a\u3002\u78c1\u76d8\u7684\u5206\u533a\u65b9\u5f0f\u6709\u4e24\u79cd\uff1a</p> <ul> <li>MBR\uff08Master Boot Record\uff09\u5206\u533a\u8868 </li> <li>\u5206\u533a\u8868\u5b58\u50a8\u5728\u78c1\u76d8\u7684\u7b2c\u4e00\u4e2a\u6247\u533a\uff08\u5373\u4e3b\u5f15\u5bfc\u8bb0\u5f55\uff09\uff0c\u8be5\u6247\u533a\u5927\u5c0f\u901a\u5e38\u4e3a 512 \u5b57\u8282\u3002</li> <li>\u6700\u591a\u652f\u6301 4 \u4e2a\u4e3b\u5206\u533a\uff0c\u6216\u8005 3 \u4e2a\u4e3b\u5206\u533a\u52a0 1 \u4e2a\u6269\u5c55\u5206\u533a\uff0c\u6269\u5c55\u5206\u533a\u4e2d\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u903b\u8f91\u5206\u533a\u3002</li> <li>\u5355\u4e2a\u5206\u533a\u6700\u5927\u652f\u6301 2TB\uff08\u57fa\u4e8e\u4f20\u7edf 512 \u5b57\u8282\u6247\u533a\uff09\u3002</li> <li>GPT\uff08GUID Partition Table\uff09\u5206\u533a\u8868 </li> <li>\u5206\u533a\u8868\u5206\u5e03\u5728\u78c1\u76d8\u7684\u591a\u4e2a\u4f4d\u7f6e\uff0c\u5305\u62ec\u78c1\u76d8\u5f00\u59cb\u5904\u7684\u4fdd\u62a4 MBR\u3001GPT \u4e3b\u5206\u533a\u5934\u548c\u5206\u533a\u8868\uff0c\u53ca\u78c1\u76d8\u672b\u5c3e\u7684\u5907\u7528\u5206\u533a\u5934\u548c\u5206\u533a\u8868\uff0c\u63d0\u4f9b\u5197\u4f59\u4fdd\u62a4\u3002</li> <li>\u652f\u6301 128 \u4e2a\u4ee5\u4e0a\u7684\u5206\u533a\uff0c\u5177\u4f53\u6570\u91cf\u7531\u5206\u533a\u8868\u5927\u5c0f\u51b3\u5b9a\uff0c\u65e0\u9700\u6269\u5c55\u5206\u533a\u3002</li> <li>\u652f\u6301\u6781\u5927\u5bb9\u91cf\u78c1\u76d8\uff0c\u6700\u5927\u53ef\u8fbe ZB \u7ea7\u522b\uff0c\u8fdc\u8d85\u5f53\u524d\u786c\u76d8\u5bb9\u91cf\u3002</li> </ul> <p>\u5206\u591a\u4e2a\u533a\u6709\u4ee5\u4e0b\u51e0\u4e2a\u76ee\u7684\uff1a</p> <ul> <li>\u5728\u4e0d\u635f\u5931\u6570\u636e\u7684\u60c5\u51b5\u4e0b\u91cd\u88c5\u7cfb\u7edf\uff0c\u6bd4\u5982\u72ec\u7acb\u8bbe\u7f6e /home \u6302\u8f7d\u70b9\uff0c\u91cd\u88c5\u7cfb\u7edf\u7684\u65f6\u5019\u76f4\u63a5\u6807\u8bb0\u56de /home\uff0c\u6570\u636e\u4e0d\u4f1a\u6709\u4efb\u4f55\u635f\u5931\u3002</li> <li>\u9488\u5bf9\u4e0d\u540c\u7684\u6302\u8f7d\u70b9\u7684\u7279\u6027\u5206\u914d\u5408\u9002\u7684\u6587\u4ef6\u7cfb\u7edf\u4ee5\u5408\u7406\u53d1\u6325\u6027\u80fd\uff0c\u6bd4\u5982\u5bf9 /var \u4f7f\u7528 reiserfs\uff0c\u5bf9 /home \u4f7f\u7528 xfs\uff0c\u5bf9 / \u4f7f\u7528 ext4\u3002</li> <li>\u9488\u5bf9\u4e0d\u540c\u7684\u6302\u8f7d\u70b9\u5f00\u542f\u4e0d\u540c\u7684\u6302\u8f7d\u9009\u9879\uff0c\u5982\u662f\u5426\u9700\u8981\u5373\u65f6\u540c\u6b65\uff0c\u662f\u5426\u5f00\u542f\u65e5\u5fd7\uff0c\u662f\u5426\u542f\u7528\u538b\u7f29\u3002</li> <li>\u5927\u786c\u76d8\u641c\u7d22\u8303\u56f4\u5927\uff0c\u6548\u7387\u4f4e\u3002</li> <li>\u78c1\u76d8\u914d\u989d\u53ea\u80fd\u5bf9\u5206\u533a\u505a\u8bbe\u5b9a\u3002</li> <li>/home\u3001/var\u3001/usr/local \u7ecf\u5e38\u662f\u5355\u72ec\u5206\u533a\uff0c\u56e0\u4e3a\u7ecf\u5e38\u4f1a\u64cd\u4f5c\uff0c\u5bb9\u6613\u4ea7\u751f\u788e\u7247\u3002</li> </ul> <p>\u53ef\u4ee5\u4f7f\u7528 <code>parted</code> \u547d\u4ee4\u8fdb\u884c\u78c1\u76d8\u5206\u533a\u3002</p> <ul> <li>\u67e5\u770b\u78c1\u76d8\u5206\u533a\u4fe1\u606f   <pre><code>parted /dev/nvme0n1 print\n</code></pre></li> <li>\u67e5\u770b\u78c1\u76d8\u4f7f\u7528\u4fe1\u606f   <pre><code>parted /dev/nvme0n1 print free\n</code></pre></li> <li>\u65b0\u5efa\u5206\u533a   <pre><code>parted /dev/nvme0n1 mkpart primary 500GB 550GB\n</code></pre></li> </ul> <p>\u5b8c\u6210\u5206\u533a\u4e4b\u540e\uff0c\u9700\u8981\u5bf9\u5206\u533a\u8fdb\u884c\u683c\u5f0f\u5316\uff0c\u6240\u8c13\u683c\u5f0f\u5316\u5c31\u662f\u5728\u8be5\u5206\u533a\u4e4b\u4e0a\u5efa\u7acb\u6587\u4ef6\u7cfb\u7edf\u7684\u8fc7\u7a0b\u3002\u4e4b\u540e\u4fbf\u53ef\u4ee5\u5c06\u683c\u5f0f\u5316\u4e4b\u540e\u7684\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230\u5bf9\u5e94\u7684\u6302\u8f7d\u70b9\u4e0b\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>mkfs</code> \u547d\u4ee4\u5bf9\u5206\u533a\u8fdb\u884c\u683c\u5f0f\u5316\uff0c\u4f8b\u5982\u5728 /dev/sda1 \u4e0a\u521b\u5efa\u4e00\u4e2a ext3 \u6587\u4ef6\u7cfb\u7edf\uff1a <pre><code>mkfs -t ext3 /dev/sda1\n</code></pre></p> <p>Linux \u7cfb\u7edf\u542f\u52a8\u4e4b\u540e\u4f1a\u5c06\u6839\u6587\u4ef6\u7cfb\u7edf\uff08rootfs\uff09\u6302\u8f7d\u4e8e\u6587\u4ef6\u6811\u7684\u6839(/)\u4e0a\u3002\u5f53\u6839\u6302\u8f7d\u5b8c\u6210\u4e4b\u540e\uff0c\u60a8\u5c31\u53ef\u4ee5\u5c06\u5176\u5b83\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u4e8e\u6811\u5f62\u7ed3\u6784\u5404\u79cd\u6302\u8f7d\u70b9\u4e0a\u3002\u6839\u7ed3\u6784\u4e0b\u7684\u4efb\u4f55\u76ee\u5f55\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u6302\u8f7d\u70b9\uff0c\u800c\u60a8\u4e5f\u53ef\u4ee5\u5c06\u540c\u4e00\u6587\u4ef6\u7cfb\u7edf\u540c\u65f6\u6302\u8f7d\u4e8e\u4e0d\u540c\u7684\u6302\u8f7d\u70b9\u4e0a\u3002\u6302\u8f7d\u70b9\u5b9e\u9645\u4e0a\u5c31\u662f Linux \u4e2d\u7684\u78c1\u76d8\u6587\u4ef6\u7cfb\u7edf\u7684\u5165\u53e3\u76ee\u5f55\u3002</p> <p>\u53ef\u4ee5\u4f7f\u7528 <code>mount</code> \u547d\u4ee4\u5c06\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230\u67d0\u4e00\u6302\u8f7d\u70b9\u4e0b\uff1a <pre><code>mount /dev/sda1 /test\n</code></pre></p> <p>\u8981\u60f3\u4f7f\u6302\u8f7d\u6c38\u4e45\u751f\u6548\uff0c\u9700\u8981\u6302\u8f7d\u4fe1\u606f\u5199\u5165 /etc/fstab \u6587\u4ef6\uff0c\u7cfb\u7edf\u542f\u52a8\u4e4b\u540e\u4f1a\u81ea\u52a8\u8bfb\u53d6\u8be5\u6587\u4ef6\uff0c\u5e76\u5b8c\u6210\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u6302\u8f7d\u3002\u5199\u5165\u683c\u5f0f\u4e3a\uff1a</p> <pre><code>\u8bbe\u5907\u6587\u4ef6 \u6302\u8f7d\u76ee\u5f55 \u683c\u5f0f\u7c7b\u578b \u6743\u9650\u9009\u9879 \u662f\u5426\u5907\u4efd \u662f\u5426\u81ea\u68c0\n</code></pre> <p>\u4f8b\u5982\uff1a <pre><code>/dev/sda1  /test  ext3  defaults  0  0\n</code></pre></p>"},{"location":"blog/2025/07/03/filesystem/#_2","title":"\u672c\u5730\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5e38\u89c1\u7684 Linux \u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u5305\u62ec ext2\uff0cext3\uff0cext4\uff0cxfs\uff0cntfs \u7b49\uff0c\u6587\u4ef6\u7cfb\u7edf\u7684\u4efb\u52a1\u662f\u5c06\u6570\u636e\u548c\u5143\u6570\u636e\u8fdb\u884c\u7ec4\u7ec7\uff0c\u4f7f\u6587\u4ef6\u5728\u78c1\u76d8\u5206\u533a\u4e0a\u80fd\u8fdb\u884c\u903b\u8f91\u8bfb\u5199\u3002\u4e00\u4e2a\u5178\u578b\u7684\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u5316\u7684\u78c1\u76d8\u5206\u533a\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>\u5f15\u5bfc\u5757\uff08Boot block\uff09\uff1a\u4e3a\u4e86\u4e00\u81f4\u6027\uff0c\u6bcf\u4e2a\u5206\u533a\u90fd\u4f1a\u4ece\u5f15\u5bfc\u5757\u5f00\u59cb\uff0c\u5373\u4f7f\u5f15\u5bfc\u5757\u4e0d\u5305\u542b\u64cd\u4f5c\u7cfb\u7edf\u3002\u5f15\u5bfc\u5757\u5360\u636e\u6587\u4ef6\u7cfb\u7edf\u7684\u524d 4096 \u4e2a\u5b57\u8282\uff0c\u4ece\u78c1\u76d8\u4e0a\u7684\u5b57\u8282\u504f\u79fb\u91cf 0 \u5f00\u59cb\u3002\u5f15\u5bfc\u5757\u53ef\u7528\u4e8e\u542f\u52a8\u64cd\u4f5c\u7cfb\u7edf\u3002</li> <li>\u8d85\u7ea7\u5757\uff08Superblock\uff09\uff1a\u7d27\u8ddf\u5728\u5f15\u5bfc\u5757\u540e\u9762\u7684\u662f\u8d85\u7ea7\u5757\uff08Superblock\uff09\uff0c\u8d85\u7ea7\u5757\u7684\u5927\u5c0f\u4e3a 4096 \u5b57\u8282\uff0c\u4ece\u78c1\u76d8\u4e0a\u7684\u5b57\u8282\u504f\u79fb 4096 \u5f00\u59cb\u3002\u8d85\u7ea7\u5757\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u7684\u6240\u6709\u5173\u952e\u53c2\u6570\u3002</li> <li>\u7a7a\u95f2\u7a7a\u95f4\u5757\u7ba1\u7406\uff1a\u7528\u6765\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u7684\u7a7a\u95f2\u5757\u3002</li> <li>inode\uff1ainode \u4fdd\u5b58\u4e86\u5b58\u50a8\u5bf9\u8c61\u6570\u636e\u7684\u5c5e\u6027\u548c\u78c1\u76d8\u5757\u4f4d\u7f6e\u3002</li> <li>\u6570\u636e\u5757\uff1a\u6587\u4ef6\u5185\u5bb9\u3002</li> </ul> <p>\u5bf9\u4e8e\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u5e95\u5c42\u78c1\u76d8\u7684 layout \u4e0d\u5c3d\u76f8\u540c\uff0c\u4f46\u903b\u8f91\u4e0a\u76f8\u4f3c\uff0c\u6bd4\u5982 xfs \u6587\u4ef6\u7cfb\u7edf\u5728\u78c1\u76d8\u4e0a\u7684 layout \u7c7b\u4f3c\u4e0b\u56fe\uff1a</p> <p></p>"},{"location":"blog/2025/07/03/filesystem/#_3","title":"\u7279\u6b8a\u6587\u4ef6\u7cfb\u7edf","text":"<p>\u5728 Linux \u7cfb\u7edf\u4e2d\uff0c\u9664\u4e86\u666e\u901a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd8\u5b58\u5728\u4e00\u4e9b\u300c\u4f2a\u6587\u4ef6\u7cfb\u7edf\u300d\uff0c\u8fd9\u4e9b\u6587\u4ef6\u7cfb\u7edf\u5e76\u6ca1\u6709\u5bf9\u5e94\u7684\u78c1\u76d8\u8bbe\u5907\uff0c\u800c\u662f\u4e00\u4e9b\u7279\u6b8a\u7684\u76ee\u5f55\u6216\u6587\u4ef6\u3002</p> <p>rootfs</p> <p>\u6839\u6587\u4ef6\u7cfb\u7edf\u9996\u5148\u662f\u5185\u6838\u542f\u52a8\u65f6\u6240 mount(\u6302\u8f7d)\u7684\u7b2c\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5185\u6838\u4ee3\u7801\u6620\u50cf\u6587\u4ef6\u4fdd\u5b58\u5728\u6839\u6587\u4ef6\u7cfb\u7edf\u4e2d\uff0c\u7cfb\u7edf\u5f15\u5bfc\u542f\u52a8\u7a0b\u5e8f\u4f1a\u5728\u6839\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u4e4b\u540e\u4ece\u4e2d\u628a\u4e00\u4e9b\u521d\u59cb\u5316\u811a\u672c\uff08\u5982rcS,inittab\uff09\u548c\u670d\u52a1\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u53bb\u8fd0\u884c\u3002\u5b8c\u6210 rootfs \u6302\u8f7d\u53ca\u7cfb\u7edf\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u53ef\u4ee5\u901a\u8fc7\u6302\u8f7d\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u6765\u6269\u5c55\u6587\u4ef6\u7cfb\u7edf\u7684\u529f\u80fd\u3002</p> <p>\u6839\u6587\u4ef6\u7cfb\u7edf\u7684 mount \u8fc7\u7a0b\u5206\u4e3a2\u4e2a\u9636\u6bb5\uff1a</p> <ul> <li>\u5185\u6838 mount \u4e00\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf\u2014\u2014rootfs\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a7a\u7684\u8def\u5f84\u4f5c\u4e3a\u521d\u59cb\u7684\u6302\u8f7d\u70b9</li> <li>\u5185\u6838 mount \u5b9e\u9645\u7684\u6587\u4ef6\u7cfb\u7edf\u7cfb\u7edf\uff0c\u8986\u76d6\u4e4b\u524d\u7684\u7a7a\u8def\u5f84</li> </ul> <p>\u5185\u6838\u4e4b\u6240\u4ee5\u641e\u4e00\u4e2a rootfs \u8fd9\u6837\u4e00\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4f7f\u7528\u5b9e\u9645\u7684\u6587\u4ef6\u7cfb\u7edf\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u5176\u539f\u56e0\u662f\u4e3a\u4e86\u65b9\u4fbf\u5728\u7cfb\u7edf\u8fd0\u884c\u65f6\u66f4\u6362\u6839\u6587\u4ef6\u7cfb\u7edf\u3002\u76ee\u524d\u7528\u4e8e\u542f\u52a8\u7684 Ramdisk \u5c31\u662f\u8fd9\u6837\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5728\u7cfb\u7edf\u8d77\u6765\u540e\uff0c\u5148\u52a0\u8f7d\u4e00\u4e2a\u5305\u542b\u6700\u5c0f\u9a71\u52a8\u6587\u4ef6\u548c\u542f\u52a8\u811a\u672c\u7684 Ramdisk \u6587\u4ef6\u7cfb\u7edf\u4f5c\u4e3a\u6839\u6587\u4ef6\u7cfb\u7edf\uff0c\u7136\u540e\u5c06\u7cfb\u7edf\u4e2d\u5176\u4ed6\u7684\u8bbe\u5907\u52a0\u8f7d\u8d77\u6765\u540e\uff0c\u518d\u9009\u62e9\u4e00\u4e2a\u5b8c\u6574\u7684\u6587\u4ef6\u7cfb\u7edf\u66ff\u6362\u8fd9\u4e2a\u6700\u5c0f\u7cfb\u7edf\u3002</p> <p>\u5173\u4e8e rootfs:Chapter 3. The Root Filesystem</p> <p>proc</p> <p>Linux \u7cfb\u7edf\u4e0a\u7684 /proc \u76ee\u5f55\u662f\u4e00\u79cd\u6587\u4ef6\u7cfb\u7edf\uff0c\u5373 proc \u6587\u4ef6\u7cfb\u7edf\u3002\u4e0e\u5176\u5b83\u5e38\u89c1\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0d\u540c\u7684\u662f\uff0c/proc \u662f\u4e00\u79cd\u4f2a\u6587\u4ef6\u7cfb\u7edf\uff08\u4e5f\u5373\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\uff09\uff0c\u5b58\u50a8\u7684\u662f\u5f53\u524d\u5185\u6838\u8fd0\u884c\u72b6\u6001\u7684\u4e00\u7cfb\u5217\u7279\u6b8a\u6587\u4ef6\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u6587\u4ef6\u67e5\u770b\u6709\u5173\u7cfb\u7edf\u786c\u4ef6\u53ca\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u8fdb\u7a0b\u7684\u4fe1\u606f\uff0c\u751a\u81f3\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u5176\u4e2d\u67d0\u4e9b\u6587\u4ef6\u6765\u6539\u53d8\u5185\u6838\u7684\u8fd0\u884c\u72b6\u6001\u3002</p>"},{"location":"blog/2025/07/03/filesystem/#vfs","title":"VFS","text":"<p>\u4e3a\u652f\u6301\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\uff0cLinux \u5728\u5177\u4f53\u7684\u6587\u4ef6\u7cfb\u7edf\u548c\u7528\u6237\u4e4b\u95f4\u5efa\u7acb\u4e86\u4e00\u4e2a\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u7684\u62bd\u8c61\u5c42\uff08Virtual Filesystem,VFS\uff09\u3002\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u5411 VFS \u6ce8\u518c\u81ea\u5df1\u7684\u5b9e\u73b0\uff0c\u7528\u6237\u5bf9\u6587\u4ef6\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0cVFS \u6839\u636e\u5176\u6587\u4ef6\u7cfb\u7edf\u7684\u7c7b\u578b\u8c03\u7528\u4e0d\u540c\u7684\u64cd\u4f5c\u51fd\u6570\u3002</p> <p></p> <p>VFS \u4e2d\u6709\u51e0\u4e2a\u5173\u952e\u6982\u5ff5\uff1a</p> <ul> <li>superblock\uff1a \u5b58\u50a8\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u76f8\u5173\u4fe1\u606f\u3002</li> <li>inode\uff1a \u5b58\u50a8\u4e00\u4e2a\u7279\u5b9a\u6587\u4ef6\u7684\u76f8\u5173\u4fe1\u606f\u3002</li> <li>file\uff1a \u5b58\u50a8\u8fdb\u7a0b\u4e2d\u4e00\u4e2a\u6253\u5f00\u7684\u6587\u4ef6\u7684\u4ea4\u4e92\u76f8\u5173\u7684\u4fe1\u606f\u3002</li> <li>dentry\uff1a \u5b58\u50a8\u76ee\u5f55\u548c\u6587\u4ef6\u7684\u94fe\u63a5\u4fe1\u606f\u3002</li> </ul> <p></p>"},{"location":"blog/2025/07/03/filesystem/#namespace","title":"Namespace","text":"<p>Linux \u6709 Namespace \u7684\u6982\u5ff5\uff0c\u4e0d\u540c Namespace \u7684\u6302\u8f7d\u70b9\u4e92\u4e0d\u5f71\u54cd\uff0c\u5728 VFS \u4e2d\uff0c\u8fdb\u7a0b\u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf Namespace \u4fe1\u606f\u901a\u8fc7\u4e00\u4e2a Namespace \u6570\u636e\u7ed3\u6784\u8fdb\u884c\u5b58\u50a8\u3002<code>list</code> \u5b57\u6bb5\u662f\u4e00\u4e2a\u94fe\u63a5\u4e86\u6240\u6709\u5c5e\u4e8e\u8fd9\u4e2a Namespace \u7684\u6587\u4ef6\u7cfb\u7edf\u7684\u94fe\u8868\uff0c\u800c <code>root</code> \u5b57\u6bb5\u5219\u662f\u8868\u793a\u8fd9\u4e2a Namespace \u7684\u6839\u6587\u4ef6\u7cfb\u7edf\u3002</p>"},{"location":"blog/2025/07/03/filesystem/#_4","title":"\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf","text":"<p>NFS \uff08Network File System\uff0c\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff09\u6700\u65e9\u7531 Sun \u516c\u53f8\u63d0\u51fa\u3002\u5b83\u53ef\u4ee5\u901a\u8fc7\u7f51\u7edc\u8ba9\u4e0d\u540c\u7684\u4e3b\u673a\u8bbf\u95ee\u540c\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>\u901a\u8fc7 NFS \u4f60\u53ef\u4ee5\u50cf\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u4e00\u6837\u8bbf\u95ee NFS \u5171\u4eab\u76ee\u5f55\u3002\u6211\u4eec\u901a\u8fc7\u4e0b\u9762\u7684\u547d\u4ee4\u6765\u5c06\u4e00\u4e2a NFS \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230\u672c\u5730\uff1a <pre><code>mount -t nfs &lt;NFS \u670d\u52a1\u5668 IP&gt;:/&lt;\u5171\u4eab\u76ee\u5f55&gt; &lt;\u6302\u8f7d\u70b9&gt;\n</code></pre> \u4e4b\u540e\u4f60\u5c31\u53ef\u4ee5\u5728\u6302\u8f7d\u70b9\u76ee\u5f55\u4e0b\u8bbf\u95ee NFS \u5171\u4eab\u76ee\u5f55\u4e86\uff0c\u4e0e\u8bbf\u95ee\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u6ca1\u6709\u4efb\u4f55\u5dee\u5f02\u3002</p>"},{"location":"blog/2025/07/03/filesystem/#_5","title":"\u534f\u8bae\u53d1\u5c55","text":"<p>NFS\u4e00\u5171\u53d1\u5e03\u4e863\u4e2a\u7248\u672c\uff1aNFSv2\u3001NFSv3\u3001NFSv4\u3002\u5176\u4e2d\uff0cNFSv4 \u5305\u542b\u4e24\u4e2a\u6b21\u7248\u672c NFSv4.0 \u548c NFSv4.1\u3002\u5176\u4e2d\u5e38\u7528\u7684\u4e3a v3,v4 \u3002</p> \u7f16\u53f7 \u7248\u672c RFC \u65f6\u95f4 1 NFSv2 rfc1094 1989\u5e743\u6708 2 NFSv3 rfc1813 1995\u5e746\u6708 3 NFSv4.0 rfc3530 2003\u5e744\u6708 4 NFSv4.1 rfc5661 2010\u5e741\u6708 5 NFSv4.2 rfc7862 2016\u5e7411\u6708 <p>\u7b80\u5355\u7684\u5bf9\u6bd4\u5982\u4e0b\uff1a</p> <p>\u529f\u80fd</p> <ul> <li> <p>NFSv4.0\uff1a\u662f\u4e00\u79cd\u6709\u72b6\u6001\u7684\u534f\u8bae\uff0c\u81ea\u8eab\u5b9e\u73b0\u4e86\u6587\u4ef6\u9501\u529f\u80fd\u548c\u83b7\u53d6\u6587\u4ef6\u7cfb\u7edf\u6839\u8282\u70b9\u529f\u80fd\u3002</p> </li> <li> <p>NFSv3\uff1a\u5bf9\u6587\u4ef6\u9501\u65e0\u611f\u77e5\uff0c\u540c\u65f6\u6302\u8f7d\u65f6\u53ef\u80fd\u4f1a\u8986\u76d6\u6389v4\u5199\u5165\u7684\u90e8\u5206\u3002</p> </li> </ul> <p>\u5b89\u5168\u6027</p> <ul> <li>NFSv4.0 \u589e\u52a0\u4e86\u5b89\u5168\u6027\uff0c\u652f\u6301 RPCSEC-GSS \u8eab\u4efd\u8ba4\u8bc1\u3002</li> </ul> <p>\u8bf7\u6c42</p> <ul> <li>NFSv4.0 \u53ea\u63d0\u4f9b\u4e86\u4e24\u4e2a\u8bf7\u6c42 NULL \u548c COMPOUND\uff0c\u6240\u6709\u7684\u64cd\u4f5c\u90fd\u6574\u5408\u5230 COMPOUND \u4e2d\uff0c\u5ba2\u6237\u7aef\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u8bf7\u6c42\u5c06\u591a\u4e2a\u64cd\u4f5c\u5c01\u88c5\u5230\u4e00\u4e2a COMPOUND \u8bf7\u6c42\u4e2d\uff0c\u589e\u52a0\u4e86\u7075\u6d3b\u6027\u3002</li> <li>NFSv4.1 \u63d0\u4f9b\u5e76\u884c\u5b58\u50a8\uff0c\u53c8\u88ab\u79f0\u4e3a pNFS\uff0cNFSv4.1\u652f\u6301\u5e76\u884c\u5b58\u50a8\uff0c\u670d\u52a1\u5668\u7531\u4e00\u53f0\u5143\u6570\u636e\u670d\u52a1\u5668\uff08MDS\uff09\u548c\u591a\u53f0\u6570\u636e\u670d\u52a1\u5668\uff08DS\uff09\u6784\u6210\uff0c\u5143\u6570\u636e\u670d\u52a1\u5668\u53ea\u7ba1\u7406\u6587\u4ef6\u5728\u78c1\u76d8\u4e2d\u7684\u5e03\u5c40\uff0c\u6570\u636e\u4f20\u8f93\u5728\u5ba2\u6237\u7aef\u548c\u6570\u636e\u670d\u52a1\u5668\u4e4b\u95f4\u76f4\u63a5\u8fdb\u884c\u3002</li> </ul> <p>\u547d\u4ee4\u7a7a\u95f4</p> <ul> <li>NFSv4.0 \u6587\u4ef6\u7cfb\u7edf\u7684\u547d\u4ee4\u7a7a\u95f4\u53d1\u751f\u4e86\u53d8\u5316\uff0c\u670d\u52a1\u5668\u7aef\u5fc5\u987b\u8bbe\u7f6e\u4e00\u4e2a\u6839\u6587\u4ef6\u7cfb\u7edf\uff08fsid=0\uff09\uff0c\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5728\u6839\u6587\u4ef6\u7cfb\u7edf\u4e0a\u5bfc\u51fa\u3002</li> </ul>"},{"location":"blog/2025/07/03/filesystem/#linux-nfs","title":"Linux \u5185\u6838 NFS \u5b9e\u73b0","text":"<p>\u4ece\u4e0a\u56fe\u6240\u793a\u7684\u6574\u4f53\u67b6\u6784\u56fe\u4e0a\u53ef\u4ee5\u770b\u51fa\uff0cNFS \u4e5f\u662f\u4f4d\u4e8e VFS \u4e0b\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u56e0\u6b64\u5f53 NFS \u6302\u8f7d\u540e\uff0c\u5176\u4e0e\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u5e76\u6ca1\u6709\u4efb\u4f55\u5dee\u5f02\uff0c\u7528\u6237\u5728\u4f7f\u7528\u7684\u65f6\u5019\u4e5f\u662f\u900f\u660e\u7684\u3002</p> <p>\u5185\u6838\u7684 NFS \u670d\u52a1\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u51e0\u4e2a\u7ec4\u4ef6\uff1a</p> <ul> <li>nfsd: <ul> <li>\u5904\u7406 NFS \u5ba2\u6237\u7aef\u7684\u6587\u4ef6\u64cd\u4f5c\u8bf7\u6c42\uff1anfsd \u63a5\u6536\u6765\u81ea\u5ba2\u6237\u7aef\u7684\u5404\u79cd NFS \u534f\u8bae\u8c03\u7528\uff0c\u6bd4\u5982\u8bfb\u53d6\u6587\u4ef6\u3001\u5199\u5165\u6587\u4ef6\u3001\u6253\u5f00\u76ee\u5f55\u3001\u67e5\u627e\u6587\u4ef6\u5c5e\u6027\u3001\u521b\u5efa\u6216\u5220\u9664\u6587\u4ef6\u7b49\uff0c\u5e76\u6267\u884c\u5bf9\u5e94\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u3002</li> <li>\u5b9e\u73b0 NFS \u534f\u8bae\u903b\u8f91\uff1a\u5b83\u6839\u636e NFS \u7248\u672c\u534f\u8bae\uff08\u5982 NFSv3\u3001NFSv4\uff09\u7684\u89c4\u8303\uff0c\u89e3\u6790\u5ba2\u6237\u7aef\u53d1\u6765\u7684\u8bf7\u6c42\uff0c\u5e76\u5c06\u8bf7\u6c42\u8f6c\u6362\u6210\u5185\u6838\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\uff0c\u540c\u65f6\u5c06\u7ed3\u679c\u5c01\u88c5\u6210 NFS \u54cd\u5e94\u53d1\u9001\u7ed9\u5ba2\u6237\u7aef\u3002</li> <li>\u7ef4\u62a4\u6587\u4ef6\u7cfb\u7edf\u72b6\u6001\uff1a\u5bf9\u4e8e\u652f\u6301\u72b6\u6001\u7684 NFS \u7248\u672c\uff08\u5982 NFSv4\uff09\uff0cnfsd \u8fd8\u8d1f\u8d23\u7ef4\u62a4\u9501\u3001\u72b6\u6001\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4\u7b49\u4fe1\u606f\u3002</li> </ul> </li> <li>mountd: <ul> <li>\u5904\u7406\u6302\u8f7d\u8bf7\u6c42\uff1a\u5f53 NFS \u5ba2\u6237\u7aef\u5c1d\u8bd5\u6302\u8f7d\u8fdc\u7a0b\u6587\u4ef6\u7cfb\u7edf\u65f6\uff0c\u4f1a\u5411\u670d\u52a1\u5668\u4e0a\u7684 mountd \u53d1\u9001\u6302\u8f7d\u8bf7\u6c42\uff0cmountd \u8d1f\u8d23\u9a8c\u8bc1\u8bf7\u6c42\u662f\u5426\u5408\u6cd5\uff0c\u4ee5\u53ca\u5224\u65ad\u5ba2\u6237\u7aef\u662f\u5426\u6709\u6743\u9650\u8bbf\u95ee\u6307\u5b9a\u7684\u5bfc\u51fa\uff08export\uff09\u76ee\u5f55\u3002</li> <li>\u7ba1\u7406\u5bfc\u51fa\u76ee\u5f55\u7684\u8bbf\u95ee\u63a7\u5236\uff1amountd \u8d1f\u8d23\u6839\u636e\u670d\u52a1\u5668\u4e0a\u7684\u5bfc\u51fa\u914d\u7f6e\uff08\u901a\u5e38\u662f /etc/exports \u6587\u4ef6\uff09\u68c0\u67e5\u5ba2\u6237\u7aef IP \u5730\u5740\u6216\u8005\u4e3b\u673a\u540d\u662f\u5426\u5141\u8bb8\u8bbf\u95ee\u67d0\u4e2a\u5bfc\u51fa\u76ee\u5f55\u3002</li> <li>\u7ef4\u62a4\u6302\u8f7d\u8868\u4fe1\u606f\uff1a\u5b83\u4f1a\u8bb0\u5f55\u5ba2\u6237\u7aef\u5df2\u7ecf\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u4fe1\u606f\uff0c\u4fbf\u4e8e\u670d\u52a1\u5668\u76d1\u63a7\u5f53\u524d\u7684\u6302\u8f7d\u72b6\u6001\u3002</li> <li>\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7aef\u5bfc\u51fa\u76ee\u5f55\u5217\u8868\uff1a\u5ba2\u6237\u7aef\u53ef\u4ee5\u901a\u8fc7 mountd \u67e5\u8be2\u670d\u52a1\u5668\u4e0a\u53ef\u4ee5\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u5217\u8868\u3002</li> </ul> </li> <li>idmapd: \u548c NFSv4 \u534f\u8bae\u4e00\u8d77\u5f15\u5165\u5e76\u5e7f\u6cdb\u4f7f\u7528\u7684\u7ec4\u4ef6\uff0cNFSv2\u3001v3 \u5728\u8bbe\u8ba1\u65f6\u6ca1\u6709\u96c6\u6210 idmap \u529f\u80fd\uff0c\u8fd9\u4e9b\u7248\u672c\u4e3b\u8981\u5904\u7406\u6570\u5b57 UID/GID\u3002NFSv4 \u5728 RFC 3530 \u4e2d\u6b63\u5f0f\u5f15\u5165\u4e86\u57fa\u4e8e\u5b57\u7b26\u4e32\u7684\u8eab\u4efd\u6807\u8bc6\uff08\u5982\u7528\u6237\u540d@\u57df\u540d\u683c\u5f0f\uff09\uff0c\u4e3a\u6b64\u9700\u8981\u4e00\u4e2a\u7528\u6237\u8eab\u4efd\u6620\u5c04\u670d\u52a1\uff08idmapd\uff09\uff0c\u7528\u6765\u5728\u5ba2\u6237\u7aef\u7684\u5b57\u7b26\u4e32\u8eab\u4efd\u548c\u670d\u52a1\u5668\u7684\u6570\u5b57 UID/GID \u4e4b\u95f4\u505a\u8f6c\u6362\u3002</li> <li>portmapper: Linux \u7684 RPC \u670d\u52a1\uff0c\u5728\u5ba2\u6237\u7aef\u8bf7\u6c42\u65f6\uff0c\u8d1f\u8d23\u54cd\u5e94\u76ee\u7684 RPC server \u7aef\u53e3\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u5de5\u4f5c\u5728 TCP \u4e0e UDP \u7684 111 \u7aef\u53e3\u4e0a\u3002</li> </ul> <p>NFS \u670d\u52a1\u5668\u7684\u7aef\u53e3\u9ed8\u8ba4\u4e3a 2049\u3002</p> <p>\u76f8\u5173\u547d\u4ee4\uff1a</p> <ul> <li><code>exportfs</code>\uff1aNFS \u670d\u52a1\u5668\u7aef\u7528\u6765\u7ba1\u7406\u548c\u663e\u793a\u5df2\u5bfc\u51fa\u7684\uff08shared\uff09\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u3002</li> <li><code>nfsstat</code>\uff1a\u901a\u5e38\u4f4d\u4e8e /usr/sbin/nfsstat\uff0c\u7528\u4e8e\u67e5\u770b NFS \u670d\u52a1\u5668\u7684\u72b6\u6001\u3002</li> <li><code>rpcinfo</code>\uff1a\u67e5\u770b RPC \u4fe1\u606f\u3002</li> <li><code>showmount</code>\uff1a\u67e5\u770b\u5f53\u524d\u6302\u8f7d\u7684 NFS \u5171\u4eab\u76ee\u5f55\u3002</li> </ul> <p>\u60f3\u8981\u6302\u8f7d NFS \uff0c\u5ba2\u6237\u7aef\u9700\u8981\u5b89\u88c5 NFS \u5ba2\u6237\u7aef\u8f6f\u4ef6\u3002\u5728\u57fa\u4e8e Debian/Ubuntu \u7684\u7cfb\u7edf\u4e0a\uff0c\u6267\u884c\uff1a <pre><code>sudo apt update\nsudo apt install nfs-common\n</code></pre></p>"},{"location":"blog/2025/07/03/filesystem/#nfs-ganesha","title":"NFS-Ganesha","text":"<p>NFS-Ganesha \u662f\u4e00\u4e2a\u7528\u6237\u6001\u7684 NFS \u670d\u52a1\u5668\u5b9e\u73b0\u3002\u5bf9\u6bd4 Linux \u5185\u6838 NFS \u5b9e\u73b0\uff0c\u7528\u6237\u6001\u7684 NFS \u670d\u52a1\u5668\u5b9e\u73b0\u6709\u4ee5\u4e0b\u4f18\u52bf\uff1a</p> <ul> <li>\u7075\u6d3b\u7684\u5185\u5b58\u5206\u914d</li> <li>\u66f4\u5f3a\u7684\u79fb\u690d\u6027</li> <li>\u5bf9\u63a5 FUSE \u6587\u4ef6\u7cfb\u7edf</li> <li>\u652f\u6301\u66f4\u591a\u7684\u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\uff0c\u5982 CephFS\u3001GlusterFS \u7b49</li> </ul> <p>NFS-Ganesha \u7684\u6574\u4f53\u67b6\u6784\u56fe\u5982\u4e0b\uff1a</p> <p></p> <p><code>FSAL</code> \u5c42\u5c06\u4e0d\u540c\u7684\u540e\u7aef\u5b58\u50a8\u7cfb\u7edf\u8fdb\u884c\u62bd\u8c61\u4e0e\u4e0a\u5c42\u534f\u8bae\u5c42\u5bf9\u63a5\uff0c\u53ef\u4ee5\u65b9\u4fbf\u8fdb\u884c\u6269\u5c55\uff0c\u76ee\u524d Ganesha \u652f\u6301\u5982\u4e0b\u7684 <code>FSAL</code>:</p> <ul> <li>CEPH\uff1a\u540e\u7aef\u5bf9\u63a5 CephFS</li> <li>Gluster\uff1a\u540e\u7aef\u5bf9\u63a5 GlusterFS</li> <li>GPFS\uff1a\u540e\u7aef\u5bf9\u63a5 GPFS</li> <li>VFS\uff1a\u5bf9\u63a5\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u652f\u6301\u4efb\u4f55\u652f\u6301\u300c\u6587\u4ef6\u53e5\u67c4\u300d\u7684 POSIX \u517c\u5bb9\u64cd\u4f5c\u7cfb\u7edf\uff0c\u5bf9\u4e8e Linux\uff0c\u5b83\u652f\u6301\u5728 2.6.39 \u4e4b\u540e\u7684\u5185\u6838\u4e0a\u8fd0\u884c\u7684\u4efb\u4f55\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u3002</li> <li>XFS\uff1a\u8fd9\u662f FSAL_VFS \u7684\u4e00\u79cd\u53d8\u4f53\uff0c\u4ec5\u9002\u7528\u4e8e xfs \u6587\u4ef6\u7cfb\u7edf\u3002\u5b83\u4e0d\u4f9d\u8d56\u4e8e\u5185\u6838\u7684 <code>open_by_handle_at</code>/<code>name_to_handle_at</code> \u63a5\u53e3\uff0c\u56e0\u4e3a xfs \u63d0\u4f9b\u4e86\u81ea\u5df1\u7684\u63a5\u53e3\u6765\u5904\u7406 NFS \u53e5\u67c4\u3002</li> <li>Luster\uff1a\u8fd9\u4e2a FSAL \u4e5f\u662f FSAL_VFS \u7684\u4e00\u4e2a\u53d8\u4f53\uff0c\u5b83\u4f7f\u7528 LUSTRE \u5206\u5e03\u5f0f\u6587\u4ef6\u7cfb\u7edf\u4f5c\u4e3a\u5176\u540e\u7aef\u3002\u5b83\u76ee\u524d\u4e0d\u652f\u6301 pNFS\uff0c\u4f46\u8ba1\u5212\u5728\u672a\u6765\u7248\u672c\u4e2d\u63d0\u4f9b\u6587\u4ef6\u5e03\u5c40\u652f\u6301\u3002\u8fd9\u662f FSAL_VFS \u7684\u7279\u5b9a\u5b9e\u73b0\uff0c\u5f53\u524d\u652f\u6301\u662f\u6709\u9650\u7684\u3002</li> <li>RGW\uff1a</li> <li>KVSFS</li> <li>LIZARDFS</li> <li>Proxy_V3\uff1a\u8fd9\u4e2a FSAL \u4f1a\u4f5c\u4e3a\u5176\u4ed6 NFS \u670d\u52a1\u5668\u7684 NFSv3 \u5ba2\u6237\u7aef\u8fd0\u884c\uff0c\u5b83\u7684\u7528\u9014\u4e4b\u4e00\u662f\u5145\u5f53 NFSv4.x \u548c 9P\uff08Plan 9 \u8fdc\u7a0b\u6587\u4ef6\u7cfb\u7edf\uff09\u5ba2\u6237\u7aef\u5230 NFSv3 \u670d\u52a1\u5668\u7684\u7f51\u5173\uff08\u4ee3\u7406\uff09\u3002</li> <li>Proxy_V4\uff1a\u8fd9\u4e2a FSAL \u4f1a\u4f5c\u4e3a\u5176\u4ed6 NFS \u670d\u52a1\u5668\u7684 NFSv4 \u5ba2\u6237\u7aef\u8fd0\u884c\uff0c\u5b83\u7684\u7528\u9014\u4e4b\u4e00\u662f\u5145\u5f53 NFSv4.x \u548c 9P\uff08Plan 9 \u8fdc\u7a0b\u6587\u4ef6\u7cfb\u7edf\uff09\u5ba2\u6237\u7aef\u5230 NFSv3 \u670d\u52a1\u5668\u7684\u7f51\u5173\uff08\u4ee3\u7406\uff09</li> </ul> <p>\u53c2\u89c1\uff1a\u652f\u6301\u7684\u540e\u7aef\u5b58\u50a8\u7cfb\u7edf</p>"},{"location":"blog/2025/07/03/filesystem/#_6","title":"\u5176\u4ed6","text":""},{"location":"blog/2025/07/03/filesystem/#nfs","title":"NFS \u6743\u9650\u63a7\u5236","text":""},{"location":"blog/2025/07/03/filesystem/#nfs_1","title":"NFS \u5e38\u7528\u53c2\u6570","text":""},{"location":"blog/2025/07/03/filesystem/#fuse","title":"FUSE","text":"<p>FUSE\uff08filesystem in userspace\uff09,\u662f\u4e00\u4e2a\u7528\u6237\u7a7a\u95f4\u7684\u6587\u4ef6\u7cfb\u7edf\u3002\u901a\u8fc7 FUSE \u5185\u6838\u6a21\u5757\u7684\u652f\u6301\uff0c\u5f00\u53d1\u8005\u53ea\u9700\u8981\u6839\u636e FUSE \u63d0\u4f9b\u7684\u63a5\u53e3\u5b9e\u73b0\u5177\u4f53\u7684\u6587\u4ef6\u64cd\u4f5c\u5c31\u53ef\u4ee5\u5b9e\u73b0\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\u3002\u7531\u4e8e\u5176\u4e3b\u8981\u5b9e\u73b0\u4ee3\u7801\u4f4d\u4e8e\u7528\u6237\u7a7a\u95f4\u4e2d\uff0c\u800c\u4e0d\u9700\u8981\u91cd\u65b0\u7f16\u8bd1\u5185\u6838\uff0c\u8fd9\u7ed9\u5f00\u53d1\u8005\u5e26\u6765\u4e86\u4f17\u591a\u4fbf\u5229\u3002</p> <p></p> <p>FUSE \u7684\u6838\u5fc3\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1aFUSE \u5185\u6838\u6a21\u5757\u548c FUSE \u7528\u6237\u6001\u5e93\uff08libfuse\uff09\u3002\u7528\u6237\u53ef\u4ee5\u6839\u636e libfuse \u63d0\u4f9b\u7684 API\uff0c\u5b9e\u73b0\u4e00\u4e2a\u7528\u6237\u6001\u7684\u5b88\u62a4\u8fdb\u7a0b\uff0c\u5904\u7406\u6765\u81ea\u5185\u6838\u6a21\u5757\u7684\u6587\u4ef6\u64cd\u4f5c\u8c03\u7528\u3002</p> <p>\u4e00\u4e2a FUSE \u5bf9\u5e94\u4e00\u4e2a\u7528\u6237\u6001\u7684\u5b88\u62a4\u8fdb\u7a0b\uff0c\u8be5\u8fdb\u7a0b\u542f\u52a8\u540e\u4f1a\u5411<code>/dev/fuse</code>\u83b7\u53d6 mount fd\uff0c\u5c06 FUSE mount \u5230\u4e00\u4e2a\u6302\u8f7d\u70b9\u4e0a\uff0c\u800c\u540e\u901a\u8fc7\u8be5\u6302\u8f7d\u70b9\u4e0e FUSE \u4ea4\u4e92\u3002FUSE \u5bf9\u4e8e\u6587\u4ef6\u8bfb\u5199\u7684\u5904\u7406\u903b\u8f91\u5927\u81f4\u4e3a\u6d41\u7a0b\u4e3a\uff1a</p> <ul> <li>\u5185\u6838\u6a21\u5757\u6ce8\u518c\u4e00\u4e2a\u5b57\u7b26\u8bbe\u5907 <code>/dev/fuse</code> \u4f5c\u4e3a\u5185\u6838\u548c\u7528\u6237\u6001\u7684\u901a\u4fe1\u901a\u9053\uff0c\u5b88\u62a4\u8fdb\u7a0b\u8c03\u7528 <code>read()</code> \u4ece\u8be5\u8bbe\u5907\u8bfb\u53d6\u6570\u636e\uff0c\u5f53\u65e0\u6570\u636e\u65f6\uff0c<code>read()</code> \u963b\u585e\uff0c\u5b88\u62a4\u8fdb\u7a0b\u6302\u8d77\u91ca\u653e CPU\u3002</li> <li>\u5f53\u7528\u6237\u7684\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77\u6587\u4ef6\u64cd\u4f5c\u65f6\uff0c\u8c03\u7528 libc \u548c\u7cfb\u7edf\u8c03\u7528\u8fdb\u5165 VFS \u5c42\uff0cVFS\u5c42\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230 FUSE \u5185\u6838\u6a21\u5757\uff0cFUSE \u5185\u6838\u6a21\u5757\u4f1a\u5c06\u8bf7\u6c42\u5c01\u88c5\u6210\u7279\u5b9a\u683c\u5f0f\u7684\u6d88\u606f\uff0c\u5199\u5165 <code>/dev/fuse</code> \u8bbe\u5907\uff0c\u4e4b\u540e<code>/dev/fuse</code>\u53ef\u8bfb\uff0c\u5b88\u62a4\u8fdb\u7a0b\u88ab\u5524\u9192\uff0c\u8bfb\u53d6\u5bf9\u5e94\u7684\u6d88\u606f\u3002</li> <li>\u5b88\u62a4\u8fdb\u7a0b\u8bfb\u53d6\u5230\u6d88\u606f\u4e4b\u540e\uff0c\u5bf9\u6587\u4ef6\u64cd\u4f5c\u8fdb\u884c\u54cd\u5e94\uff0c\u6b64\u65f6\u5bf9\u6587\u4ef6\u7684\u5904\u7406\u51fd\u6570\u4f4d\u4e8e\u7528\u6237\u6001\u3002</li> <li>\u5904\u7406\u5b8c\u6210\u4e4b\u540e\uff0c\u5b88\u62a4\u8fdb\u7a0b\u5c06\u7ed3\u679c\u901a\u8fc7 <code>write()</code> \u5199\u5165 <code>/dev/fuse</code> \u8bbe\u5907\uff0c\u5185\u6838\u6a21\u5757\u4f1a\u5c06\u6570\u636e\u590d\u5236\u5230\u7528\u6237\u6001\uff0c\u5e94\u7528\u7a0b\u5e8f\u5373\u53ef\u83b7\u53d6\u5230\u5904\u7406\u7ed3\u679c\u3002</li> </ul> <p>\u867d\u7136\u53ea\u6709\u4e00\u4e2a <code>/dev/fuse</code> \u8bbe\u5907\u8282\u70b9\uff0c\u4f46\u4e0d\u540c\u7684 FUSE \u5b88\u62a4\u8fdb\u7a0b\u6253\u5f00\u5b83\u4f1a\u62ff\u5230\u4e0d\u540c\u7684 mount fd\uff0c\u5185\u6838\u6839\u636e\u4e0d\u540c\u7684 fd \u533a\u5206\u4e0d\u540c\u7684 FUSE \u5b9e\u4f8b\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5c06\u64cd\u4f5c\u6b63\u786e\u7684\u5206\u53d1\u5230\u5bf9\u5e94\u7684 FUSE \u5b9e\u4f8b\u4e0a\u3002</p> <p>\u4e00\u4e9b FUSE \u5b9e\u73b0\uff1a</p> <ul> <li>JuiceFS</li> <li>Goofys</li> <li>Geesefs</li> </ul>"},{"location":"blog/2025/07/03/filesystem/#_7","title":"\u53c2\u8003","text":"<ul> <li>https://www.cnblogs.com/cxuanBlog/p/12565601.html</li> <li>https://www.cnblogs.com/kuangdaoyizhimei/p/18311375</li> <li>rootfs\u6839\u6587\u4ef6\u7cfb\u7edf\u5236\u4f5c\u53ca\u6302\u8f7d\u65b9\u6cd5-\u8be6\u89e3</li> <li>https://www.kernel.org/doc/Documentation/filesystems/ramfs-rootfs-initramfs.txt</li> <li>proc</li> <li>Windows/Linux\u6587\u4ef6\u7cfb\u7edf\u7c7b\u578b\u4ecb\u7ecd</li> <li>xfs</li> <li>\u6df1\u5165\u7406\u89e3Linux\u5185\u6838\u2014\u2014VFS</li> <li>NFS-Ganesha \u6838\u5fc3\u67b6\u6784\u89e3\u8bfb</li> <li>FUSE\u6587\u4ef6\u7cfb\u7edf</li> <li>FUSE\uff0c\u4ece\u5185\u6838\u5230\u7528\u6237\u6001\u6587\u4ef6\u7cfb\u7edf\u7684\u8bbe\u8ba1\u4e4b\u8def</li> </ul>"},{"location":"blog/2025/08/13/go-generic/","title":"Go \u6cdb\u578b","text":""},{"location":"blog/2025/08/13/go-generic/#_1","title":"\u4e00\u4e2a\u4f8b\u5b50","text":"<pre><code>// SumIntsOrFloats sums the values of map m. It supports both int64 and float64\n// as types for map values.\nfunc SumIntsOrFloats[K comparable, V int64 | float64](m map[K]V) V {\n    var s V\n    for _, v := range m {\n        s += v\n    }\n    return s\n}\n</code></pre>"},{"location":"blog/2025/08/13/go-generic/#go_1","title":"Go \u6cdb\u578b\u4ecb\u7ecd","text":"<p>Go \u4ece 1.18 \u5f00\u59cb\u652f\u6301\u6cdb\u578b\u3002\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u4e09\u4e2a\u5927\u7684\u7279\u6027\uff1a</p> <ul> <li>\u7c7b\u578b\u548c\u51fd\u6570\u652f\u6301\u7c7b\u578b\u53c2\u6570\uff08Type Parameters\uff09</li> <li>\u6269\u5c55 <code>interface</code> \u8bed\u6cd5\uff0c\u652f\u6301\u5b9a\u4e49\u4e00\u7ec4\u7c7b\u578b\u7684\u7ea6\u675f</li> <li>\u7c7b\u578b\u63a8\u65ad\uff0c\u652f\u6301\u6839\u636e\u51fd\u6570\u53c2\u6570\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\u53c2\u6570</li> </ul>"},{"location":"blog/2025/08/13/go-generic/#type-parameters","title":"\u7c7b\u578b\u53c2\u6570\uff08Type Parameters\uff09","text":"<p>\u51fd\u6570\u6216\u8005\u7c7b\u578b\u53ef\u4ee5\u63a5\u53d7\u7c7b\u578b\u53c2\u6570\uff0c\u7528\u65b9\u62ec\u53f7 <code>[]</code> \u62ec\u8d77\u6765\uff0c\u653e\u5728\u51fd\u6570\u540d\u6216\u8005\u7c7b\u578b\u540d\u7684\u540e\u9762\u3002 <pre><code>[P any]\n[S interface{ ~[]byte|string }]\n[S ~[]E, E any]\n[P Constraint[int]]\n[_ any]\n</code></pre></p>"},{"location":"blog/2025/08/13/go-generic/#_2","title":"\u51fd\u6570\u7684\u7c7b\u578b\u53c2\u6570","text":"<p>\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u7c7b\u578b\u53c2\u6570\uff0c\u4f8b\u5982\uff1a <pre><code>func MapKeys[K comparable, V any](m map[K]V) []K {\n    r := make([]K, 0, len(m))\n    for k := range m {\n        r = append(r, k)\n    }\n    return r\n}\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u5177\u4f53\u7684\u7c7b\u578b\u53c2\u6570\u6765\u5b9e\u4f8b\u5316\u8fd9\u4e2a\u6cdb\u578b\u51fd\u6570\uff1a <pre><code>func main() {\n    f := MapKeys[int, string]\n    m := map[int]string{1: \"a\", 2: \"b\"}\n    keys := f(m)\n    fmt.Println(keys) // [1 2]\n}\n</code></pre></p>"},{"location":"blog/2025/08/13/go-generic/#_3","title":"\u7c7b\u578b\u7684\u7c7b\u578b\u53c2\u6570","text":"<p>\u7c7b\u578b\u4e5f\u53ef\u4ee5\u63a5\u53d7\u7c7b\u578b\u53c2\u6570\uff0c\u4f8b\u5982\uff1a <pre><code>type List[T any] struct {\n    head, tail *ListNode[T]\n}\n</code></pre> \u540c\u6837\uff0c\u8be5\u7c7b\u578b\u7684\u65b9\u6cd5\u7684\u63a5\u6536\u5668\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8be5\u7c7b\u578b\u53c2\u6570\uff1a <pre><code>func (l *List[T]) Append(v T) {\n    l.tail.next = &amp;ListNode[T]{val: v}\n    l.tail = l.tail.next\n}\n</code></pre></p>"},{"location":"blog/2025/08/13/go-generic/#type-sets","title":"\u7c7b\u578b\u96c6\uff08Type Sets\uff09","text":"<p>\u6269\u5c55 <code>interface</code> \u7684\u8bed\u6cd5\uff0c\u652f\u6301\u901a\u8fc7 <code>interface</code> \u6765\u5b9a\u4e49\u4e00\u7ec4\u7c7b\u578b\uff0c\u5f62\u6210\u7c7b\u578b\u7ea6\u675f\uff08Type Constraints\uff09\uff0c\u4f8b\u5982\uff1a <pre><code>type Number interface {\n    int | int8 | int16 | int32 | int64 |\n        uint | uint8 | uint16 | uint32 | uint64 | float32 | float64\n}\n</code></pre> \u6b64\u5916\uff0c\u5bf9\u4e8e\u7c7b\u578b\u7ea6\u675f\uff0c\u6211\u4eec\u6709\u65f6\u53ea\u5173\u6ce8\u5176\u5e95\u5c42\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a <pre><code>type MyInt int\n</code></pre> <code>MyInt</code> \u662f <code>int</code> \u7684\u522b\u540d\uff0c\u56e0\u6b64 <code>MyInt</code> \u4e5f\u6ee1\u8db3 <code>Number</code> \u63a5\u53e3\u3002\u53ef\u4ee5\u901a\u8fc7 <code>~</code> \u6765\u6307\u5b9a\u5e95\u5c42\u7c7b\u578b\uff0c\u4f8b\u5982\uff1a <pre><code>type Number interface {\n    ~int | ~int8 | ~int16 | ~int32 | ~int64 |\n        ~uint | ~uint8 | ~uint16 | ~uint32 | ~uint64 | ~float32 | ~float64\n}\n</code></pre></p>"},{"location":"blog/2025/08/13/go-generic/#_4","title":"\u7c7b\u578b\u63a8\u65ad","text":""},{"location":"blog/2025/08/13/go-generic/#_5","title":"\u51fd\u6570\u7684\u7c7b\u578b\u63a8\u65ad","text":"<p>Go \u652f\u6301\u6839\u636e\u51fd\u6570\u53c2\u6570\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\u53c2\u6570\uff0c\u4f8b\u5982\uff1a <pre><code>func SumIntsOrFloats[K comparable, V int64 | float64](m map[K]V) V {\n    var s V\n    for _, v := range m {\n        s += v\n    }\n    return s\n}\n</code></pre> \u6211\u4eec\u53ef\u4ee5\u7701\u7565\u7c7b\u578b\u53c2\u6570\uff0c\u4f8b\u5982\uff1a <pre><code>func main() {\n    m := map[int]int64{1: 1, 2: 2}\n    s := SumIntsOrFloats(m)\n    fmt.Println(s) // 3\n}\n</code></pre></p>"},{"location":"blog/2025/08/13/go-generic/#_6","title":"\u7c7b\u578b\u7ea6\u675f\u7684\u7c7b\u578b\u63a8\u65ad","text":"<p><pre><code>// Scale returns a copy of s with each element multiplied by c.\nfunc Scale[S ~[]E, E constraints.Integer](s S, c E) S {\n    r := make(S, len(s))\n    for i, v := range s {\n        r[i] = v * c\n    }\n    return r\n}\n</code></pre> \u7c7b\u578b E \u7531 <code>constraints.Integer</code> \u7ea6\u675f\uff0c\u6211\u4eec\u4e0b\u9762\u7684\u8c03\u7528\u53ef\u4ee5\u7701\u7565\u53c2\u6570\uff0cGo \u53ef\u4ee5\u81ea\u52a8\u63a8\u65ad\u3002 <pre><code>type Point []int32\n\nfunc (p Point) String() string {\n    // Details not important.\n}\n\n// ScaleAndPrint doubles a Point and prints it.\nfunc ScaleAndPrint(p Point) {\n    r := Scale(p, 2)\n    fmt.Println(r.String()) // DOES NOT COMPILE\n}\n</code></pre></p>"},{"location":"blog/2025/08/13/go-generic/#tips","title":"Tips","text":"<ul> <li>\u7c7b\u578b\u96c6\u4e2d\u7684\u7c7b\u578b\u4e0d\u80fd\u6709\u65b9\u6cd5\u3002\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u65e0\u6548\u7684\uff1a     <pre><code>type Comparable[T any] interface {\n    Compare(T) int\n}\n\n// invalid\ntype OrderOrCompare[T any] interface {\n    constraints.Ordered | Comparable[T]\n}\n</code></pre></li> <li>\u5185\u7f6e\u7684\u4e00\u4e9b\u7c7b\u578b\u7ea6\u675f\uff0c\u53ef\u4ee5\u5728 <code>golang.org/x/exp/constraints</code> \u5305\u4e2d\u627e\u5230\u3002       | \u7c7b\u578b\u7ea6\u675f | \u8bf4\u660e       |   | -------- | ---------- |   | Signed   | \u6709\u7b26\u53f7\u6574\u6570 |   | Unsigned | \u65e0\u7b26\u53f7\u6574\u6570 |   | Integer  | \u6574\u6570       |   | Float    | \u6d6e\u70b9\u6570     |   | Complex  | \u590d\u6570       |   | Ordered  | \u6709\u5e8f\u7c7b\u578b   |</li> </ul>"},{"location":"blog/2025/06/23/k8s-storage/","title":"Kubernetes \u5b58\u50a8","text":"<p>Kubernetes \u5377\u4e3a Pod \u4e2d\u7684\u5bb9\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u8bbf\u95ee\u548c\u5171\u4eab\u6570\u636e\u7684\u65b9\u5f0f\u3002\u901a\u8fc7\u5377\u53ef\u4ee5\u5b9e\u73b0\uff1a</p> <ul> <li>\u6570\u636e\u6301\u4e45\u6027\uff1a \u5bb9\u5668\u4e2d\u7684\u6587\u4ef6\u5728\u78c1\u76d8\u4e0a\u662f\u4e34\u65f6\u5b58\u653e\u7684\uff0c\u8fd9\u7ed9\u5728\u5bb9\u5668\u4e2d\u8fd0\u884c\u8f83\u91cd\u8981\u7684\u5e94\u7528\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\u3002 \u5f53\u5bb9\u5668\u5d29\u6e83\u6216\u88ab\u505c\u6b62\u65f6\uff0c\u5bb9\u5668\u7684\u72b6\u6001\u4e0d\u4f1a\u88ab\u4fdd\u5b58\uff0c\u56e0\u6b64\u5728\u5bb9\u5668\u751f\u547d\u671f\u5185\u521b\u5efa\u6216\u4fee\u6539\u7684\u6240\u6709\u6587\u4ef6\u90fd\u5c06\u4e22\u5931\u3002 \u5728\u5d29\u6e83\u4e4b\u540e\uff0ckubelet \u4f1a\u4ee5\u5e72\u51c0\u7684\u72b6\u6001\u91cd\u542f\u5bb9\u5668\u3002</li> <li>\u5171\u4eab\u5b58\u50a8\uff1a \u5f53\u591a\u4e2a\u5bb9\u5668\u5728\u4e00\u4e2a Pod \u4e2d\u8fd0\u884c\u5e76\u9700\u8981\u5171\u4eab\u6587\u4ef6\u65f6\uff0c\u4f1a\u51fa\u73b0\u53e6\u4e00\u4e2a\u95ee\u9898\u3002 \u90a3\u5c31\u662f\u5728\u6240\u6709\u5bb9\u5668\u4e4b\u95f4\u8bbe\u7f6e\u548c\u8bbf\u95ee\u5171\u4eab\u6587\u4ef6\u7cfb\u7edf\u53ef\u80fd\u4f1a\u5f88\u6709\u96be\u5ea6\u3002</li> </ul>"},{"location":"blog/2025/06/23/k8s-storage/#_1","title":"\u57fa\u7840\u6982\u5ff5","text":""},{"location":"blog/2025/06/23/k8s-storage/#_2","title":"\u4e34\u65f6\u5377","text":"<ul> <li>EmptyDir \uff1a \u662f\u6700\u7b80\u5355\u7684\u5377\u7c7b\u578b\uff0c\u5b83\u5728 Pod \u4e2d\u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u76ee\u5f55\uff0c\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u3002 \u5f53 Pod \u88ab\u5220\u9664\u65f6\uff0cEmptyDir \u4e2d\u7684\u6570\u636e\u4e5f\u4f1a\u88ab\u5220\u9664\u3002</li> <li>ConfigMap \uff1a \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5377\u7c7b\u578b\uff0c\u5b83\u5c06 ConfigMap \u4e2d\u7684\u6570\u636e\u4f5c\u4e3a\u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u3002 \u8fd9\u610f\u5473\u7740\u5bb9\u5668\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee ConfigMap \u4e2d\u7684\u914d\u7f6e\u6570\u636e\uff0c\u800c\u65e0\u9700\u5728\u5bb9\u5668\u4e2d\u914d\u7f6e\u6587\u4ef6\u7cfb\u7edf\u3002</li> <li>Secret \uff1a \u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5377\u7c7b\u578b\uff0c\u5b83\u5c06 Secret \u4e2d\u7684\u6570\u636e\u4f5c\u4e3a\u6587\u4ef6\u6302\u8f7d\u5230\u5bb9\u5668\u4e2d\u3002 \u8fd9\u610f\u5473\u7740\u5bb9\u5668\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee Secret \u4e2d\u7684\u914d\u7f6e\u6570\u636e\uff0c\u800c\u65e0\u9700\u5728\u5bb9\u5668\u4e2d\u914d\u7f6e\u6587\u4ef6\u7cfb\u7edf\u3002</li> </ul>"},{"location":"blog/2025/06/23/k8s-storage/#_3","title":"\u6301\u4e45\u5316\u5377","text":"<ul> <li>PersistentVolume (PV) \uff1a\u96c6\u7fa4\u7ba1\u7406\u5458\u9884\u5148\u914d\u7f6e\u6216\u52a8\u6001\u521b\u5efa\u7684\u5b58\u50a8\u8d44\u6e90\uff0c\u662f\u96c6\u7fa4\u57fa\u7840\u8bbe\u65bd\u7684\u4e00\u90e8\u5206\u3002PV \u5177\u6709\u72ec\u7acb\u4e8e Pod \u7684\u751f\u547d\u5468\u671f\uff0c\u5c01\u88c5\u4e86\u5e95\u5c42\u5b58\u50a8\u5b9e\u73b0\u7684\u5177\u4f53\u7ec6\u8282\uff08\u5982 NFS\u3001iSCSI\u3001\u4e91\u5b58\u50a8\u7b49\uff09\u3002</li> <li>PersistentVolumeClaim (PVC) \uff1a\u7528\u6237\u8bf7\u6c42\u548c\u7ed1\u5b9a PV \u7684\u8d44\u6e90\u5bf9\u8c61\u3002PVC \u5b9a\u4e49\u4e86\u7528\u6237\u5bf9\u5b58\u50a8\u7684\u9700\u6c42\uff0c\u5305\u62ec\u5b58\u50a8\u5927\u5c0f\u3001\u8bbf\u95ee\u6a21\u5f0f\u3001\u5b58\u50a8\u7c7b\u7b49\u3002PVC \u53ef\u4ee5\u52a8\u6001\u521b\u5efa\u6216\u7ed1\u5b9a\u5230\u73b0\u6709\u7684 PV\u3002</li> <li>StorageClass \uff1a\u5b9a\u4e49\u4e86\u5982\u4f55\u52a8\u6001\u5236\u5907 PV \u7684\u6a21\u677f\u3002 \u7ba1\u7406\u5458\u53ef\u4ee5\u6839\u636e\u9700\u8981\u521b\u5efa\u591a\u4e2a StorageClass\uff0c\u6bcf\u4e2a StorageClass \u90fd\u6709\u81ea\u5df1\u7684\u5236\u5907\u7b56\u7565\u548c\u53c2\u6570\u3002</li> </ul>"},{"location":"blog/2025/06/23/k8s-storage/#_4","title":"\u5b58\u50a8\u67b6\u6784","text":"<p>\u4e0b\u9762\u4ecb\u7ecd\u4e00\u4e0b Kubernetes \u4e2d\u5b58\u50a8\u67b6\u6784\uff1a  </p> <p>  \u56fe\u4e2d\u5404\u7ec4\u4ef6\u4f5c\u7528\u5982\u4e0b\uff1a</p> <ul> <li> <p>PV Controller: \u8d1f\u8d23 PV/PVC \u7684\u7ed1\u5b9a\u3001\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u5e76\u6839\u636e\u9700\u6c42\u8fdb\u884c\u6570\u636e\u5377\u7684 Provision/Delete \u64cd\u4f5c\uff1b</p> </li> <li> <p>AD Controller\uff1a\u8d1f\u8d23\u5b58\u50a8\u8bbe\u5907\u7684 Attach/Detach \u64cd\u4f5c\uff0c\u5c06\u8bbe\u5907\u6302\u8f7d\u5230\u76ee\u6807\u8282\u70b9\uff1b</p> </li> <li> <p>Volume Manager\uff1a\u7ba1\u7406\u5377\u7684 Mount/Unmount \u64cd\u4f5c\u3001\u5377\u8bbe\u5907\u7684\u683c\u5f0f\u5316\u4ee5\u53ca\u6302\u8f7d\u5230\u4e00\u4e9b\u516c\u7528\u76ee\u5f55\u4e0a\u7684\u64cd\u4f5c\uff1b</p> </li> <li> <p>Volume Plugins\uff1a\u5b83\u4e3b\u8981\u662f\u5bf9\u4e0a\u9762\u6240\u6709\u6302\u8f7d\u529f\u80fd\u7684\u5b9e\u73b0\uff1b</p> </li> <li> <p>Scheduler\uff1a\u5b9e\u73b0\u5bf9 Pod \u7684\u8c03\u5ea6\u80fd\u529b\uff0c\u4f1a\u6839\u636e\u4e00\u4e9b\u5b58\u50a8\u76f8\u5173\u7684\u7684\u5b9a\u4e49\u53bb\u505a\u4e00\u4e9b\u5b58\u50a8\u76f8\u5173\u7684\u8c03\u5ea6\uff1b</p> </li> </ul> <p>PV Controller\u3001AD Controller\u3001Volume Manager \u4e3b\u8981\u662f\u8fdb\u884c\u64cd\u4f5c\u7684\u8c03\u7528\uff0c\u800c\u5177\u4f53\u64cd\u4f5c\u5219\u662f\u7531 Volume Plugins \u5b9e\u73b0\u7684\u3002</p> <p>\u5f53\u6211\u4eec\u5728\u4e00\u4e2a Pod \u4e2d\u4f7f\u7528 PVC \u5e76\u6302\u8f7d\u5230\u5bb9\u5668\u7684\u6307\u5b9a\u76ee\u5f55\u65f6\uff0cK8s \u5bf9\u8be5 Pod \u7684\u521b\u5efa\u6d41\u7a0b\u5927\u81f4\u5982\u4e0b\uff1a</p> <p></p> <ul> <li>\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u5305\u542b PVC \u7684 Pod</li> <li>PV Controller \u89c2\u5bdf\u5230 Pending \u7684 PVC\uff0c PV Controller \u4f1a\u53bb\u96c6\u7fa4\u627e\u4e00\u4e2a\u5408\u9002\u7684 PV\uff0c\u5982\u679c\u627e\u4e0d\u5230\uff0c\u5219\u8c03\u7528 Volume Plugin \u53bb\u505a Provision\uff0c\u4e4b\u540e\u521b\u5efa\u4e00\u4e2a PV\uff0c\u5c06\u8be5 PV \u4e0e PVC \u7ed1\u5b9a\uff0c\u4e3a PVC \u6253\u4e0a <code>\"volume.kubernetes.io/selected-node\"</code> \u6807\u7b7e\uff0c\u4f9b\u540e\u7eed Scheduler \u4f7f\u7528\u3002</li> <li>Scheduler \u8c03\u5ea6 Pod \u5230\u5bf9\u5e94\u8282\u70b9\u3002</li> <li>AD Controller \u8c03\u7528 VolumePlugin \u5c06 PV Attach \u5230\u8282\u70b9\u4e0a\u3002</li> <li>Volume Manager \u5c06 PV mount \u5230 Pod \u5728\u8282\u70b9\u4e0a\u5bf9\u5e94\u7684\u4e00\u4e2a\u5b50\u76ee\u5f55\u4e0b\u3002</li> <li>\u5c06\u8be5\u76ee\u5f55 mount \u5230 Pod \u6307\u5b9a\u5bb9\u5668\u7684\u6302\u8f7d\u70b9\u4e0b\u3002</li> </ul> <p>Volume Plugin \u5206\u4e3a in-tree \u548c out-tree \u4e24\u79cd\uff1a</p> <ul> <li> <p>In-Tree \u8868\u793a\u6e90\u7801\u662f\u653e\u5728 Kubernetes \u5185\u90e8\u7684\uff0c\u548c Kubernetes \u4e00\u8d77\u53d1\u5e03\u3001\u7ba1\u7406\u4e0e\u8fed\u4ee3\uff0c\u7f3a\u70b9\u53ca\u65f6\u8fed\u4ee3\u901f\u5ea6\u6162\u3001\u7075\u6d3b\u6027\u5dee\uff1b</p> </li> <li> <p>Out-of-Tree \u7c7b\u7684 Volume Plugins \u7684\u4ee3\u7801\u72ec\u7acb\u4e8e Kubernetes\uff0c\u5b83\u662f\u7531\u5b58\u50a8\u5546\u63d0\u4f9b\u5b9e\u73b0\u7684\uff0c\u76ee\u524d\u4e3b\u8981\u6709 Flexvolume \u548c CSI \u4e24\u79cd\u5b9e\u73b0\u673a\u5236\uff0c\u53ef\u4ee5\u6839\u636e\u5b58\u50a8\u7c7b\u578b\u5b9e\u73b0\u4e0d\u540c\u7684\u5b58\u50a8\u63d2\u4ef6\u3002</p> </li> </ul> <p></p>"},{"location":"blog/2025/06/23/k8s-storage/#csi","title":"CSI","text":"<p>CSI \u662f\u4e3a\u7b2c\u4e09\u65b9\u5b58\u50a8\u63d0\u4f9b\u6570\u636e\u5377\u5b9e\u73b0\u7684\u62bd\u8c61\u63a5\u53e3\u3002</p> <p></p>"},{"location":"blog/2025/06/23/k8s-storage/#csi_1","title":"CSI \u5bf9\u8c61","text":"<ul> <li> <p>CSINode\uff1a\u8868\u793a\u8282\u70b9\u4e0a\u7684 CSI \u63d2\u4ef6\u4fe1\u606f\uff0c\u5305\u62ec\u63d2\u4ef6\u540d\u79f0\uff0cnode id\uff0ctopologyKeys\uff08\u8868\u8fbe\u5377\u4e0e\u8282\u70b9\u4e4b\u95f4\u7684\u62d3\u6251\u4eb2\u548c\u6027\uff09\uff0cCSI \u4e0d\u9700\u8981\u4e3b\u52a8\u521b\u5efa CSINode \u5bf9\u8c61\uff0c\u5f53 CSI \u901a\u8fc7 kubelet \u6ce8\u518c\u65f6\uff0ckubelet \u4f1a\u81ea\u52a8\u521b\u5efa CSINode \u5bf9\u8c61\u3002node-driver-registrar \u5b9e\u73b0\u4e86\u6ce8\u518c CSI \u63d2\u4ef6\u8fd9\u4e00\u529f\u80fd\u3002     <pre><code>  apiVersion: storage.k8s.io/v1\nkind: CSINode\nmetadata:\n  name: node1\nspec:\n  drivers:\n  - name: mycsidriver.example.com\n    nodeID: storageNodeID1\n    topologyKeys: ['mycsidriver.example.com/regions', \"mycsidriver.example.com/zones\"]\n</code></pre></p> </li> <li> <p>CSIDriver\uff1a\u8868\u793a CSI \u63d2\u4ef6\u7684\u6ce8\u518c\u4fe1\u606f\uff0c\u7528\u6765\u81ea\u5b9a\u4e49 Kubernets \u7684\u884c\u4e3a\uff0c\u4f8b\u5982 <code>attachRequired: false</code> \u8868\u793a\u901a\u8fc7\u8be5 CSI \u521b\u5efa\u7684 PV \u53ef\u4ee5\u8df3\u8fc7 Attach/Detach \u64cd\u4f5c\u3002\u5b89\u88c5\u4e00\u4e2a CSI \u63d2\u4ef6\u65f6\uff0c\u5fc5\u987b\u8981\u521b\u5efa CSIDriver \u5bf9\u8c61\u3002     <pre><code>apiVersion: storage.k8s.io/v1\nkind: CSIDriver\nmetadata:\n  name: mycsidriver.example.com\nspec:\n  attachRequired: true\n  podInfoOnMount: true\n  fsGroupPolicy: File # added in Kubernetes 1.19, this field is GA as of Kubernetes 1.23\n  volumeLifecycleModes: # added in Kubernetes 1.16, this field is beta\n    - Persistent\n    - Ephemeral\n  tokenRequests: # added in Kubernetes 1.20. See status at https://kubernetes-csi.github.io/docs/token-requests.html#status\n    - audience: \"gcp\"\n    - audience: \"\" # empty string means defaulting to the `--api-audiences` of kube-apiserver\n      expirationSeconds: 3600\n  requiresRepublish: true # added in Kubernetes 1.20. See status at https://kubernetes-csi.github.io/docs/token-requests.html#status\n  seLinuxMount: true # Added in Kubernetest 1.25.\n</code></pre></p> </li> </ul>"},{"location":"blog/2025/06/23/k8s-storage/#csi_2","title":"CSI \u63d2\u4ef6\u7ec4\u4ef6","text":"<ul> <li> <p>Node Plugin\uff1a\u4e3b\u8981\u5305\u542b Kubelet \u7ec4\u4ef6\uff0c\u5305\u62ec VolumeManager \u548c VolumePlugin\uff0c\u5b83\u4eec\u4f1a\u53bb\u8c03\u7528 CSI Plugin \u53bb\u505a mount \u548c unmount \u64cd\u4f5c\uff1b\u53e6\u5916\u4e00\u4e2a\u7ec4\u4ef6 Driver Registrar \u4e3b\u8981\u5b9e\u73b0\u7684\u662f CSI Plugin \u6ce8\u518c\u7684\u529f\u80fd\u3002</p> </li> <li> <p>Controller Plugin\uff1a\u4e0e\u5916\u90e8\u7ec4\u4ef6\u5408\u4f5c\uff0c\u5904\u7406 PV \u7684\u521b\u5efa\u3001\u5220\u9664\u3001\u7ed1\u5b9a\u3001\u89e3\u7ed1\u7b49\u64cd\u4f5c\u3002</p> </li> </ul> <p>\u6b64\u5916\uff0c\u8fd8\u5305\u542b\u591a\u4e2a External Plugin \u7ec4\u4ef6\uff0c\u76f8\u5f53\u4e8e\u5b98\u65b9\u5b9e\u73b0\u4e86\u4e00\u4e9b\u901a\u7528\u7684\u529f\u80fd\uff0c\u4e0d\u7528 CSI \u5f00\u53d1\u8005\u91cd\u590d\u5f00\u53d1\uff0c\u76f4\u63a5\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u5373\u53ef\uff0cCSI \u5f00\u53d1\u8005\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5b58\u50a8\u672c\u8eab\u7684\u5b9e\u73b0\u3002\uff0c\u6bcf\u4e2a\u7ec4\u4ef6\u548c CSI Plugin \u7ec4\u5408\u7684\u65f6\u5019\u4f1a\u5b8c\u6210\u67d0\u79cd\u529f\u80fd\u3002</p> <ul> <li>External Provisioner</li> <li>External Attacher</li> <li>External Resizer</li> <li>External Snapshoter</li> <li>Node-Driver-Registrar</li> </ul> External Provisioner + Controller Server \u521b\u5efa\u3001\u5220\u9664 PV External Attacher + Node Server \u7ed1\u5b9a\u3001\u89e3\u7ed1 PV External Resizer + Controller Server \u8c03\u6574 PV \u5927\u5c0f External Snapshoter + Controller Server \u521b\u5efa\u3001\u5220\u9664 Snapshot Node-Driver-Registrar + Node Server \u6ce8\u518c CSI \u63d2\u4ef6 <p>\u4e00\u4e2a\u5916\u90e8 CSI \u63d2\u4ef6\u9700\u8981\u5b9e\u73b0\u4e00\u4e0b\u4e09\u7ec4 RPC\uff1a</p> <ul> <li>Identity Service</li> <li>Controller Service</li> <li>Node Service</li> </ul> <p>\u5404\u4e2a RPC \u88ab\u8c03\u7528\u7684\u65f6\u673a\u53ca\u5e94\u8be5\u5b9e\u73b0\u7684\u529f\u80fd\u89c1 CSI Spec</p> <p>\u4e00\u4e2a\u5178\u578b\u7684 Volume \u751f\u547d\u5468\u671f\u5185 CSI \u7684 RPC \u8c03\u7528\uff1a <pre><code>   CreateVolume +------------+ DeleteVolume\n +-------------&gt;|  CREATED   +--------------+\n |              +---+----^---+              |\n |       Controller |    | Controller       v\n+++         Publish |    | Unpublish       +++\n|X|          Volume |    | Volume          | |\n+-+             +---v----+---+             +-+\n                | NODE_READY |\n                +---+----^---+\n               Node |    | Node\n              Stage |    | Unstage\n             Volume |    | Volume\n                +---v----+---+\n                |  VOL_READY |\n                +---+----^---+\n               Node |    | Node\n            Publish |    | Unpublish\n             Volume |    | Volume\n                +---v----+---+\n                | PUBLISHED  |\n                +------------+\n\nFigure 6: The lifecycle of a dynamically provisioned volume, from\ncreation to destruction, when the Node Plugin advertises the\nSTAGE_UNSTAGE_VOLUME capability.\n</code></pre></p>"},{"location":"blog/2025/06/23/k8s-storage/#csi_3","title":"CSI \u6ce8\u518c\u8fc7\u7a0b","text":""},{"location":"blog/2025/06/23/k8s-storage/#_5","title":"\u53c2\u8003","text":"<ul> <li>K8S\u5b98\u65b9\u6587\u6863\uff1a\u5b58\u50a8\u6982\u5ff5</li> <li>\u4ece\u96f6\u5f00\u59cb\u5165\u95e8 K8s\uff1aKubernetes \u5b58\u50a8\u67b6\u6784\u53ca\u63d2\u4ef6\u4f7f\u7528</li> <li>https://jimmysong.io/book/kubernetes-handbook/storage/</li> <li>CSI Spec</li> <li>CSI\u67b6\u6784\u548c\u539f\u7406</li> <li>\u4e91\u8ba1\u7b97K8s\u7ec4\u4ef6\u7cfb\u5217\u2014- \u5b58\u50a8CSI</li> </ul>"},{"location":"blog/2025/07/22/minio-architecture/","title":"MinIO \u7b14\u8bb0\uff081\uff09: \u57fa\u672c\u67b6\u6784","text":""},{"location":"blog/2025/07/22/minio-architecture/#_1","title":"\u57fa\u672c\u4ecb\u7ecd","text":"<p>MinIO \u662f\u4e00\u4e2a S3 \u517c\u5bb9\u7684\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u57fa\u672c\u67b6\u6784\u5982\u4e0b\uff1a</p> <p></p> <p>\u5ba2\u6237\u7aef\u901a\u8fc7\u6807\u51c6\u7684 S3 \u534f\u8bae\u4e0e MinIO \u8fdb\u884c\u4ea4\u4e92\uff0cMinIO \u670d\u52a1\u7aef\u4e3b\u8981\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u4e2a\u6a21\u5757\uff1a</p> <ul> <li>S3 \u534f\u8bae\u5c42\uff1a\u63d0\u4f9b S3 \u517c\u5bb9\u7684 RESTful API \u63a5\u53e3\uff0c\u4e0e\u5ba2\u6237\u7aef\u8fdb\u884c\u4ea4\u4e92\u3002</li> <li>Object Layer\uff1a\u63d0\u4f9b\u5bf9\u8c61\u5b58\u50a8\u7684\u6838\u5fc3\u529f\u80fd\uff0c\u5305\u62ec\u5bf9\u8c61\u7684\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u5220\u9664\u3001\u5143\u6570\u636e\u7ba1\u7406\uff0cEC \u7f16\u7801\u7b49\u3002 Object Layer \u5185\u90e8\u5206\u4e3a\u4ee5\u4e0b\u5c42\u6b21\uff1aPool -&gt; Set -&gt; Obeject\u3002</li> <li>Storage Layer\uff1a\u63d0\u4f9b\u5bf9\u78c1\u76d8\u6587\u4ef6\u7684\u64cd\u4f5c\u63a5\u53e3\u3002</li> <li>\u8282\u70b9\u901a\u4fe1\uff1a\u63d0\u4f9b\u8282\u70b9\u4e4b\u95f4\u7684\u901a\u4fe1\uff0c\u5305\u62ec Grid\u3001REST \u4e24\u79cd\u65b9\u5f0f\u3002</li> <li>\u5176\u4ed6\u7ec4\u4ef6\uff1a\u5305\u62ec\u5982\u6570\u636e\u626b\u63cf\u3001\u6570\u636e\u6062\u590d\u3001\u65e5\u5fd7\u3001\u76d1\u63a7\u7b49\u529f\u80fd\u6a21\u5757\u3002</li> </ul> <p>MinIO \u901a\u8fc7 Erasure Code \u7f16\u7801\u5b9e\u73b0\u6570\u636e\u5197\u4f59\uff0c\u9ed8\u8ba4\u91c7\u7528 Reed-Solomon \u7f16\u7801\uff0c\u6bcf\u4e2a\u5bf9\u8c61\u5728\u4e0a\u4f20\u65f6\u4f1a\u88ab\u5207\u5206\u6210\u591a\u4e2a\u6570\u636e\u5206\u7247\u548c\u6821\u9a8c\u5206\u7247\uff0c\u5b58\u50a8\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u5197\u4f59\u5b58\u50a8\u548c\u6062\u590d\u3002\u5404\u8282\u70b9\u5b8c\u5168\u5bf9\u79f0\uff0c\u4e0d\u5b58\u5728\u4e3b\u4ece\u5173\u7cfb\u3002</p> <p>\u5728\u5b58\u50a8\u5c42\uff0c\u5176\u62d3\u6251\u5206\u4e3a\u5b58\u50a8\u6c60\uff08Pool\uff09\u3001\u64e6\u9664\u96c6\uff08Set\uff09\u3001\u5bf9\u8c61\uff08Object\uff09\u4e09\u5c42\uff0c\u4e00\u4e2a MinIO \u90e8\u7f72\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5b58\u50a8\u6c60\u4e14\u53ef\u4ee5\u8fdb\u884c\u6269\u5c55\u4ee5\u589e\u52a0\u5b58\u50a8\u5bb9\u91cf\u3002\u6bcf\u4e2a\u5b58\u50a8\u6c60\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u64e6\u9664\u96c6\uff0c\u4e00\u4e2a\u5b58\u50a8\u6c60\u7684\u64e6\u9664\u96c6\u5728\u521b\u5efa\u5b8c\u6210\u4e4b\u540e\u4e0d\u80fd\u518d\u66f4\u6539\uff08\u4e0e Object \u5bfb\u5740\u76f8\u5173\uff0c\u6839\u636e\u54c8\u5e0c\u503c\u786e\u5b9a Object \u6240\u5728\u7684\u64e6\u9664\u96c6\uff09\u3002\u6bcf\u4e2a\u64e6\u9664\u96c6\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5bf9\u8c61\uff0c\u7531\u5bf9\u8c61\u63d0\u4f9b EC \u7f16\u7801\u4fe1\u606f\uff0c\u786e\u5b9a\u6570\u636e\u5206\u7247\u548c\u6821\u9a8c\u5206\u7247\u7684\u5206\u5e03\u3002</p>"},{"location":"blog/2025/07/22/minio-architecture/#_2","title":"\u90e8\u7f72","text":"<p>MinIO \u652f\u6301\u4e0d\u540c\u7684\u90e8\u7f72\u65b9\u5f0f\uff1a - \u5355\u8282\u70b9\u5355\u78c1\u76d8\uff08SNSD\uff09\uff1a\u672c\u5730\u5f00\u53d1\u3001\u6d4b\u8bd5\u7528\uff0c\u6ca1\u6709\u6570\u636e\u5197\u4f59\u3002 - \u5355\u8282\u70b9\u591a\u78c1\u76d8\uff08SNMD\uff09\uff1a\u80fd\u5bb9\u5fcd\u78c1\u76d8\u7ea7\u7684\u6545\u969c\u3002 - \u591a\u8282\u70b9\u591a\u78c1\u76d8\uff08MNMD\uff09\uff1a\u63d0\u4f9b\u6570\u636e\u5197\u4f59\u548c\u9ad8\u53ef\u7528\u6027\u3002</p> <p>\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5efa\u8bae\u4f7f\u7528\u591a\u8282\u70b9\u591a\u78c1\u76d8\u7684\u90e8\u7f72\u65b9\u5f0f\uff0c\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u548c\u6027\u80fd\u3002\u90e8\u7f72\u65f6\uff0c\u5bf9\u4e8e\u5b58\u50a8\u6709\u4ee5\u4e0b\u51e0\u4e2a\u6ce8\u610f\u4e8b\u9879\uff1a</p> <ul> <li>\u4f7f\u7528\u672c\u5730\u5b58\u50a8\uff1a\u4e0d\u8981\u4f7f\u7528 NAS\uff0cNFS \u7b49\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u3002</li> <li>\u4f7f\u7528 XFS \u6587\u4ef6\u7cfb\u7edf\u3002</li> <li>\u4f7f\u7528\u76f8\u540c\u7684\u78c1\u76d8\u7c7b\u578b\u53ca\u5bb9\u91cf\uff0c\u5982\u679c\u5bb9\u91cf\u4e0d\u4e00\u81f4\uff0c\u6574\u4e2a MinIO \u90e8\u7f72\u5c06\u91c7\u7528\u8f83\u5c0f\u7684\u5bb9\u91cf\u6765\u8ba1\u7b97\u6574\u4e2a\u90e8\u7f72\u7684\u603b\u5bb9\u91cf\u3002</li> <li>\u78c1\u76d8\u6302\u8f7d\u7684\u6301\u4e45\u5316\uff0c\u901a\u8fc7 <code>/etc/fstab</code> \u6765\u4fdd\u8bc1\u91cd\u542f\u540e\u78c1\u76d8\u80fd\u591f\u81ea\u52a8\u6302\u8f7d\u4e14\u4fdd\u6301\u4e00\u81f4\u3002</li> </ul>"},{"location":"blog/2025/07/22/minio-architecture/#_3","title":"\u53ef\u7528\u6027","text":"<p>MinIO \u7684\u6570\u636e\u53ef\u7528\u6027\u4e3b\u8981\u7531 Erasure Code \u7f16\u7801\u673a\u5236\u4fdd\u8bc1\uff0c\u5728 EC:M \u7684\u914d\u7f6e\u4e0b\uff0c\u6700\u591a\u80fd\u5bb9\u5fcd M \u4e2a\u8282\u70b9\u5931\u6548\uff0c\u800c\u4e0d\u5f71\u54cd\u6570\u636e\u7684\u53ef\u7528\u6027\u3002 $$ N (ERASURE SET SIZE) = K (DATA) + M (PARITY) $$</p> <p></p> <p>EC:4</p> <p>\u5982\u4e0a\u90e8\u7f72\uff0c\u6700\u591a\u53ef\u5bb9\u5fcd 4 \u5757\u78c1\u76d8\u5931\u6548\uff0c\u800c\u4e0d\u5f71\u54cd\u6570\u636e\u7684\u8bfb\u5199\u3002\u6b64\u5916\uff0c\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u60c5\u51b5\uff0c\u5982\u679c <code>M = N/2</code>\uff0c\u90a3\u4e48\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9700\u8981 K+1 \u4e2a\u78c1\u76d8\u5728\u7ebf\uff0c\u624d\u80fd\u5904\u7406\u5199\u8bf7\u6c42\u3002</p>"},{"location":"blog/2025/07/22/minio-architecture/#_4","title":"\u4f7f\u7528","text":"<p>MinIO \u662f\u517c\u5bb9\u6807\u51c6 S3 \u534f\u8bae\u7684\u5bf9\u8c61\u5b58\u50a8\u670d\u52a1\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u7684 S3 \u5ba2\u6237\u7aef\u8fdb\u884c\u4ea4\u4e92\u3002</p> <p>| \u5173\u4e8e MinIO \u7684 S3 \u517c\u5bb9\u6027\u53ef\u4ee5\u5728MinIO S3 \u517c\u5bb9\u6027\u4e2d\u67e5\u770b\u3002</p> <ul> <li>AWS SDK</li> <li>MinIO SDK</li> <li>MinIO Client (mc): MinIO \u63d0\u4f9b\u7684\u4e00\u4e2a CLI \u5de5\u5177\uff0c\u53ef\u4ee5\u7528\u7c7b\u4f3c UNIX \u6587\u4ef6\u7cfb\u7edf\u547d\u4ee4\u7684\u65b9\u5f0f\u4e0e MinIO \u4e2d\u7684\u5bf9\u8c61\u8fdb\u884c\u4ea4\u4e92\u3002</li> <li>MinIO Console: MinIO \u63d0\u4f9b\u7684\u4e00\u4e2a Web \u754c\u9762\uff0c\u7528\u4e8e\u7ba1\u7406\u548c\u76d1\u63a7 MinIO \u96c6\u7fa4\u3002</li> </ul>"},{"location":"blog/2025/07/25/minio-grid/","title":"MinIO \u7b14\u8bb0\uff084\uff09: \u901a\u4fe1\u6846\u67b6-Grid","text":""},{"location":"blog/2025/07/25/minio-grid/#_1","title":"\u7b80\u4ecb","text":"<p>\u300cGrid\u300d \u662f MinIO \u4e2d\u7684\u4e00\u4e2a\u5185\u90e8\u901a\u4fe1\u6846\u67b6\uff0c\u7528\u4e8e\u5728\u5206\u5e03\u5f0f\u90e8\u7f72\u73af\u5883\u4e2d\u5b9e\u73b0\u8282\u70b9\u95f4\u7684\u9ad8\u6548\u901a\u4fe1\u3002\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e WebSocket \u7684\u53cc\u5411\u901a\u4fe1\u7cfb\u7edf\uff0c\u652f\u6301\u5355\u6b21\u8bf7\u6c42-\u54cd\u5e94\u6a21\u5f0f\u548c\u6d41\u5f0f\u901a\u4fe1\u6a21\u5f0f\uff0c\u4f7f\u5f97 MinIO \u96c6\u7fa4\u4e2d\u7684\u4e0d\u540c\u8282\u70b9\u80fd\u591f\u53ef\u9760\u5730\u4ea4\u6362\u6570\u636e\u548c\u6267\u884c\u8fdc\u7a0b\u64cd\u4f5c\u3002</p> <p>Grid \u901a\u4fe1\u6846\u67b6\u9002\u7528\u4e8e\uff1a</p> <ul> <li>\u9ad8\u9891\u6b21\u3001\u5c0f\u6570\u636e\u3001\u4f4e\u5ef6\u8fdf\u7684\u8bf7\u6c42\u3002</li> <li>\u957f\u5468\u671f\u8fd0\u884c\u7684\u4e2d\u5c0f\u578b\u6570\u636e\u4ea4\u6362\u3002</li> </ul> <p>\u4e0d\u9002\u7528\u4e8e\uff1a</p> <ul> <li>\u5927\u6570\u636e\u91cf\u7684\u4f20\u8f93\u3002</li> </ul> <p>Grid \u4e2d\u7684\u4e24\u4e2a\u8282\u70b9\u53ea\u4f1a\u521b\u5efa\u4e00\u4e2a\u8fde\u63a5\uff0c\u8fd9\u610f\u5473\u7740\u5355\u8fde\u63a5\u65e0\u6cd5\u4f7f\u5e26\u5bbd\u8fbe\u5230\u9971\u548c\u3002\u56e0\u6b64\uff0c\u4f7f\u7528 Grid \u6846\u67b6\u4f20\u8f93\u5927\u6570\u636e\u91cf\u7684\u8bf7\u6c42\u4f1a\u6bd4\u4f7f\u7528\u53e6\u4e00\u4e2a\u72ec\u7acb\u7684\u8fde\u63a5\u6162\uff0c\u4e14\u8be5\u8fde\u63a5\u4e0a\u7684\u5176\u4ed6\u8bf7\u6c42\u4f1a\u88ab\u8be5\u8bf7\u6c42\u963b\u585e\u3002</p>"},{"location":"blog/2025/07/25/minio-grid/#_2","title":"\u5b9e\u73b0","text":""},{"location":"blog/2025/07/25/minio-grid/#_3","title":"\u79c1\u6709\u534f\u8bae","text":"<p><pre><code>+--------+--------+----------+------------+---------+-------+---------+----------+--------+\n| mux id | seq id | deadline | handler id | op code | flags | payload | subroute | crc    |\n+--------+--------+----------+------------+---------+-------+---------+----------+--------+\n| uint64 | uint32 |  uint32  |    uint8   |  uint8  | uint8 |  bytes  | []byte   | uint32 |\n+--------+--------+----------+------------+---------+-------+---------+----------+--------+\n\\------------------------------msgpack-------------------------------/\\---append binary---/\n</code></pre> \u5176\u4e2d\uff1a</p> <ul> <li>mux id\uff1a\u5355\u8fde\u63a5\u591a\u8def\u590d\u7528\u6807\u8bc6\u7b26\u3002</li> <li>seq id\uff1a\u8bf7\u6c42\u5e8f\u5217\u53f7\uff0c\u8bf7\u6c42\u54cd\u5e94\u4fdd\u5e8f\u3002</li> <li>deadline\uff1a\u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\u3002</li> <li>handler id\uff1a\u8bf7\u6c42\u5904\u7406\u51fd\u6570\u6807\u8bc6\u7b26,\u7528\u4e8e\u5206\u53d1\u8bf7\u6c42\u3002</li> <li>op code\uff1a\u8bf7\u6c42\u64cd\u4f5c\u7801\u3002</li> <li>flags\uff1a\u8bf7\u6c42\u6807\u5fd7\u4f4d\u3002</li> <li>payload\uff1a\u8bf7\u6c42\u8d1f\u8f7d\u6570\u636e\u3002</li> <li>subroute\uff1a\u8bf7\u6c42\u5b50\u8def\u7531\u3002</li> <li>crc\uff1a\u8bf7\u6c42\u6821\u9a8c\u7801\u3002</li> </ul>"},{"location":"blog/2025/07/25/minio-grid/#_4","title":"\u8fde\u63a5\u7ba1\u7406","text":"<p>Grid \u4e2d\u8d1f\u8d23\u7ba1\u7406\u8fde\u63a5\u7684\u6a21\u5757\u662f <code>Manager</code>\uff0c<code>Manager</code> \u5b9a\u4e49\u5982\u4e0b:</p> <p><pre><code>// Manager will contain all the connections to the grid.\n// It also handles incoming requests and routes them to the appropriate connection.\ntype Manager struct {\n    // ID is an instance ID, that will change whenever the server restarts.\n    // This allows remotes to keep track of whether state is preserved.\n    ID uuid.UUID\n\n    // Immutable after creation, so no locks.\n    targets map[string]*Connection\n\n    // serverside handlers.\n    handlers handlers\n\n    // local host name.\n    local string\n\n    // authToken is a function that will validate a token.\n    authToken ValidateTokenFn\n\n    // routePath indicates the dial route path\n    routePath string\n}\n</code></pre> \u5176\u4e2d\uff1a</p> <ul> <li>ID\uff1a<code>Manager</code> \u7684\u5b9e\u4f8b ID\uff0c\u6bcf\u6b21\u670d\u52a1\u5668\u91cd\u542f\u65f6\u90fd\u4f1a\u6539\u53d8\u3002</li> <li>targets\uff1a\u5b58\u50a8\u6240\u6709\u8fde\u63a5\u5230 Grid \u7684\u8fde\u63a5,key \u4e3a\u8fde\u63a5\u7684\u76ee\u6807\u5730\u5740\uff0c\u5728 <code>Manager</code> \u521b\u5efa\u65f6\u4f20\u5165\uff0c\u4e0d\u53ef\u66f4\u6539\u3002</li> </ul> <p>Grid \u4e2d\u6bcf\u4e2a\u8282\u70b9\u90fd\u4f1a\u4e0e\u5176\u4ed6\u8282\u70b9\u5efa\u7acb WebSocket \u8fde\u63a5\uff0c\u6bcf\u4e2a\u8fde\u63a5\u7684\u53cc\u7aef\u533a\u5206\u4e3a client \u7aef\u548c server \u7aef\uff0c\u8fde\u63a5\u521d\u59cb\u5316\u65f6\uff0c\u7531 client \u7aef\u53d1\u8d77\u5efa\u8fde\uff0cserver \u7aef\u54cd\u5e94\u5efa\u8fde\u3002</p> <p>client \u548c server \u7aef\u4f9d\u636e\u4e24\u8282\u70b9\u7684 Host \u5730\u5740\u786e\u5b9a\u3002 <pre><code>func (c *Connection) shouldConnect() bool {\n    // The remote should have the opposite result.\n    h0 := xxh3.HashString(c.Local + c.Remote)\n    h1 := xxh3.HashString(c.Remote + c.Local)\n    if h0 == h1 {\n        return c.Local &lt; c.Remote\n    }\n    return h0 &lt; h1\n}\n</code></pre></p> <p>\u6bcf\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u5efa\u7acb\u7684\u8fde\u63a5\u5bf9\u5e94\u4e00\u4e2a <code>Connection</code> \u5b9e\u4f8b\uff0c<code>Connection</code> \u7528\u6765\u6536\u53d1\u8fde\u63a5\u4e0a\u7684\u6d88\u606f\uff0c\u7ba1\u7406\u8fde\u63a5\u4e0a\u7684\u591a\u8def\u590d\u7528.</p>"},{"location":"blog/2025/07/25/minio-grid/#_5","title":"\u8fde\u63a5\u5efa\u7acb","text":"<p>\u5f85\u5efa\u8fde\u7684\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u9996\u5148\u4f9d\u636e\u4e0a\u8ff0\u7684 hash \u7b97\u6cd5\u786e\u5b9a\u5efa\u8fde\u7684\u65b9\u5411\uff0c\u7531 client \u7aef\u53d1\u8d77\u5efa\u8fde\uff0cserver \u7aef\u54cd\u5e94\u5efa\u8fde\u3002 <pre><code>sequenceDiagram\n    participant Client\n    participant Server\n    Client-&gt;&gt;Server: \u5efa\u7acb WebSocket \u8fde\u63a5\n    Server--&gt;&gt;Client: \u54cd\u5e94\n    Client-&gt;&gt;Server: \u53d1\u9001 OpConnect \u8bf7\u6c42\n    Server--&gt;&gt;Client: \u54cd\u5e94 OpConnectResponse \n    Client-&gt;Client: handleMsg \u963b\u585e\uff0c\u5904\u7406\u6d88\u606f \n    Server-&gt;Server: handleMsg \u963b\u585e\uff0c\u5904\u7406\u6d88\u606f</code></pre></p>"},{"location":"blog/2025/07/25/minio-grid/#client","title":"Client\u4fa7","text":"<p>Client \u4fa7\u4f1a\u4e0d\u65ad\u5730\u5c1d\u8bd5\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\uff0c\u76f4\u81f3\u670d\u52a1\u5173\u95ed\u5373 <code>Connection</code> \u5b9e\u4f8b\u7684\u72b6\u6001\u88ab\u8bbe\u7f6e\u4e3a Shutdown\uff08\u6b63\u5e38\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u6709\u8fd9\u4e2a\u72b6\u6001\uff09\u3002</p> <p>Client \u4fa7\u9996\u5148\u4f1a\u5efa\u7acb WebSocket \u8fde\u63a5\uff0c\u5efa\u8fde handler \u5982\u4e0b\uff1a      <pre><code>// Pass Dialer for websocket grid, make sure we do not\n// provide any DriveOPTimeout() function, as that is not\n// useful over persistent connections.\nDialer: grid.ConnectWS(\n    grid.ContextDialer(xhttp.DialContextWithLookupHost(lookupHost, xhttp.NewInternodeDialContext(rest.DefaultTimeout, globalTCPOptions.ForWebsocket()))),\n    newCachedAuthToken(),\n    &amp;tls.Config{\n        RootCAs:          globalRootCAs,\n        CipherSuites:     fips.TLSCiphers(),\n        CurvePreferences: fips.TLSCurveIDs(),\n    }),\n</code></pre> WebSocket \u8fde\u63a5\u5efa\u7acb\u7684\u5177\u4f53\u8fc7\u7a0b\u4e3a\uff1a - \u4ece <code>globalDNSCache</code> \u6a21\u5757\u4e2d\u83b7\u53d6\u76ee\u6807\u5730\u5740\u7684 IP \u5730\u5740\u5217\u8868\u3002 - \u904d\u5386 IP \u5730\u5740\u5217\u8868\uff0c\u4f7f\u7528 net \u6807\u51c6\u5e93\u4f9d\u6b21\u5c1d\u8bd5\u5efa\u7acb tcp \u8fde\u63a5\uff0c\u76f4\u81f3\u6210\u529f\u8fde\u63a5\u3002 - TCP \u8fde\u63a5\u5efa\u8fde\u8fc7\u7a0b\u4e4b\u540e\uff0c\u6309\u7167 WebSocket \u534f\u8bae\u8fdb\u884c\u8fde\u63a5\u3001\u63e1\u624b\u3001\u534f\u8bae\u5347\u7ea7\u7b49\u64cd\u4f5c\uff0c\u5b8c\u6210 WebSocket \u8fde\u63a5\u7684\u5efa\u7acb\u3002</p> <p>\u4e0a\u8ff0\u8fc7\u7a0b\u4e2d\uff0c<code>globalDNSCache</code> \u6a21\u5757\u7528\u4e8e\u7f13\u5b58 DNS \u89e3\u6790\u7ed3\u679c\uff0c\u907f\u514d\u6bcf\u6b21\u90fd\u8fdb\u884c DNS \u89e3\u6790\u3002</p> <p>WebSocket \u8fde\u63a5\u5efa\u7acb\u5b8c\u6210\u4e4b\u540e\uff0cClient \u4fa7\u4f1a\u901a\u8fc7\u8be5\u8fde\u63a5\u53d1\u9001\u4e00\u4e2a <code>OpConnect</code> \u8bf7\u6c42\uff0c\u8bf7\u6c42\u4e2d\u5305\u542b\u4e86 Client \u7684 ID\u3001\u672c\u5730\u5730\u5740\u3001\u8fdc\u7a0b\u5730\u5740\u7b49\u4fe1\u606f\u3002Server \u7aef\u63a5\u6536\u5230\u8be5\u8bf7\u6c42\u540e\uff0c\u4f1a\u54cd\u5e94\u4e00\u4e2a <code>OpConnectResponse</code> \u54cd\u5e94\uff0c\u5305\u542b\u4e86 Server \u7684 UUID\uff0c\u4ee5\u53ca\u662f\u5426\u63a5\u53d7\u8be5\u8fde\u63a5\u3001\u62d2\u7edd\u8fde\u63a5\u7684\u539f\u56e0\u7b49\u4fe1\u606f\u3002</p> <p>\u8fde\u63a5\u5efa\u7acb\u540e\uff0cClient \u4fa7\u4f1a\u542f\u52a8\u4e24\u4e2a\u534f\u7a0b\uff0c\u5206\u522b\u7528\u4e8e\u63a5\u6536\u548c\u53d1\u9001\u6d88\u606f\u3002\u5e76\u4e00\u76f4\u963b\u585e\u76f4\u81f3\u8fde\u63a5\u4e0a\u6709\u9519\u8bef\u53d1\u751f\u6216\u8005\u8fde\u63a5\u88ab\u5173\u95ed\u3002\u5982\u679c\u8fde\u63a5\u4e0a\u6709\u9519\u8bef\u53d1\u751f\uff0cClient \u4fa7\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u3002</p>"},{"location":"blog/2025/07/25/minio-grid/#server","title":"Server\u4fa7","text":"<p>Server \u4fa7\u5219\u5f00\u653e\u4e00\u4e2a HTTP API \u7aef\u70b9\uff0c\u7528\u4e8e\u63a5\u6536 Client \u7aef\u7684\u8fde\u63a5\u8bf7\u6c42\u3002 \u5728\u5bf9\u5e94\u7684 Handler \u5185\u5904\u7406\u534f\u8bae\u5347\u7ea7\u7b49 WebSocket \u5efa\u8fde\u64cd\u4f5c\u3002\u540c\u6837\u7684\uff0cWebSocket \u8fde\u63a5\u5efa\u7acb\u4e4b\u540e\uff0cServer \u4fa7\u7b49\u5f85 Client \u7aef\u53d1\u9001 <code>OpConnect</code> \u8bf7\u6c42\uff0c\u63a5\u6536\u5230\u8be5\u8bf7\u6c42\u540e\uff0c\u4f1a\u54cd\u5e94\u4e00\u4e2a <code>OpConnectResponse</code> \u54cd\u5e94\uff0c\u5305\u542b\u4e86Server\u7684UUID\uff0c\u4ee5\u53ca\u662f\u5426\u63a5\u53d7\u8be5\u8fde\u63a5\u3001\u62d2\u7edd\u8fde\u63a5\u7684\u539f\u56e0\u7b49\u4fe1\u606f\u3002 \u8fde\u63a5\u5efa\u7acb\u540e\uff0cServer \u4fa7\u4f1a\u542f\u52a8\u4e24\u4e2a\u534f\u7a0b\uff0c\u5206\u522b\u7528\u4e8e\u63a5\u6536\u548c\u53d1\u9001\u6d88\u606f\u3002\u5e76\u4e00\u76f4\u963b\u585e\u76f4\u81f3\u8fde\u63a5\u4e0a\u6709\u9519\u8bef\u53d1\u751f\u6216\u8005\u8fde\u63a5\u88ab\u5173\u95ed\u3002Server \u4fa7\u4e0d\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\uff0c\u91cd\u8fde\u7684\u64cd\u4f5c\u7531 Client \u7aef\u53d1\u8d77\u3002  </p>"},{"location":"blog/2025/07/25/minio-grid/#_6","title":"\u6d88\u606f\u6536\u53d1","text":"<p>Server \u4fa7\u901a\u8fc7\u63a5\u6536 Client \u7aef\u7684\u8fde\u63a5\u8bf7\u6c42\uff0c\u521b\u5efa <code>Connection</code> \u5b9e\u4f8b;Client \u7aef\u4e3b\u52a8\u53d1\u8d77\u8fde\u63a5\u8bf7\u6c42\uff0c\u521b\u5efa <code>Connection</code> \u5b9e\u4f8b\u3002<code>Connection</code> \u5efa\u7acb\u5b8c\u6210\u540e\uff0c\u4f1a\u542f\u52a8\u4e24\u4e2a\u534f\u7a0b\uff0c\u5206\u522b\u7528\u4e8e\u63a5\u6536\u548c\u53d1\u9001\u6d88\u606f\u3002</p> <ul> <li><code>readStream</code>\uff1a\u8d1f\u8d23\u4ece websocket \u8fde\u63a5\u4e2d\u8bfb\u53d6\u6d88\u606f\uff0c\u7136\u540e\u5c06\u6d88\u606f\u89e3\u7801\u4e3a <code>message</code> \u79c1\u6709\u534f\u8bae\u683c\u5f0f\uff0c\u800c\u540e\u6839\u636e <code>OpCode</code> \u8fdb\u884c\u8def\u7531\uff0c\u533a\u5206\u51fa\u4e0d\u540c\u7684\u64cd\u4f5c\u7c7b\u578b\u3002</li> <li><code>writeStream</code>\uff1a\u8d1f\u8d23\u5c06 buf \u5408\u5e76\u5199\u5165 websocket \u8fde\u63a5\u4e2d\uff0c\u5e76\u53d1\u9001\u63a2\u6d3b\u6d88\u606f\u3002</li> </ul>"},{"location":"blog/2025/07/25/minio-grid/#_7","title":"\u591a\u8def\u590d\u7528","text":"<p>\u4e00\u4e2a <code>Connection</code> \u5b9e\u4f8b\u4e0a\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u591a\u4e2a <code>Mux</code> \u5b9e\u4f8b\uff0c\u6bcf\u4e2a <code>Mux</code> \u5b9e\u4f8b\u5bf9\u5e94\u4e00\u4e2a\u8fde\u63a5\u4e0a\u7684\u4e00\u4e2a\u591a\u8def\u590d\u7528\u901a\u9053\uff0c\u6bcf\u4e2a <code>Mux</code> \u5b9e\u4f8b\u8d1f\u8d23\u63a5\u6536\u548c\u53d1\u9001\u6d88\u606f\u3002\u540c\u6837\u7684\uff0c\u4e00\u5bf9 <code>Mux</code> \u5b9e\u4f8b\u88ab\u533a\u5206\u4e3a CS \u4e24\u7aef\uff0c\u8bf7\u6c42\u53d1\u8d77\u65b9\u4f1a\u521b\u5efa\u4e00\u4e2a <code>muxClient</code> \u5b9e\u4f8b\uff0c\u63a5\u53d7\u65b9\u4f1a\u521b\u5efa\u4e00\u4e2a <code>muxServer</code> \u5b9e\u4f8b\u3002\u4fdd\u5b58\u5728 <code>Connection</code> \u5b9e\u4f8b\u4e2d\u7684\u5168\u5c40 Map \u4e2d\uff0ckey \u4e3a\u5bf9\u5e94\u7684 mux id\u3002</p> <p><code>Mux</code> \u7684\u6d88\u606f\u6536\u53d1\u5171\u7528 <code>Connection</code> \u7684\u8fde\u63a5\uff0c\u901a\u8fc7 <code>MuxId</code> \u8fdb\u884c\u533a\u5206\u4e0d\u540c\u7684 <code>Mux</code> \u5b9e\u4f8b\u3002</p> <p>\u5bf9\u4e8e\u5355\u6b21\u8bf7\u6c42\u7684\u573a\u666f\uff0c<code>muxClient</code> \u63d0\u4f9b <code>roundtrip</code> \u65b9\u6cd5\uff0c\u8d1f\u8d23\u7ec4\u88c5 <code>Msg</code> \u5e76\u901a\u8fc7 <code>Connection</code> \u8fdb\u884c\u53d1\u9001\uff0c\u6d88\u606f\u7c7b\u578b\u4e3a <code>OpRequest</code>\uff0c\u800c\u540e\u963b\u585e\u7b49\u5f85\u54cd\u5e94\u3002</p> <p>\u5bf9\u4e8e\u6d41\u5f0f\u8bf7\u6c42\u7684\u573a\u666f\uff0c<code>muxClient</code> \u63d0\u4f9b <code>RequestStream</code> \u65b9\u6cd5\uff0cClient \u548c Server \u7aef\u8fdb\u884c\u53cc\u5411\u7684\u6d41\u5f0f\u8bf7\u6c42\u3002</p>"},{"location":"blog/2025/07/25/minio-grid/#_8","title":"\u8bf7\u6c42\u5904\u7406","text":"<p><code>Connection</code>\u63a5\u53d7\u5230\u8bf7\u6c42\u4e4b\u540e\uff0c\u9996\u5148\u4f9d\u636e<code>OpCode</code>\u8fdb\u884c\u8def\u7531\uff0c\u533a\u5206\u51fa\u4e0d\u540c\u7684\u64cd\u4f5c\u7c7b\u578b\uff0c<code>OpCode</code>\u53ca\u5176\u542b\u4e49\u5982\u4e0b\uff1a <pre><code>const (\n    // OpConnect is a connect request.\n    OpConnect Op = iota + 1\n    // OpConnectResponse is a response to a connect request.\n    OpConnectResponse\n    // OpPing is a ping request.\n    // If a mux id is specified that mux is pinged.\n    // Clients send ping requests.\n    OpPing\n    // OpPong is a OpPing response returned by the server.\n    OpPong\n    // OpConnectMux will connect a new mux with optional payload.\n    OpConnectMux\n    // OpMuxConnectError is an  error while connecting a mux.\n    OpMuxConnectError\n    // OpDisconnectClientMux instructs a client to disconnect a mux\n    OpDisconnectClientMux\n    // OpDisconnectServerMux instructs a server to disconnect (cancel) a server mux\n    OpDisconnectServerMux\n    // OpMuxClientMsg contains a message to a client Mux\n    OpMuxClientMsg\n    // OpMuxServerMsg contains a message to a server Mux\n    OpMuxServerMsg\n    // OpUnblockSrvMux contains a message that a server mux is unblocked with one.\n    // Only Stateful streams has flow control.\n    OpUnblockSrvMux\n    // OpUnblockClMux contains a message that a client mux is unblocked with one.\n    // Only Stateful streams has flow control.\n    OpUnblockClMux\n    // OpAckMux acknowledges a mux was created.\n    OpAckMux\n    // OpRequest is a single request + response.\n    // MuxID is returned in response.\n    OpRequest\n    // OpResponse is a response to a single request.\n    // FlagPayloadIsErr is used to signify that the payload is a string error converted to byte slice.\n    // When a response is received, the mux is already removed from the remote.\n    OpResponse\n    // OpDisconnect instructs that remote wants to disconnect\n    OpDisconnect\n    // OpMerged is several operations merged into one.\n    OpMerged\n)\n</code></pre> \u7b80\u5355\u5c06\u8bf7\u6c42\u5206\u4e3a\u63a7\u5236\u8bf7\u6c42\u3001\u63a2\u6d3b\u8bf7\u6c42\u548c RPC \u8bf7\u6c42\u3002</p> <ul> <li>\u63a7\u5236\u8bf7\u6c42\uff1a\u5305\u542b\u5efa\u8fde\u3001\u6d41\u63a7\u3001Batch \u7b49\u8bf7\u6c42\u3002</li> <li>\u63a2\u6d3b\u8bf7\u6c42\uff1a\u5305\u542b Ping\u3001Pong \u8bf7\u6c42\u3002</li> <li>RPC\u8bf7\u6c42\uff1a\u5b9e\u73b0\u4e00\u6b21\u8fdc\u7a0b\u8c03\u7528\uff0c\u6839\u636e msg \u4e2d\u7684 HandlerID \u548c SubRouter \u8def\u7531\u5230\u5bf9\u5e94\u7684\u63d0\u524d\u6ce8\u518c\u7684 Handler \u4e0a\u8fdb\u884c\u5904\u7406\u3002\u6709\u5355\u6b21\u8bf7\u6c42\u548c\u6d41\u5f0f\u8bf7\u6c42\u4e24\u79cd\u7c7b\u578b\u3002</li> </ul>"},{"location":"blog/2025/07/25/minio-grid/#handler","title":"Handler","text":"<p>\u901a\u8fc7 Grid \u6846\u67b6\uff0c\u7528\u6237\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684 Handler\uff0c\u7528\u4e8e\u5904\u7406 RPC \u8bf7\u6c42\u3002</p> <p>\u5bf9\u4e8e\u5355\u6b21\u8bf7\u6c42\u7684 Handler\uff0c\u4f7f\u7528\u6d41\u7a0b\u5982\u4e0b\uff1a - \u5b9e\u73b0\u4e00\u4e2a HandlerFunction\uff1a<code>func(payload []byte) ([]byte, *grid.RemoteErr)</code> - \u6ce8\u518c\u8be5 Handler\uff0c\u5173\u8054\u4e00\u4e2a HandlerID\u3002 - \u901a\u8fc7 Handler \u7684 <code>Call</code> \u65b9\u6cd5\uff0c\u5b9e\u73b0 RPC \u8c03\u7528\u3002</p> <p>\u901a\u8fc7\u6ce8\u518c\u7684 Handler \u5ba2\u6237\u7aef\u8c03\u7528\u7684\u6d41\u7a0b\u5982\u4e0b\uff1a <pre><code>sequenceDiagram\n    participant Stub\n    participant muxClient\n    participant ClientConnection\n    participant ServerConnection\n    participant muxServer\n\n    Stub-&gt;&gt;Stub: \u7ec4\u88c5 Payload\n    Stub-&gt;&gt;muxClient: \u8c03\u7528 Request \u65b9\u6cd5\uff0c\u521b\u5efa muxClient \u5b9e\u4f8b\n    muxClient-&gt;&gt;ClientConnection: \u7ec4\u88c5\u6d88\u606f\uff0c\u8c03\u7528 send\n    ClientConnection--&gt;ServerConnection: \u53d1\u9001 OpRequest \u8bf7\u6c42\n    ServerConnection--&gt;&gt;muxServer: \u63a5\u6536 OpRequest \u8bf7\u6c42\n    muxServer-&gt;&gt;muxServer: \u8c03\u7528 Handler \u5904\u7406\u8bf7\u6c42\n    muxServer--&gt;&gt;ServerConnection: \u53d1\u9001 OpResponse \u54cd\u5e94\n    ServerConnection--&gt;&gt;ClientConnection: \u63a5\u6536 OpResponse \u54cd\u5e94\n    ClientConnection--&gt;&gt;muxClient: \u5206\u53d1 OpResponse \u54cd\u5e94\n    muxClient--&gt;&gt;Stub: \u8fd4\u56de\u54cd\u5e94\u7ed3\u679c</code></pre></p> <p>\u6d41\u5f0f\u8bf7\u6c42\u7c7b\u4f3c\uff0c\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li>\u5b9e\u73b0 Handler\uff1a<code>StreamHandlerFn func(ctx context.Context, payload []byte, in &lt;-chan []byte, out chan&lt;- []byte) *RemoteErr</code></li> <li>\u6ce8\u518c\u8be5 Handler\uff0c\u5173\u8054\u4e00\u4e2a HandlerID\u3002 </li> <li>\u901a\u8fc7 Handler \u7684 <code>Call</code> \u65b9\u6cd5\uff0c\u5b9e\u73b0 RPC \u8c03\u7528\uff0c\u8fd4\u56de\u4e00\u4e2a <code>Stream</code> \u5b9e\u4f8b\u3002</li> <li>\u901a\u8fc7 <code>Stream</code> \u7684 <code>Result</code> \u65b9\u6cd5\uff0c\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c\u7528\u4e8e\u5904\u7406\u54cd\u5e94\u3002</li> <li>\u901a\u8fc7 <code>Stream</code> \u7684 <code>Send</code> \u65b9\u6cd5\uff0c\u53d1\u9001\u8bf7\u6c42\u3002</li> </ul>"},{"location":"blog/2025/07/25/minio-grid/#_9","title":"\u5065\u5eb7\u68c0\u67e5","text":"<p>\u6bcf\u4e2a Connection \u90fd\u4f1a\u5b9a\u671f\uff08\u9ed8\u8ba4\u4e3a 10s\uff09\u7684\u4e92\u76f8\u8fdb\u884c Ping\\Pong \u7684\u8bf7\u6c42\u6765\u8fdb\u884c\u63a2\u6d3b\uff0c\u5bf9\u4e8e\u8d85\u65f6\u672a\u6536\u5230 Pong \u54cd\u5e94\u7684\u8fde\u63a5\uff0c\u4f1a\u7531 Client \u4fa7\u4e0d\u65ad\u5730\u53d1\u8d77 <code>reconnect</code> \u8bf7\u6c42\u3002 </p> <p>\u5728 Stream \u573a\u666f\u4e0b\uff0cmux \u5b9e\u4f8b\u4e5f\u4f1a\u4e92\u76f8\u8fdb\u884c\u63a2\u6d3b\u3002</p>"},{"location":"blog/2025/07/25/minio-grid/#minio","title":"MinIO \u4e2d\u7684\u4f7f\u7528","text":"<p>MinIO\u4e2d\u4e00\u4e2aServer\u4f1a\u6709\u4e24\u4e2a\u5168\u5c40\u7684 <code>Manager</code> \u5b9e\u4f8b\uff0c\u5206\u522b\u7528\u4e8e\u5904\u7406\u5206\u5e03\u5f0f\u9501\u573a\u666f\u548c\u5176\u4ed6\u4ea4\u4e92\u573a\u666f\u3002</p>"},{"location":"blog/2025/07/25/minio-grid/#_10","title":"\u5143\u6570\u636e\u8bfb\u5199","text":"<p>MinIO\u4e2d\u5143\u6570\u636e\u8bfb\u5199\u7531 Grid \u8fdb\u884c\u5904\u7406\uff0c\u6570\u636e Part \u8bfb\u5199\u7531 restClient \u5904\u7406\u3002   </p> <p>Grid \u901a\u4fe1\u6846\u67b6\u9002\u7528\u4e8e\u5bf9\u4e8e\u5143\u6570\u636e\u8bfb\u5199\u3001Bucket\u3001Object \u7b49\u5220\u9664\u8fd9\u7c7b\u6570\u636e\u91cf\u8f83\u5c0f\u7684\u8bf7\u6c42\uff0c\u800c\u5bf9\u4e8e\u6570\u636e Part \u7684\u8bfb\u5199\u8fd9\u7c7b\u64cd\u4f5c\uff0c\u901a\u5e38\u6570\u636e\u91cf\u8f83\u5927\uff0c\u4e0d\u9002\u7528\u4e8e Grid\u3002\u56e0\u6b64\u5728 MinIO \u4e2d\uff0c\u5bf9\u4e8e\u6570\u636e Part \u7684\u8bfb\u5199\uff0c\u4f7f\u7528\u7684\u662f restClient\uff0crestClient \u5373\u4e3a\u4e00\u4e2a\u7b80\u5355\u7684 HTTP \u670d\u52a1\uff0c\u901a\u8fc7 REST \u63a5\u53e3\u4f7f\u7528 HTTP \u534f\u8bae\u8fdb\u884c\u6570\u636e\u7684\u8bfb\u5199\u3002</p>"},{"location":"blog/2025/07/25/minio-grid/#_11","title":"\u9501","text":""},{"location":"blog/2025/07/28/minio-heal/","title":"MinIO \u7b14\u8bb0\uff087\uff09: \u6570\u636e\u4fee\u590d","text":""},{"location":"blog/2025/07/28/minio-heal/#_1","title":"\u6982\u5ff5","text":"<p>Healing \u662f\u6307 MinIO \u6062\u590d\u5df2\u635f\u574f\u3001\u90e8\u5206\u4e22\u5931\u7684\u5bf9\u8c61\u7684\u80fd\u529b\u3002\u635f\u574f\u7684\u7c7b\u578b\u5305\u62ec\uff1a</p> <ul> <li>\u9a71\u52a8\u5668\u6545\u969c\u3002</li> <li>\u6587\u4ef6\u7cfb\u7edf\u6545\u969c\u3002</li> <li>bitrot\u3002</li> </ul> <p>MinIO \u4f1a\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\uff0c\u89e6\u53d1\u6570\u636e\u4fee\u590d\u6d41\u7a0b\uff1a</p>"},{"location":"blog/2025/07/28/minio-heal/#get","title":"GET\u8bf7\u6c42\u671f\u95f4","text":"<p>MinIO \u4f1a\u5728\u6bcf\u6b21\u4f7f\u7528 <code>GET</code> \u6216 <code>HEAD</code> \u64cd\u4f5c\u8bf7\u6c42\u5bf9\u8c61\u65f6\uff0c\u81ea\u52a8\u68c0\u67e5\u5bf9\u8c61\u6570\u636e\u5206\u7247\u7684\u4e00\u81f4\u6027\u3002\u5bf9\u4e8e\u53d7\u7248\u672c\u63a7\u5236\u7684\u5b58\u50a8\u6876\uff0cMinIO \u8fd8\u4f1a\u5728 <code>PUT</code> \u64cd\u4f5c\u4f5c\u671f\u95f4\u68c0\u67e5\u4e00\u81f4\u6027\u3002</p> <p>\u5982\u679c\u53d1\u73b0\u6240\u6709\u6570\u636e\u5206\u7247\u90fd\u5b8c\u597d\u65e0\u635f\uff0c\u5219 MinIO \u5c06\u6839\u636e\u6570\u636e\u5206\u7247\u8fd4\u56de\u5bf9\u8c61\u6570\u636e\uff0c\u800c\u4e0d\u68c0\u67e5\u76f8\u5e94\u7684\u5947\u5076\u6821\u9a8c\u5206\u7247\u3002</p> <p>\u5982\u679c\u5bf9\u8c61\u7684\u6570\u636e\u5206\u7247\u7f3a\u5931\u6216\u635f\u574f\uff0c\u5219 MinIO \u4f1a\u4f7f\u7528\u53ef\u7528\u7684 EC \u6821\u9a8c\u5206\u7247\u8ba1\u7b97\u5bf9\u8c61\u6570\u636e\u8fdb\u884c\u8fd4\u56de\uff08\u540c\u65f6\u5c06\u6570\u636e\u4fee\u590d\u4efb\u52a1\u52a0\u5165 mrf \u4fee\u590d\u5e8f\u5217\u4e2d\uff0c\u5f02\u6b65\u6267\u884c Object \u4fee\u590d\uff09\u3002\u4e22\u5931\u7684\u5206\u7247\u6570\u4e0d\u80fd\u8d85\u8fc7 EC \u6821\u9a8c\u6570\uff0c\u5426\u5219\u65e0\u6cd5\u6062\u590d\u5bf9\u8c61\u3002\u5982\u679c\u6570\u636e\u5206\u914d\u548c EC \u6821\u9a8c\u5206\u7247\u90fd\u6709\u4e22\u5931\u6216\u635f\u574f\uff0cMinIO \u5c06\u6062\u590d EC \u6821\u9a8c\u5206\u7247\uff0c\u524d\u63d0\u662f\u6709\u8db3\u591f\u7684\u5176\u4ed6 EC \u6821\u9a8c\u5206\u7247\u6765\u4e3a\u5bf9\u8c61\u63d0\u4f9b\u670d\u52a1\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#scanner","title":"Scanner\u626b\u63cf\u671f\u95f4","text":"<p>MinIO \u4f7f\u7528\u5bf9\u8c61\u626b\u63cf\u7a0b\u5e8f\u6765\u6267\u884c\u8bb8\u591a\u4e0e\u5bf9\u8c61\u76f8\u5173\u7684\u4efb\u52a1\u3002\u5176\u4e2d\u4e00\u9879\u4efb\u52a1\u4f1a\u68c0\u67e5\u5bf9\u8c61\u7684\u5b8c\u6574\u6027\uff0c\u5982\u679c\u53d1\u73b0\u5bf9\u8c61\u5df2\u635f\u574f\u6216\u635f\u574f\uff0c\u5219\u4f1a\u4fee\u590d\u5b83\u4eec\u3002 \u5728\u6bcf\u6b21\u626b\u63cf\u8fc7\u7a0b\u4e2d\uff0cMinIO \u4f7f\u7528\u5bf9\u8c61\u540d\u79f0\u7684\u54c8\u5e0c\u503c\u4e0e scanner \u5468\u671f\u6570\u505a\u53d6\u6a21\u8ba1\u7b97\uff0c\u9ed8\u8ba4\u6bcf\u4e2a Object \u4f1a\u5728\u6bcf 1024 \u8f6e\u88ab\u9009\u4e2d\uff0c\u6267\u884c Heal \u64cd\u4f5c\u3002 \u5982\u679c\u53d1\u73b0\u4efb\u4f55\u5bf9\u8c61\u4e22\u5931\u4e86\u5206\u7247\uff0cMinIO \u4f1a\u4ece\u53ef\u7528\u5206\u7247\u4e2d\u4fee\u590d\u8be5\u5bf9\u8c61\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cMinIO \u4e0d\u4f7f\u7528\u626b\u63cf\u7a0b\u5e8f\u68c0\u67e5 bitrot \u635f\u574f\u3002\u8fd9\u53ef\u80fd\u662f\u4e00\u4e2a\u6bd4\u8f83\u91cd\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u8de8\u591a\u4e2a\u78c1\u76d8\u7684 bitrot \u98ce\u9669\u5f88\u4f4e\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#_2","title":"\u624b\u52a8\u89e6\u53d1","text":"<p>\u7ba1\u7406\u5458\u53ef\u4ee5\u4f7f\u7528 <code>mc admin heal</code> \u542f\u52a8\u5b8c\u6574\u7684\u7cfb\u7edf\u4fee\u590d\u3002\u8be5\u7a0b\u5e8f\u975e\u5e38\u8017\u8d39\u8d44\u6e90\uff0c\u901a\u5e38\u4e0d\u9700\u8981\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#_3","title":"\u5b9e\u73b0","text":""},{"location":"blog/2025/07/28/minio-heal/#api","title":"\u6838\u5fc3API\u53ca\u5176\u5b9e\u73b0","text":"<p>MINIO\u7684\u6570\u636e\u6062\u590d\u80fd\u529b\u90fd\u662f\u6784\u5efa\u5728\u8fd9\u51e0\u4e2a\u6838\u5fc3\u7684 API \u4e4b\u4e0a\u7684\uff0c\u6709\u4e9b\u6062\u590d\u573a\u666f\u662f\u5c06\u8fd9\u4e9b API \u96c6\u6210\u5728\u6846\u67b6\u4e2d\uff0c\u6709\u4e9b\u662f\u76f4\u63a5\u8c03\u7528 API\u3002</p> <pre><code>// ObjectLayer implements primitives for object API layer.\ntype ObjectLayer interface {\n// ...\n  // Healing operations.\n  HealFormat(ctx context.Context, dryRun bool) (madmin.HealResultItem, error)\n  HealBucket(ctx context.Context, bucket string, opts madmin.HealOpts) (madmin.HealResultItem, error)\n  HealObject(ctx context.Context, bucket, object, versionID string, opts madmin.HealOpts) (madmin.HealResultItem, error)\n  HealObjects(ctx context.Context, bucket, prefix string, opts madmin.HealOpts, fn HealObjectFn) error\n  CheckAbandonedParts(ctx context.Context, bucket, object string, opts madmin.HealOpts) error\n// ...\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#healobject","title":"HealObject","text":"<p><code>HealObject</code> \u4ece Pool \u5c42\u5f00\u59cb\u8c03\u7528\uff0c\u5e76\u53d1\u8bf7\u6c42\u6bcf\u4e2a Pool\uff0c\u6bcf\u4e2a Pool \u5185\u6309\u7167\u54c8\u5e0c\u786e\u5b9a Object \u6240\u5c5e Set\uff0c\u5bf9\u5e94 Set \u6267\u884c\u4fee\u590d\u6d41\u7a0b\uff0c\u4fee\u590d\u4e3b\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <pre><code>graph TD\n    A[\u5bf9Object\u52a0\u9501] --&gt; B[\u5e76\u53d1\u83b7\u53d6Object\u5143\u6570\u636e, \u8bb0\u5f55\u9519\u8bef];\n    B --&gt; C[\u786e\u5b9a\u8bfbQuorum];\n    C --&gt; D{\u662f\u5426\u6ee1\u8db3\u8bfbQuorum};\n    D -- \u6ee1\u8db3 --&gt; E[\u83b7\u53d6\u6743\u5a01\u7684\u5143\u6570\u636e];\n    E --&gt; F[\u6821\u9a8cPart\u6587\u4ef6\u662f\u5426\u7f3a\u5931\u6216\u635f\u574f];\n    F --&gt; G{\u5224\u65ad\u662f\u5426\u80fd\u4fee\u590d};\n    G -- \u80fd --&gt; H[\u901a\u8fc7EC\u7b97\u6cd5\u6062\u590d\u6570\u636e, \u6682\u5b58tmp\u76ee\u5f55\u4e0b];\n    H --&gt; I[Rename\u5230\u5bf9\u5e94Object\u76ee\u5f55\u4e0b];\n    D -- \u4e0d\u6ee1\u8db3 --&gt; J{\u5224\u65adObject\u662f\u5426\u662fDangling};\n    G -- \u4e0d\u80fd --&gt; J;\n    J -- \u662f --&gt; K[\u5220\u9664\u8be5Object];\n    K --&gt; L[\u8fd4\u56de\u6587\u4ef6\u4e0d\u5b58\u5728\u9519\u8bef];\n    J -- \u4e0d\u662f --&gt; M[\u8bb0\u5f55ReadQuorum\u9519\u8bef];</code></pre> <p>\u4e0a\u8ff0\u6d41\u7a0b\u4e2d\uff1a</p> <ul> <li>\u5224\u65ad\u662f\u5426\u662f\u60ac\u7a7a\u5bf9\u8c61\uff1a\u5982\u679c\u6ca1\u6709\u4e00\u4e2a\u5408\u6cd5\u7684\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5219\u4e0d\u80fd\u786e\u5b9a\u8be5\u76ee\u5f55\u4e0b\u7684\u662f\u4ec0\u4e48\uff0c\u4e0d\u80fd\u8ba4\u4e3a\u662f <code>Dangling Object</code>\uff1b\u5bf9\u4e8e\u5b58\u5728\u5408\u6cd5\u5143\u6570\u636e\u7684\u5bf9\u8c61\uff0c\u9700\u8981\u5224\u65ad\u7f3a\u5931\u7684\u90e8\u5206\u662f\u5426\u5927\u4e8e EC \u4e2d\u7684\u6821\u9a8c\u6570\uff0c\u5927\u4e8e\u5219\u65e0\u6cd5\u6062\u590d\uff0c\u8ba4\u4e3a\u8be5 Object \u662f\u4e00\u4e2a <code>Dangling Object</code>\u3002</li> </ul>"},{"location":"blog/2025/07/28/minio-heal/#healbucket","title":"HealBucket","text":""},{"location":"blog/2025/07/28/minio-heal/#_4","title":"\u76f8\u5173\u6570\u636e\u7ed3\u6784","text":""},{"location":"blog/2025/07/28/minio-heal/#healsequence","title":"healSequence","text":"<p>\u4e00\u4e2a\u6570\u636e\u6062\u590d\u5e8f\u5217\uff0c\u4fdd\u5b58\u6570\u636e\u4fee\u590d\u8fc7\u7a0b\u4e2d\u7684\u5404\u79cd\u72b6\u6001\u53ca\u7edf\u8ba1\u6307\u6807\u3002\u672c\u8eab\u4e0d\u5904\u7406\u6062\u590d\u4efb\u52a1\uff0c\u5c06\u6062\u590d\u4efb\u52a1\u8f6c\u53d1\u7ed9 <code>healRoutine</code> \u5904\u7406\u3002</p> <pre><code>type healSequence struct {\n    // bucket, and object on which heal seq. was initiated\n    bucket, object string\n\n    // Report healing progress\n    reportProgress bool\n\n    // time at which heal sequence was started\n    startTime time.Time\n\n    // time at which heal sequence has ended\n    endTime time.Time\n\n    // Heal client info\n    clientToken, clientAddress string\n\n    // was this heal sequence force started?\n    forceStarted bool\n\n    // heal settings applied to this heal sequence\n    settings madmin.HealOpts\n\n    // current accumulated status of the heal sequence\n    currentStatus healSequenceStatus\n\n    // channel signaled by background routine when traversal has\n    // completed\n    traverseAndHealDoneCh chan error\n\n    // canceler to cancel heal sequence.\n    cancelCtx context.CancelFunc\n\n    // the last result index sent to client\n    lastSentResultIndex int64\n\n    // Number of total items scanned against item type\n    scannedItemsMap map[madmin.HealItemType]int64\n\n    // Number of total items healed against item type\n    healedItemsMap map[madmin.HealItemType]int64\n\n    // Number of total items where healing failed against item type\n    healFailedItemsMap map[madmin.HealItemType]int64\n\n    // The time of the last scan/heal activity\n    lastHealActivity time.Time\n\n    // Holds the request-info for logging\n    ctx context.Context\n\n    // used to lock this structure as it is concurrently accessed\n    mutex sync.RWMutex\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#allhealstate","title":"allHealState","text":"<p>\u5728\u5185\u5b58\u4e2d\u4fdd\u5b58\u6240\u6709\u7684\u6570\u636e\u6062\u590d\u5e8f\u5217\u72b6\u6001\uff0c\u4ee5\u53ca\u672c\u5730\u78c1\u76d8\u63a2\u6d4b\u53ca\u6062\u590d\u72b6\u6001\uff08\u7528\u4e8e\u65b0\u78c1\u76d8\u7684\u683c\u5f0f\u5316\u53ca\u6570\u636e\u6062\u590d\uff09\u3002</p> <ul> <li><code>healSeqMap</code>\uff1a key\u4e3a\u6570\u636e\u6062\u590d\u4f5c\u7528\u7684\u8def\u5f84\uff0c\u540c\u4e00\u8def\u5f84\u53ea\u80fd\u5b58\u5728\u4e00\u4e2a\u4fee\u590d\u4fee\u590d\u5e8f\u5217\u3002</li> <li><code>healLocalDisks</code>\uff0c<code>healStatus</code>\u7528\u4e8e\u76d1\u63a7\u672c\u5730\u78c1\u76d8\u7684\u72b6\u6001\uff0c\u5bf9\u65b0\u78c1\u76d8\u8fdb\u884c\u683c\u5f0f\u5316\u548c\u6570\u636e\u6062\u590d\u3002</li> </ul> <p>\u6bcf\u4e2aserver\u5728\u5185\u5b58\u4e2d\u4fdd\u5b58\u4e24\u4e2a\u5168\u5c40\u7684<code>allHealState</code>\u53d8\u91cf\uff1a</p> <ul> <li> <p><code>globalBackgroundHealState</code>:  \u53ea\u6709\u4e00\u4e2a\u4fee\u590d\u5e8f\u5217(<code>bgSeq</code>,id:\"0000-0000-0000-0000\")\uff0c\u7528\u6765\u5904\u7406\u65b0\u78c1\u76d8\u683c\u5f0f\u5316\u7b49\u540e\u53f0\u81ea\u52a8\u8fdb\u884c\u7684\u6570\u636e\u4fee\u590d\u4efb\u52a1\u3002</p> </li> <li> <p><code>globalAllHealState</code>:  \u5bf9\u5e94Admin API\u624b\u52a8\u89e6\u53d1\u7684\u4fee\u590d\u4efb\u52a1\uff0c\u6bcf\u6b21\u65b0\u7684Heal\u8bf7\u6c42\u4f1a\u5728\u8be5state\u4e2d\u65b0\u589eseq\uff08\u4e0d\u540c\u7684Path\uff09\u3002</p> </li> </ul> <pre><code>type allHealState struct {\n    sync.RWMutex\n\n    // map of heal path to heal sequence\n    healSeqMap map[string]*healSequence // Indexed by endpoint\n    // keep track of the healing status of disks in the memory\n    //   false: the disk needs to be healed but no healing routine is started\n    //    true: the disk is currently healing\n    healLocalDisks map[Endpoint]bool \n    healStatus     map[string]healingTracker // Indexed by disk ID\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#healingtracker","title":"healingTracker","text":"<p><code>healingTracker</code> \u7528\u6765\u6301\u4e45\u5316\u4e00\u6b21\u65b0\u78c1\u76d8\u683c\u5f0f\u5316\u548c\u6570\u636e\u6062\u590d\u8fc7\u7a0b\u4e2d\u7684\u76f8\u5173\u4fe1\u606f\uff0c\u5bf9\u5e94 <code>.minio.sys/buckets/.healing.bin</code>\u6587\u4ef6\uff0c\u8bb0\u5f55\u7684\u5185\u5bb9\u5305\u62ec\uff1a</p> <pre><code>type healingTracker struct {\n    disk StorageAPI    `msg:\"-\"`\n    mu   *sync.RWMutex `msg:\"-\"`\n\n    ID         string    // Disk ID\n    PoolIndex  int       // Pool index\n    SetIndex   int       // Set index\n    DiskIndex  int       // Disk index\n    Path       string    // Path to drive\n    Endpoint   string    // Endpoint of drive\n    Started    time.Time\n    LastUpdate time.Time\n\n    ObjectsTotalCount uint64\n    ObjectsTotalSize  uint64\n\n    ItemsHealed uint64\n    ItemsFailed uint64\n\n    BytesDone   uint64\n    BytesFailed uint64\n\n    // Last object scanned.\n    Bucket string `json:\"-\"`\n    Object string `json:\"-\"`\n\n    // Numbers when current bucket started healing,\n    // for resuming with correct numbers.\n    ResumeItemsHealed  uint64 `json:\"-\"`\n    ResumeItemsFailed  uint64 `json:\"-\"`\n    ResumeItemsSkipped uint64 `json:\"-\"`\n    ResumeBytesDone    uint64 `json:\"-\"`\n    ResumeBytesFailed  uint64 `json:\"-\"`\n    ResumeBytesSkipped uint64 `json:\"-\"`\n\n    // Filled on startup/restarts.\n    QueuedBuckets []string\n\n    // Filled during heal.\n    HealedBuckets []string\n\n    // ID of the current healing operation\n    HealID string\n\n    ItemsSkipped uint64\n    BytesSkipped uint64\n\n    RetryAttempts uint64\n\n    Finished bool // finished healing, whether with errors or not\n\n    // Add future tracking capabilities\n    // Be sure that they are included in toHealingDisk\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#healroutine","title":"healRoutine","text":"<p>\u63a5\u53d7<code>healtask</code>\uff0c\u5904\u7406\u6570\u636e\u4fee\u590d\u4efb\u52a1\uff0c\u5168\u5c40\u4e00\u4e2a\u5b9e\u4f8b\uff08<code>globalBackgroundHealRoutine</code>\uff09\u591a\u4e2aworker\uff0cworker\u6570\u91cf\u9ed8\u8ba4\u4e3aGOMAXPROCS/2\uff0c\u53ef\u4ee5\u901a\u8fc7<code>_MINIO_HEAL_WORKERS</code>\u73af\u5883\u53d8\u91cf\u6307\u5b9a\u3002</p> <pre><code>type healRoutine struct {\n    tasks   chan healTask\n    workers int\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#healtask","title":"healTask","text":"<p>\u4e00\u6b21heal\u4efb\u52a1\uff0c\u5305\u62echeal\u4f5c\u7528\u7684\u5bf9\u8c61\u53ca\u76f8\u5173\u53c2\u6570\uff0c\u901a\u8fc7channel\u4f20\u9012\u7ed9<code>healRoutine</code>\u5904\u7406\u3002</p> <pre><code>// healTask represents what to heal along with options\n//\n//        path: '/' =&gt;  Heal disk formats along with metadata\n//        path: 'bucket/' or '/bucket/' =&gt; Heal bucket\n//        path: 'bucket/object' =&gt; Heal object\ntype healTask struct {\n    bucket    string\n    object    string\n    versionID string\n    opts      madmin.HealOpts\n    // Healing response will be sent here\n    respCh chan healResult\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#mrfstate","title":"mrfState","text":"<p><code>mrfState</code> \u7528\u6765\u4fdd\u8bc1\u4e00\u4e2a Object \u7684\u5206\u7247\u5b8c\u6574\u6027\uff0c\u8be5\u5b50\u7cfb\u7edf\u542f\u52a8\u65f6\u4f1a\u76d1\u542c\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\uff0c\u7531\u8be5\u961f\u5217\u8f93\u5165\u4fee\u590d\u4efb\u52a1\uff0c\u4e00\u4e2a\u4fee\u590d\u4efb\u52a1\u8868\u793a\u7531\u4e00\u6b21\u6ca1\u6709\u5b8c\u5168\u6210\u529f\uff08\u6ee1\u8db3 quorum \u8981\u6c42\uff09\u7684\u4e0a\u4f20\u6216\u5220\u9664\u52a8\u4f5c\uff0c\u5bfc\u81f4\u7684 MinIO \u8282\u70b9\u4e4b\u95f4\u7684\u5206\u7247\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u89e6\u53d1\u4fee\u590d\u4efb\u52a1\u5165\u961f\u7684\u65f6\u673a\u4e3a GET \u8bf7\u6c42\u6216\u5728\u53d7\u7248\u672c\u63a7\u5236\u7684 Bucket \u4e2d\u7684 PUT \u8bf7\u6c42\u3002</p> <pre><code>// \u7528\u4e8e\u8868\u793a\u5bf9\u8c61\u6210\u529f\u4e0a\u4f20\u6216\u5220\u9664\uff0c\u4f46\u672a\u5b8c\u5168\u5199\u5165\u6240\u6709\u78c1\u76d8\u7684\u60c5\u51b5\uff0c\u53ea\u8981\u6ee1\u8db3\u6cd5\u5b9a\u4eba\u6570\u5373\u53ef\u3002\ntype PartialOperation struct {\n    Bucket              string\n    Object              string\n    VersionID           string\n    Versions            []byte\n    SetIndex, PoolIndex int\n    Queued              time.Time\n    BitrotScan          bool\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#heal","title":"Heal \u573a\u666f","text":""},{"location":"blog/2025/07/28/minio-heal/#_5","title":"\u65b0\u78c1\u76d8\u683c\u5f0f\u5316\u53ca\u6570\u636e\u6062\u590d","text":"<p>\u4e00\u4e2a erasureSet \u4e2d\u7684\u78c1\u76d8\u5728\u542f\u52a8\u4e4b\u540e\u662f\u4e0d\u53ef\u66f4\u6539\u7684\uff0c\u4f46\u53ef\u80fd\u51fa\u73b0\u6570\u636e\u76d8\u635f\u574f\uff0c\u9700\u8981\u66ff\u6362\u78c1\u76d8\u7684\u573a\u666f\uff0c\u5728\u8be5\u573a\u666f\u4e0b\uff0c\u9700\u8981\u5bf9\u65b0\u78c1\u76d8\u8fdb\u884c\u683c\u5f0f\u5316\uff0c\u53ca\u5bf9\u5e94\u7684\u6570\u636e\u6062\u590d\u3002</p> <p>MinIO \u9ed8\u8ba4\u4f1a\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff08\u9ed8\u8ba4\u9891\u7387\u4e3a 10s \u4e00\u6b21\uff09\uff0c\u8be5\u5b9a\u65f6\u4efb\u52a1\u901a\u8fc7\u5b9a\u671f\u83b7\u53d6\u672c\u5730\u78c1\u76d8\u7684\u4fee\u590d\u72b6\u6001\uff0c\u6765\u4fdd\u8bc1\u68c0\u6d4b\u5230\u7684\u65b0\u78c1\u76d8\u88ab\u4fee\u590d\u3002\u78c1\u76d8\u7684\u4fee\u590d\u72b6\u6001\u5b58\u50a8\u5728\u4e00\u4e2a\u5168\u5c40 Map \u4e2d\uff1a</p> <p>key:  endpoint\uff0c\u5b58\u653e PoolIdx, SetIdx, DiskIdx \u7b49\u4fe1\u606f\u3002   val\uff1a\u6807\u8bc6\u662f\u5426\u5df2\u7ecf\u88ab\u4fee\u590d     - false\uff1a\u672a\u4fee\u590d\uff0c\u9700\u8981\u6267\u884c Heal\u3002     - true\uff1a\u5df2\u4fee\u590d\u3002</p> <pre><code>type allHealState struct {\n    sync.RWMutex\n\n    // map of heal path to heal sequence\n    healSeqMap map[string]*healSequence // Indexed by endpoint\n    // keep track of the healing status of disks in the memory\n    //   false: the disk needs to be healed but no healing routine is started\n    //    true: the disk is currently healing\n    healLocalDisks map[Endpoint]bool \n    healStatus     map[string]healingTracker // Indexed by disk ID\n}\n</code></pre> <p>\u8be5\u72b6\u6001\u8868\u7684\u66f4\u65b0\u7531\u53e6\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u5b8c\u6210\u3002\u670d\u52a1\u542f\u52a8\u540e\uff0c\u6839\u636e\u542f\u52a8\u547d\u4ee4\u521b\u5efa\u5bf9\u5e94\u7684 erasureSets\uff0c\u5728\u6bcf\u4e2a erasureSet \u5185\u90e8\uff0c\u4f1a\u5f00\u542f\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\uff08\u9ed8\u8ba4\u9891\u7387 15s \u4e00\u6b21\uff0c\u9700\u8981\u6bd4\u4e0a\u9762\u7684\u4efb\u52a1\u5b9a\u65f6\u95f4\u9694\u5927\uff09\u53bb\u91cd\u65b0\u8fde\u63a5\u65ad\u5f00\u7684 Endpoint \u6765\u8ddf\u8e2a\u5b83\u4eec\u7684\u72b6\u6001\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#_6","title":"\u63a2\u6d4b\u65b0\u78c1\u76d8","text":"<p>\u5b9a\u65f6\u4efb\u52a1\u5b9a\u671f\u83b7\u53d6\u6240\u6709\u78c1\u76d8\u4fe1\u606f\uff0c\u5224\u65ad\u78c1\u76d8\u662f\u5426\u5728\u7ebf\uff0c\u9488\u5bf9\u6389\u7ebf\u7684\u78c1\u76d8\u9700\u8981\u91cd\u65b0\u5efa\u7acb\u8fde\u63a5\u3002\u5bf9\u4e8e\u672c\u5730\u78c1\u76d8\u662f\u5426\u5728\u7ebf\u7684\u5224\u65ad\u65b9\u6cd5\u4e3a\uff1a\u8bfb\u53d6 format.json \u6587\u4ef6\uff0c\u83b7\u53d6\u6587\u4ef6\u4e2d\u7684 diskID\uff0c\u5224\u65ad\u4e0e\u5185\u5b58\u4e2d\u7684\u503c\u662f\u5426\u4e00\u81f4\uff0c\u4e0d\u4e00\u81f4\uff0c\u5219\u8bc1\u660e\u4e0d\u5728\u7ebf\uff08\u53ef\u80fd\u662f\u53d1\u751f\u4e86\u78c1\u76d8\u66ff\u6362\uff0c\u8be5\u78c1\u76d8\u4e0a\u4e0d\u5b58\u5728 format.json \u6587\u4ef6\uff09\u3002</p> <p>\u5728\u5bf9\u79bb\u7ebf\u7684\u78c1\u76d8\u8fdb\u884c\u91cd\u65b0\u8fde\u63a5\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u53d1\u73b0\u4e3a\u672c\u5730\u78c1\u76d8\u4e14\u662f\u4e00\u4e2a\u672a\u88ab\u683c\u5f0f\u5316\uff08\u65e0 format.json \u6587\u4ef6\uff09\uff0c\u9700\u8981\u5c06\u8be5\u78c1\u76d8\u7684\u72b6\u6001\u5728\u5168\u5c40\u8868\u4e2d\u66f4\u65b0\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#_7","title":"\u65b0\u78c1\u76d8\u4fee\u590d","text":"<p>\u5f53\u5b9a\u65f6\u4efb\u52a1\u83b7\u53d6\u5230\u65b0\u78c1\u76d8\u5217\u8868\u4e4b\u540e\uff0c\u9996\u5148\u4f1a\u5bf9\u5168\u90e8\u7684\u78c1\u76d8\u6267\u884c <code>HealFormat</code> \u64cd\u4f5c\uff0c\u4e4b\u540e\u5e76\u884c\u7684\u53bb\u4fee\u590d\u65b0\u78c1\u76d8\uff08\u540c\u4e00\u4e2a erasureSet \u4e92\u65a5\uff0c\u4e0d\u540c erasureSet \u5e76\u884c\uff09\u3002</p> <p>\u4fee\u590d\u6d41\u7a0b\u4e3a\uff1a - \u83b7\u53d6\u9501\uff0c\u786e\u4fdd\u4e00\u4e2a erasureSet \u4e2d\u7684\u78c1\u76d8\u4e0d\u4f1a\u5e76\u884c\u4fee\u590d\u3002 - \u83b7\u53d6\u6240\u6709 bucket\uff0c\u5c06 bucket \u4fee\u590d\u4efb\u52a1\u4f20\u5165 <code>globalBackgroundHealState</code> \u7684 seq\uff08\"0000-0000-0000-0000\"\uff09\u4e2d\uff0c\u5148\u5c06\u6240\u6709 bucket \u6062\u590d\uff0c\u6b64\u65f6 bucket \u4e2d\u7684 object \u5c1a\u672a\u6062\u590d\u3002 - \u5e76\u53d1\u8c03\u7528 <code>HealObject</code> \u6062\u590d\u5404 bucket \u4e2d\u7684 object \u6570\u636e\u3002</p> <p>\u65b0\u78c1\u76d8\u4fee\u590d\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u53d1\u751f\u9519\u8bef\uff0c\u5219\u4e0d\u4f1a\u5c06\u78c1\u76d8\u72b6\u6001\u66f4\u65b0\u4e3a\u5df2\u4fee\u590d\uff0c\u9700\u8981\u7b49\u5f85\u4e0b\u4e00\u6b21\u5b9a\u65f6\u4efb\u52a1\u89e6\u53d1\u4fee\u590d\u3002</p> <p>\u82e5\u6709 Object \u4fee\u590d\u5931\u8d25\uff0c\u4f1a\u8fd4\u56de\u91cd\u8bd5\u9519\u8bef\uff0c\u6700\u591a\u56db\u6b21\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#gethead","title":"GET/HEAD\u8bf7\u6c42\u4fee\u590d","text":""},{"location":"blog/2025/07/28/minio-heal/#_8","title":"\u8bf7\u6c42\u89e6\u53d1\u4fee\u590d","text":"<p>MinIO \u5904\u7406\u5bf9 Object \u7684 GET\u3001HEAD \u8bf7\u6c42\u65f6\uff0c\u4f1a\u9996\u5148\u5e76\u53d1\u83b7\u53d6 Object \u7684\u5143\u6570\u636e\uff0c\u5373\u8bfb\u53d6\u6bcf\u4e2a server \u4e0a\u5bf9\u5e94 Object \u76ee\u5f55\u4e0b\u7684 xl.meta \u6587\u4ef6\uff0c\u5982\u679c\u53d1\u73b0\u5143\u6570\u636e\u6709\u635f\u574f\uff0c\u5219\u4f1a\u5c1d\u8bd5\u4fee\u590d\u8be5 Object\uff0c\u5373\u5c06\u8be5 Object \u52a0\u5165 mrf \u4fee\u590d\u961f\u5217\u4e2d\u3002</p> <p>\u5143\u6570\u636e\u83b7\u53d6\u5b8c\u6210\u4e4b\u540e\uff0c\u5f00\u59cb\u83b7\u53d6 Object \u6570\u636e\uff0c\u8bfb\u53d6\u987a\u5e8f\u4e3a\u4f18\u5148\u6570\u636e\u5206\u7247\uff0c\u6570\u636e\u5206\u7247\u4e0d\u8db3\uff0c\u8bfb\u53d6\u6821\u9a8c\u5206\u7247\u3002\u5982\u679c Object \u7684\u6570\u636e\u5206\u7247\u51fa\u73b0\u635f\u574f\u3001\u7f3a\u5931\uff0c\u5219\u4f1a\u89e6\u53d1 MinIO \u7684\u4fee\u590d\u673a\u5236\uff1b\u5982\u679c\u6570\u636e\u5206\u7247\u672a\u635f\u574f\uff0c\u6821\u9a8c\u5206\u7247\u635f\u574f\uff0c\u5219\u4e0d\u4f1a\u89e6\u53d1\u3002</p> <p>MinIO \u4e2d\u6bcf\u4e2a Object \u7684\u5206\u7247\u5206\u5e03\u5728 object \u4e0b\u7684 xl.meta \u6587\u4ef6\u4e2d\u8bb0\u5f55\uff1a</p> <pre><code>{\n  \"Versions\": [\n    {\n...\n      \"Metadata\": {\n        \"Type\": 1,\n        \"V2Obj\": {\n          \"CSumAlgo\": 1,\n          \"DDir\": \"BRBLN//hRVOCokzO0165qg==\",\n          \"EcAlgo\": 1,\n          \"EcBSize\": 1048576,\n          \"EcDist\": [\n            2,\n            3,\n            1\n          ],\n...\n        },\n        \"v\": 0\n      }\n    }\n  ]\n}\n</code></pre> <p>\u5728\u6211\u4eec\u4f7f\u7528 EC:1 \u7684\u914d\u7f6e\u4e0b\uff0c\u6570\u636e\u5206\u7247\u6709\u4e24\u4e2a\uff0c\u6821\u9a8c\u5206\u7247\u6709\u4e00\u4e2a\uff0c\u5982\u4e0a\u7684 [2,3,1] \u8868\u793a\uff1a\u6570\u636e\u5206\u7247\u5728\u7b2c3,1\u53f7 minio server \u4e0a\uff0c\u6821\u9a8c\u5206\u7247\u5728 minio 2 \u4e0a\uff1b\u5373\u8be5\u6570\u7ec4\u7684 index \u8868\u793a minio server\uff0cindex \u5bf9\u5e94\u7684\u503c\u8868\u793a\u6570\u636e\u5206\u7247\u7684\u5e8f\u53f7\u3002</p> <p>\u5728\u5bf9 Object \u8fdb\u884c GET \u8bf7\u6c42\u65f6\uff0c\u6211\u4eec\u8bf7\u6c42\u5206\u7247\u6570\u636e\u7684\u987a\u5e8f\uff0c\u4f1a\u6309\u7167\u8be5\u5206\u5e03\u6392\u5e8f\uff0c\u4f18\u5148\u83b7\u53d6\u6570\u636e\u5206\u7247\u3002</p> <pre><code>// cmd/erasure-decode.go\nfunc (p *parallelReader) Read(dst [][]byte) ([][]byte, error){\n// ...\n    for i := 0; i &lt; p.dataBlocks; i++ {\n        // Setup read triggers for p.dataBlocks number of reads so that it reads in parallel.\n        readTriggerCh &lt;- true\n    }\n// ...\n}\n</code></pre> <p>\u5206\u7247\u6570\u636e\u7684\u8bfb\u53d6\u662f\u5e76\u884c\u7684\uff0c\u8fd9\u91cc\u53ef\u4ee5\u770b\u5230\uff0c\u5148\u542f\u52a8\u4e0e\u6570\u636e\u5206\u7247\u6570\u91cf\u76f8\u540c\u7684 goroutine \u53bb\u83b7\u53d6\u6570\u636e\u3002\u6570\u636e\u5206\u7247\u8bfb\u53d6\u9519\u8bef\u624d\u4f1a\u7ee7\u7eed\u89e6\u53d1\u8bfb\u64cd\u4f5c\uff0c\u53bb\u83b7\u53d6\u6821\u9a8c\u5206\u7247\u7684\u6570\u636e\u3002</p> <pre><code>// cmd/erasure-decode.go\nfunc (p *parallelReader) Read(dst [][]byte) ([][]byte, error){\n// ...\n    n, err := rr.ReadAt(p.buf[bufIdx], p.offset)\n    if err != nil {\n        switch {\n        case errors.Is(err, errFileNotFound):\n                atomic.StoreInt32(&amp;missingPartsHeal, 1)\n        case errors.Is(err, errFileCorrupt):\n                atomic.StoreInt32(&amp;bitrotHeal, 1)\n        case errors.Is(err, errDiskNotFound):\n                atomic.AddInt32(&amp;disksNotFound, 1)\n        }\n\n        // This will be communicated upstream.\n        p.orgReaders[bufIdx] = nil\n        if br, ok := p.readers[i].(io.Closer); ok {\n                br.Close()\n        }\n        p.readers[i] = nil\n\n        // Since ReadAt returned error, trigger another read.\n        readTriggerCh &lt;- true\n        return\n    }\n// ...\n}\n</code></pre> <p>\u8bfb\u53d6\u6210\u529f\uff0c\u4f46\u662f\u8fd4\u56de\u9519\u8bef\uff0c\u8bc1\u660e\u6570\u636e\u5206\u7247\u6709\u635f\u574f\u6216\u4e22\u5931\uff0c\u4f1a\u89e6\u53d1\u5206\u7247\u4fee\u590d\u6d41\u7a0b\uff0c\u5c06\u8be5\u64cd\u4f5c\u52a0\u5165\u524d\u9762\u63d0\u5230\u7684 <code>globalMRFState</code> \u4efb\u52a1\u961f\u5217\u4e2d\u3002</p> <pre><code>// cmd/erasure-object.go\nfunc (er erasureObjects) getObjectWithFileInfo(ctx context.Context, bucket, object string, startOffset int64, length int64, writer io.Writer, fi FileInfo, metaArr []FileInfo, onlineDisks []StorageAPI) error{\n// ...\n    written, err := erasure.Decode(ctx, writer, readers, partOffset, partLength, partSize, prefer)\n    // Note: we should not be defer'ing the following closeBitrotReaders() call as\n    // we are inside a for loop i.e if we use defer, we would accumulate a lot of open files by the time\n    // we return from this function.\n    closeBitrotReaders(readers)\n    if err != nil {\n        // If we have successfully written all the content that was asked\n        // by the client, but we still see an error - this would mean\n        // that we have some parts or data blocks missing or corrupted\n        // - attempt a heal to successfully heal them for future calls.\n        if written == partLength {\n            if errors.Is(err, errFileNotFound) || errors.Is(err, errFileCorrupt) {\n                healOnce.Do(func() {\n                    globalMRFState.addPartialOp(PartialOperation{\n                        Bucket:     bucket,\n                        Object:     object,\n                        VersionID:  fi.VersionID,\n                        Queued:     time.Now(),\n                        SetIndex:   er.setIndex,\n                        PoolIndex:  er.poolIndex,\n                        BitrotScan: errors.Is(err, errFileCorrupt),\n                    })\n                })\n                // Healing is triggered and we have written\n                // successfully the content to client for\n                // the specific part, we should `nil` this error\n                // and proceed forward, instead of throwing errors.\n                err = nil\n            }\n        }\n        if err != nil {\n            return toObjectErr(err, bucket, object)\n        }\n    }\n// ...\n}\n</code></pre>"},{"location":"blog/2025/07/28/minio-heal/#mrf","title":"MRF \u5de5\u4f5c\u6d41\u7a0b","text":"<p>MRF \u7684\u529f\u80fd\u8f83\u4e3a\u660e\u786e\uff0c\u5373\u8c03\u7528 Heal \u6838\u5fc3 API\uff0c\u5904\u7406\u5206\u7247\u6570\u636e\u4e0d\u5b8c\u6574\u7684\u60c5\u51b5\u3002\u5728\u670d\u52a1\u542f\u52a8\u65f6\uff0cMRF \u4f1a\u521b\u5efa\u4e00\u4e2a goroutine\uff0c\u6765\u76d1\u542c Op channel\uff0c\u5c06 Op channel \u4f20\u5165\u7684\u8bf7\u6c42\u8f6c\u6362\u4e3a <code>healtask</code> \u653e\u5230 bgSeq \u4e2d\u4ea4\u7531 <code>healRoutine</code> \u5904\u7406\u3002</p> <pre><code>// healObject sends the given object/version to the background healing workers\nfunc healObject(bucket, object, versionID string, scan madmin.HealScanMode) error {\n    // Get background heal sequence to send elements to heal\n    bgSeq, ok := globalBackgroundHealState.getHealSequenceByToken(bgHealingUUID)\n    if ok {\n        return bgSeq.healObject(bucket, object, versionID, scan)\n    }\n    return nil\n}\n</code></pre> <p>\u6b64\u5916\uff0cMRF\u7684\u72b6\u6001\u5728\u670d\u52a1\u505c\u6b62\u65f6\u4f1a\u6301\u4e45\u5316\u5230\u78c1\u76d8\u4e0a\uff0c\u5bf9\u5e94 .minio.sys/buckets/.heal/mrf/list.bin \u6587\u4ef6\uff0c\u8bb0\u5f55\u5c1a\u672a\u5b8c\u6210\u7684 PartialOp\uff0c\u5728\u670d\u52a1\u542f\u52a8\u65f6\u4f1a\u52a0\u8f7d\u8be5\u6587\u4ef6\uff0c\u6062\u590d\u4e2d\u65ad\u7684\u4efb\u52a1\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#scanner_1","title":"Scanner\u4fee\u590d","text":"<p>MinIO \u4e2d\u7684 data-scanner \u6a21\u5757\u4e3b\u8981\u4f5c\u7528\u662f\u7528\u6765\u641c\u96c6 Object \u76f8\u5173\u6307\u6807\uff0c\u4f8b\u5982 Bucket \u7528\u91cf\u3001Object \u6570\u91cf\u7b49\u3002\u53e6\u5916\uff0c\u5728\u8bbe\u8ba1\u4e0a\u4e5f\u7528\u4e8e\u6062\u590d\u6570\u636e\uff0c\u8be5\u6062\u590d\u7684\u89e6\u53d1\u662f\u5468\u671f\u6027\u7684\uff081/1024\uff09\uff0c\u4e14\u4e0d\u4f1a\u5904\u7406 bitrot\u3002</p> <pre><code>// cmd/data-scanner.go\nfunc (f *folderScanner) scanFolder(ctx context.Context, folder cachedFolder, into *dataUsageEntry) error {\n    // ...\n    item.heal.enabled = thisHash.modAlt(f.oldCache.Info.NextCycle/folder.objectHealProbDiv, f.healObjectSelect/folder.objectHealProbDiv) &amp;&amp; f.shouldHeal()\n    item.heal.bitrot = f.scanMode == madmin.HealDeepScan\n    // ...\n}\n</code></pre> <p>\u7531\u4e8e <code>shouldHeal()</code> \u65b9\u6cd5\u5b58\u5728 bug\uff0c\u5bfc\u81f4\u603b\u662f\u8fd4\u56de false\uff0c\u56e0\u6b64\u76ee\u524d\u7684\u7248\u672c scan \u8fc7\u7a0b\u4e2d\u4e0d\u4f1a\u89e6\u53d1\u6570\u636e\u4fee\u590d\u3002</p> <p>\u5728 enabled \u88ab\u7f6e\u4e3a true \u4e4b\u540e\uff0c\u540e\u7eed\u626b\u63cf\u5230\u8be5 Object \u65f6\uff0c\u4f1a\u5bf9\u8be5 Object \u8c03\u7528 HealObject \u5c1d\u8bd5\u8fdb\u884c\u6570\u636e\u6062\u590d\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#admin","title":"Admin \u8bf7\u6c42\u624b\u52a8\u4fee\u590d","text":"<p>MinIO \u63d0\u4f9b Admin API\uff0c\u8fdb\u884c\u624b\u52a8\u89e6\u53d1\u6570\u636e\u6062\u590d\u3002</p> <p></p> <p>\u5b9e\u73b0\u4e3a\u5c06 Heal \u8bf7\u6c42\u7ec4\u7ec7\u6210\u4e00\u4e2a Seq\uff0c\u653e\u5165\u5168\u5c40\u7684 <code>globalAllHealState</code> \u7684 healSeqMap \u4e2d\uff0c\u7531\u540e\u53f0 worker \u53bb\u6267\u884c\u6570\u636e\u6062\u590d\u4efb\u52a1\u3002 \u6b64\u5916\uff0c\u5728 API Handler \u5185\uff0c\u4f1a\u5bf9\u8bf7\u6c42 heal \u7684 Path \u8fdb\u884c\u6821\u9a8c\uff0c\u5982\u679c\u5f53\u524d\u961f\u5217\u4e2d\u5df2\u7ecf\u6709\u540c\u540d\u7684 Seq\uff0c\u5219\u8fd4\u56de\u5f53\u524d Seq \u7684\u72b6\u6001\uff0c\u4e0d\u4f1a\u91cd\u590d\u6dfb\u52a0\u4efb\u52a1\u3002 \u6062\u590d\u4efb\u52a1\u7684\u6267\u884c</p> <p>\u5728\u521b\u5efa\u4e00\u4e2a Seq \u4e4b\u540e\uff0c\u4f1a\u5c06 Seq \u653e\u5165 <code>globalAllHealState</code> \u7684\u5168\u5c40\u8868\u4e2d\uff0c\u5e76\u540c\u65f6\u542f\u52a8\u4e00\u4e2a\u540e\u53f0 routine\uff0c\u8be5 routine \u6267\u884c\u904d\u5386\u64cd\u4f5c\uff0c\u5bf9\u7ed9\u5b9a\u7684 path \u8fdb\u884c\u904d\u5386\uff0c\u83b7\u53d6\u6240\u6709\u7684 bucket\uff0c\u5c06 bucket \u6062\u590d\u4efb\u52a1\u4ea4\u7531 <code>globalBackgroundHealRoutine</code> \u5904\u7406\uff1b\u540c\u65f6\u66f4\u65b0 Seq \u4e2d\u7684\u4fee\u590d\u72b6\u6001\u3002</p>"},{"location":"blog/2025/07/28/minio-heal/#_9","title":"\u9a8c\u8bc1","text":""},{"location":"blog/2025/07/28/minio-heal/#object","title":"\u8bfb\u53d6\u5206\u7247\u7f3a\u5931\u7684 Object","text":"<p>\u901a\u8fc7 S3API\uff0c\u5206\u7247\u4e0a\u4f20 1GB \u7684\u6587\u4ef6\uff0c\u5206\u7247\u5927\u5c0f\u6307\u5b9a\u4e3a 64MB\u3002</p> <p></p> <p>\u67e5\u770b xl.meta \u6570\u636e\uff0c\u786e\u5b9a\u5176\u6570\u636e\u5206\u7247\u4e0e\u6821\u9a8c\u7801\u5206\u7247\u5206\u5e03\uff1a</p> <pre><code>{\n  \"Versions\": [\n    {\n      \"Metadata\": {\n         ...\n        \"Type\": 1,\n        \"V2Obj\": {\n          \"CSumAlgo\": 1,\n          \"DDir\": \"jTuTge1vSGWY5WTxb39pQw==\",\n          \"EcAlgo\": 1,\n          \"EcBSize\": 1048576,\n          \"EcDist\": [\n            2,\n            3,\n            1\n          ],\n          \"EcIndex\": 2,\n          \"EcM\": 2,\n          \"EcN\": 1,\n          \"ID\": \"AAAAAAAAAAAAAAAAAAAAAA==\",\n          \"MTime\": 1748331420006011629\n          ...\n      }\n    }\n  ]\n}\n</code></pre> <p>\u53ef\u89c1\u5176\u6570\u636e\u5206\u7247\u5728 3,1 \u53f7\u8282\u70b9\u4e0a\uff0c\u6821\u9a8c\u5206\u7247\u5728 2 \u53f7\u8282\u70b9\u4e0a\u3002</p> <ul> <li> <p>\u5220\u9664 3 \u53f7\u8282\u70b9\u90e8\u5206\u6570\u636e\uff0c\u9a8c\u8bc1\u6570\u636e\u5206\u7247\u635f\u574f\uff0cGET \u8bf7\u6c42\u4f1a\u4fee\u590d\u6570\u636e\u3002   \u5220\u9664\u90e8\u5206 part:      \u901a\u8fc7 S3API \u89e6\u53d1 GET \u8bf7\u6c42\uff0c\u8bfb\u53d6\u6210\u529f\u3002\u67e5\u770b\u76ee\u6807\u8282\u70b9\u4e0a\u5206\u7247\u6570\u636e\uff0c\u5df2\u6062\u590d\uff1a   </p> </li> <li> <p>\u5220\u9664 2 \u53f7\u8282\u70b9\u90e8\u5206\u6570\u636e\uff0c\u9a8c\u8bc1\u6821\u9a8c\u5206\u7247\u635f\u574f\uff0c\u4e0d\u4f1a\u8fdb\u884c\u4fee\u590d\u3002   \u5220\u9664\u90e8\u5206 part:      \u901a\u8fc7 S3API \u89e6\u53d1 GET \u8bf7\u6c42\uff0c\u8bfb\u53d6\u6210\u529f\u3002\u67e5\u770b\u76ee\u6807\u8282\u70b9\u4e0a\u5206\u7247\u6570\u636e\uff0c\u672a\u6062\u590d\uff1a   </p> </li> </ul>"},{"location":"blog/2025/07/28/minio-heal/#_10","title":"\u9a8c\u8bc1\u624b\u52a8\u6062\u590d","text":"<p>\u5bf9\u4e0a\u8ff0\u6821\u9a8c\u5206\u7247\u7f3a\u5931\u7684 Bucket \u624b\u52a8\u6267\u884c heal \u64cd\u4f5c\uff1a</p> <p></p> <p>\u67e5\u770b\u76ee\u6807\u8282\u70b9\u4e0a\u5206\u7247\u6570\u636e\uff0c\u5df2\u6062\u590d\uff1a</p> <p></p>"},{"location":"blog/2025/07/29/minio-ilm/","title":"MinIO \u7b14\u8bb0\uff088\uff09\uff1a\u5bf9\u8c61\u751f\u547d\u5468\u671f\u7ba1\u7406","text":""},{"location":"blog/2025/07/29/minio-ilm/#_1","title":"\u6982\u5ff5","text":"<p>MinIO \u4e2d\u7684\u751f\u547d\u5468\u671f\u7ba1\u7406\uff08ILM\uff09\u7684\u884c\u4e3a\u548c\u8bed\u6cd5\u90fd\u7ee7\u627f\u81ea AWS S3 \u3002ILM \u89c4\u5219\u5728 MinIO \u7684 Bucket \u5c42\u7ea7\u4e0a\u521b\u5efa\uff0c\u521b\u5efa\u7684\u89c4\u5219\u5c06\u5e94\u7528\u4e8e\u8be5 Bucket \u4e2d\u7684\u73b0\u6709\u548c\u65b0\u589e\u7684 Object\u3002ILM \u89c4\u5219\u5305\u62ec\u5bf9\u8c61\u8f6c\u6362\u548c\u5bf9\u8c61\u8fc7\u671f\u4e24\u7c7b\uff0cMinIO \u53ef\u4ee5\u57fa\u4e8e\u65f6\u95f4\u81ea\u52a8\u8f6c\u6362\u6216\u8fc7\u671f\u5220\u9664\u5bf9\u8c61\u3002</p> <ul> <li>\u5bf9\u8c61\u8f6c\u6362\uff1a\u901a\u8fc7\u5bf9\u8c61\u8f6c\u6362\u89c4\u5219\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8c61\u7684\u51b7\u5b58\u50a8\u8f6c\u79fb\uff0c\u4f8b\u5982\u5728\u5bf9\u8c61 30 \u5929\u540e\uff0c\u5c06\u5bf9\u8c61\u4ece\u6807\u51c6\u5b58\u50a8\u8f6c\u6362\u4e3a\u51b7\u5b58\u50a8\uff0c\u4ee5\u5b9e\u73b0\u6210\u672c\u63a7\u5236\u3002\u8f6c\u6362\u4e4b\u540e\u7684 Object \u5728\u672c\u5730\u53ea\u4f1a\u4fdd\u7559\u5143\u6570\u636e\uff0c\u53ef\u4ee5\u901a\u8fc7 <code>RestoreObject</code> \u6062\u590d\u672c\u5730\u6570\u636e\uff0c\u6062\u590d\u7684\u6570\u636e\u4f1a\u5728 <code>RestoreExpire</code> \u65f6\u95f4\u540e\u8fc7\u671f\u5220\u9664\u3002</li> <li>\u5bf9\u8c61\u8fc7\u671f\uff1a\u901a\u8fc7\u5bf9\u8c61\u8fc7\u671f\u89c4\u5219\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5bf9\u8c61\u7684\u81ea\u52a8\u5220\u9664\uff0c\u4f8b\u5982\u5728\u5bf9\u8c61 365 \u5929\u540e\uff0c\u5c06\u5bf9\u8c61\u5220\u9664\u3002</li> </ul>"},{"location":"blog/2025/07/29/minio-ilm/#minio-ilm","title":"MinIO \u4e2d\u7684 ILM \u89c4\u5219\u53ca\u5b9e\u73b0","text":""},{"location":"blog/2025/07/29/minio-ilm/#ilm","title":"ILM \u89c4\u5219","text":"<p>MinIO \u4e2d\u5173\u4e8e ILM \u89c4\u5219\u7684\u8bed\u6cd5\u4e0e AWS S3 \u76f8\u540c\uff0c\u5177\u4f53\u53ef\u4ee5\u53c2\u8003 AWS S3 \u6587\u6863 \u3002</p> <p>\u4e00\u4e2a\u89c4\u5219\u4e3b\u8981\u5305\u62ec\uff1a</p> <ul> <li>\u89c4\u5219\u5143\u6570\u636e\uff1aID\u3001\u542f\u7528\u8fd8\u662f\u7981\u7528</li> <li>Filter\uff1a\u5bf9\u4f5c\u7528\u5bf9\u8c61\u7684\u7b5b\u9009\uff0c\u57fa\u4e8e\u5bf9\u8c61\u540d\u524d\u7f00\u3001\u5bf9\u8c61\u5927\u5c0f\u3001\u6807\u7b7e\u3001Tag \u7b49\u3002</li> <li>Expiration\uff1a\u8fc7\u671f\u89c4\u5219\uff0c\u9488\u5bf9\u53d7\u7248\u672c\u63a7\u5236\u7684 Bucket\uff0c\u8fc7\u671f\u89c4\u5219\u53ea\u4f5c\u7528\u5728\u5bf9\u8c61\u7684\u5f53\u524d\u7248\u672c\u3002</li> <li>Transition\uff1a\u8f6c\u6362\u89c4\u5219\uff0c\u9488\u5bf9\u53d7\u7248\u672c\u63a7\u5236\u7684 Bucket\uff0c\u8f6c\u6362\u89c4\u5219\u53ea\u4f5c\u7528\u5728\u5bf9\u8c61\u7684\u5f53\u524d\u7248\u672c\u3002</li> <li>DelMarkerExpiration\uff1a\u9488\u5bf9\u53d7\u7248\u672c\u63a7\u5236\u7684 Bucket\uff0c\u5220\u9664\u6709 DeleteMarker \u7684 Object \u6240\u6709\u7248\u672c\u3002</li> <li>NoncurrentVersionTransition\uff1a\u9488\u5bf9\u53d7\u7248\u672c\u63a7\u5236\u7684 Bucket\uff0c\u57fa\u4e8e\u5bf9\u8c61\u53d8\u4e3a\u975e\u5f53\u524d\u7248\u672c\u4e4b\u540e\u7684\u65f6\u95f4\u8fd0\u7528\u8f6c\u6362\u89c4\u5219\u3002</li> <li>NoncurrentVersionExpiration\uff1a\u9488\u5bf9\u53d7\u7248\u672c\u63a7\u5236\u7684 Bucket\uff0c\u57fa\u4e8e\u5bf9\u8c61\u53d8\u4e3a\u975e\u5f53\u524d\u7248\u672c\u4e4b\u540e\u7684\u65f6\u95f4\u8fd0\u7528\u8fc7\u671f\u89c4\u5219\u3002</li> </ul> <p>\u5bf9\u4e8e\u53d7\u7248\u672c\u63a7\u5236\u7684 Bucket\uff1a</p> <ul> <li>\u8fc7\u671f\u64cd\u4f5c\u53ea\u4f1a\u4f5c\u7528\u5728\u5bf9\u8c61\u7684\u5f53\u524d\u7248\u672c\u3002</li> <li>\u5982\u679c\u5b58\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u7248\u672c\u5e76\u4e14\u5f53\u524d\u7248\u672c\u662f DeleteMarker\uff0c\u4e0d\u4f1a\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002</li> <li>\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u5bf9\u8c61\u7248\u672c\uff0c\u4e14\u8be5\u7248\u672c\u662f DeleteMarker\uff0c\u8fc7\u671f\u64cd\u4f5c\u4f1a\u5220\u9664\u8be5\u5bf9\u8c61\u3002</li> <li>\u5982\u679c\u8bbe\u7f6e\u4e86 DelMarkerExpiration \u89c4\u5219\uff0c\u5219\u4f1a\u5728\u5bf9\u8c61\u7684 DeleteMarker \u7248\u672c\u8fc7\u671f\u540e\uff0c\u5220\u9664\u8be5\u5bf9\u8c61\u7684\u6240\u6709\u7248\u672c\u3002</li> </ul>"},{"location":"blog/2025/07/29/minio-ilm/#ilm_1","title":"ILM \u5b9e\u73b0","text":"<p>MinIO \u4e2d ILM \u7684\u4f5c\u7528\u65f6\u673a\u53d6\u51b3\u4e8e Scanner \u626b\u63cf\u5230\u8be5 Object \u7684\u65f6\u673a\uff0c\u5728 16 \u6b21\u626b\u63cf\u7684\u8303\u56f4\u5185\uff0cMinIO \u4f1a\u68c0\u67e5\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u6bcf\u4e2a\u5bf9\u8c61\uff0c\u68c0\u67e5\u4f5c\u7528\u5728 Object \u4e0a\u7684\u751f\u547d\u5468\u671f\u89c4\u5219\u662f\u5426\u751f\u6548\u3002\u5b9e\u73b0\u4e0a\uff0c\u901a\u8fc7\u5bf9\u626b\u63cf\u7684 Obejct \u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff1a <pre><code>func (i *scannerItem) applyActions(ctx context.Context, objAPI ObjectLayer, objInfos []ObjectInfo, lr lock.Retention, sizeS *sizeSummary, fn actionsAccountingFn) \n</code></pre> <code>objInfos</code> \u662f\u4e00\u4e2a Object \u7684\u6240\u6709\u7248\u672c\u7684\u5143\u6570\u636e\u5217\u8868\uff0c\u56de\u8c03\u5185\u90e8\u5b9e\u73b0\u4e86\u5bf9\u5bf9\u8c61\u751f\u547d\u5468\u671f\u89c4\u5219\u7684\u68c0\u67e5\uff0c\u5982\u679c\u547d\u4e2d\uff0c\u5219\u6267\u884c\u5bf9\u5e94\u7684\u52a8\u4f5c\u3002Action \u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\uff1a <pre><code>const (\n    // NoneAction means no action required after evaluating lifecycle rules\n    NoneAction Action = iota\n    // DeleteAction means the object needs to be removed after evaluating lifecycle rules\n    DeleteAction\n    // DeleteVersionAction deletes a particular version\n    DeleteVersionAction\n    // TransitionAction transitions a particular object after evaluating lifecycle transition rules\n    TransitionAction\n    // TransitionVersionAction transitions a particular object version after evaluating lifecycle transition rules\n    TransitionVersionAction\n    // DeleteRestoredAction means the temporarily restored object needs to be removed after evaluating lifecycle rules\n    DeleteRestoredAction\n    // DeleteRestoredVersionAction deletes a particular version that was temporarily restored\n    DeleteRestoredVersionAction\n    // DeleteAllVersionsAction deletes all versions when an object expires\n    DeleteAllVersionsAction\n    // DelMarkerDeleteAllVersionsAction deletes all versions when an object with delete marker as latest version expires\n    DelMarkerDeleteAllVersionsAction\n    // ActionCount must be the last action and shouldn't be used as a regular action.\n    ActionCount\n)\n</code></pre> \u6574\u4f53\u7684\u5339\u914d\u6d41\u7a0b\u4e3a\uff1a</p> <ul> <li>\u5f53\u524d Object \u662f\u4ece\u8fdc\u7aef\u53d6\u56de\u7684\u7684\uff0c\u4e14\u4ee5\u8fc7\u53bb\uff0c\u6dfb\u52a0 DeleteRestoredVersionAction \u4e8b\u4ef6\u3002</li> <li>\u904d\u5386\u901a\u8fc7 Filter \u7b5b\u9009\u7684\u89c4\u5219\uff0c\u68c0\u67e5\u662f\u5426\u547d\u4e2d\u3002</li> <li>\u9488\u5bf9\u53ea\u6709\u4e00\u4e2a Version \u4e14\u4e3a DeleteMarker \u7684\u5bf9\u8c61\uff0c\u5982\u679c\u5230\u4e86\u8fc7\u671f\u65f6\u95f4\uff0c\u6dfb\u52a0 DeleteVersionAction \u4e8b\u4ef6\uff0c\u5e76\u76f4\u63a5\u8df3\u51fa\uff0c\u56e0\u4e3a\u4e0d\u4f1a\u6709\u5176\u4ed6\u51b2\u7a81\u7684\u4e8b\u4ef6\u4e86\u3002</li> <li>\u5982\u679c\u662f Object \u7684\u5f53\u524d\u7248\u672c\u4e14\u662f DeleteMarker\uff0c\u4e14\u8bbe\u7f6e\u4e86 DelMarkerExpiration\uff0c\u8ba1\u7b97\u4e0b\u6b21\u8fc7\u671f\u65f6\u95f4\uff0c\u6dfb\u52a0 DeleteVersionAction \u4e8b\u4ef6\u3002</li> <li>\u9488\u5bf9\u975e\u5f53\u524d\u7248\u672c Object \u7684 ILM \u89c4\u5219\u5e94\u7528\uff0c\u6dfb\u52a0 DeleteVersionAction \u6216 TransitionVersionAction \u4e8b\u4ef6\u3002</li> <li>\u9488\u5bf9\u5f53\u524d\u7248\u672c Object \u7684 ILM \u89c4\u5219\u5e94\u7528\uff0c\u6dfb\u52a0 DeleteAction \u6216 TransitionAction \u4e8b\u4ef6\u3002</li> <li>\u5bf9\u6240\u6709\u4e8b\u4ef6\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u4f18\u5148\u7ea7\u6700\u9ad8\u7684\u4e8b\u4ef6\u3002</li> </ul> <p>\u6392\u5e8f\u7684\u4f9d\u636e\u662f\uff1a <pre><code>slices.SortFunc(events, func(a, b Event) int {\n  // Prefer Expiration over Transition for both current\n  // and noncurrent versions when,\n  // - now is past the expected time to action\n  // - expected time to action is the same for both actions\n  if now.After(a.Due) &amp;&amp; now.After(b.Due) || a.Due.Equal(b.Due) {\n    switch a.Action {\n    case DeleteAllVersionsAction, DelMarkerDeleteAllVersionsAction,\n      DeleteAction, DeleteVersionAction:\n      return -1\n    }\n    switch b.Action {\n    case DeleteAllVersionsAction, DelMarkerDeleteAllVersionsAction,\n      DeleteAction, DeleteVersionAction:\n      return 1\n    }\n    return -1\n  }\n\n  // Prefer earlier occurring event\n  if a.Due.Before(b.Due) {\n    return -1\n  }\n  return 1\n})\n</code></pre></p>"},{"location":"blog/2025/07/29/minio-ilm/#_2","title":"\u5bf9\u8c61\u8f6c\u6362","text":"<p>\u5bf9\u8c61\u8f6c\u6362\u7684\u8fc7\u7a0b\u662f\u5f02\u6b65\u6267\u884c\u7684\uff0cMinIO \u7ef4\u62a4\u4e00\u4e2a\u8f6c\u6362\u961f\u5217\uff0c\u547d\u4e2d\u8f6c\u5316\u89c4\u5219\u7684\u5bf9\u8c61\u4f1a\u88ab\u52a0\u5165\u961f\u5217\uff0c\u961f\u5217\u4e2d\u7684\u5bf9\u8c61\u4f1a\u5728\u540e\u53f0\u4efb\u52a1\uff08worker \u7684\u6570\u91cf\u53ef\u4ee5\u901a\u8fc7 <code>ilm transition_workers</code> \u914d\u7f6e\u9879\u6216 <code>MINIO_ILM_TRANSITION_WORKERS</code> \u73af\u5883\u53d8\u91cf\u6307\u5b9a\uff0c\u9ed8\u8ba4 100\uff09\u4e2d\u6267\u884c\u8f6c\u6362\u64cd\u4f5c\u3002</p> <p>\u540e\u53f0 worker \u7684\u901a\u8fc7 <code>TransitionObject</code> \u65b9\u6cd5\u6267\u884c\u8f6c\u6362\u64cd\u4f5c\uff0c\u8f6c\u6362\u64cd\u4f5c\u7684\u8fc7\u7a0b\u662f\uff1a <pre><code>flowchart TD\n    A[\u5f00\u59cb] --&gt; B[\u83b7\u53d6\u8f6c\u6362\u8fdc\u7aef\u5b58\u50a8\u7684 Client];\n    B --&gt; C[\u5bf9\u8f6c\u6362\u5bf9\u8c61\u52a0\u9501];\n    C --&gt; D[\u83b7\u53d6\u6700\u65b0\u7248\u672c\u5bf9\u8c61\u5143\u6570\u636e];\n    D --&gt; E{\u662f\u5426\u5df2\u5220\u9664};\n    E -- \u5426 --&gt; F{\u5bf9\u8c61\u662f\u5426\u5df2\u5b8c\u6210\u8f6c\u6362?};\n    E -- \u662f --&gt; Z[\u8fd4\u56de\u9519\u8bef];\n    F -- \u662f --&gt; Y[\u8fd4\u56de\u6210\u529f];\n    F -- \u5426 --&gt; G{\u662f\u5426\u4e3a XLV1 \u683c\u5f0f?};\n    G -- \u662f --&gt; H[\u6267\u884c\u4fee\u590d];\n    H --&gt; I[\u91cd\u65b0\u83b7\u53d6\u5bf9\u8c61\u4fe1\u606f];\n    G -- \u5426 --&gt; J[\u751f\u6210\u8fdc\u7a0b\u5bf9\u8c61\u540d\u79f0];\n    I --&gt; J;\n    J --&gt; L{\u5199\u5165 Object \u5230\u8fdc\u7a0b\u5b58\u50a8};\n    L -- \u6210\u529f --&gt; N[\u66f4\u65b0\u672c\u5730 Object \u7684\u8f6c\u6362\u72b6\u6001];\n    L -- \u5931\u8d25 --&gt; Z;\n    N --&gt; O[\u5220\u9664\u672c\u5730\u5bf9\u8c61];\n    O --&gt; Q[\u6dfb\u52a0\u5220\u9664\u4fee\u590d\u4efb\u52a1\uff0c\u786e\u4fdd\u6240\u6709 disk \u90fd\u5220\u9664];\n    Q --&gt; R[\u53d1\u9001\u4e8b\u4ef6];\n    R --&gt; S[\u8bb0\u5f55\u5ba1\u8ba1\u65e5\u5fd7];\n    S --&gt; Y;\n\n    subgraph Error Handling\n        Z;\n    end\n\n    subgraph Success Path\n        Y;\n    end </code></pre> \u8f6c\u6362\u72b6\u6001\u5728 Object \u7684\u5143\u6570\u636e\u4e2d <code>TransitionStatus</code> \u5b57\u6bb5\u8868\u793a\uff0c\u53d6\u503c\uff1a</p> <ul> <li>TransitionComplete(complete)\uff1a\u5bf9\u8c61\u5df2\u5b8c\u6210\u8f6c\u6362</li> <li>TransitionPending(pending)\uff1a\u5bf9\u8c61\u6b63\u5728\u8f6c\u6362\u4e2d</li> </ul>"},{"location":"blog/2025/07/29/minio-ilm/#_3","title":"\u5bf9\u8c61\u8fc7\u671f","text":"<p>\u5bf9\u8c61\u8fc7\u671f\u7684\u5904\u7406\u6d41\u7a0b\u4e0e\u5bf9\u8c61\u8f6c\u6362\u7c7b\u4f3c\uff0c\u90fd\u662f\u5411\u4e00\u4e2a\u4efb\u52a1\u961f\u5217\u4e2d\u6dfb\u52a0\u4efb\u52a1\uff0c\u540e\u53f0 worker \u6267\u884c\u5bf9\u5e94\u7684\u4efb\u52a1\u3002\u8fc7\u671f\u7684\u5bf9\u8c61\u53ef\u80fd\u6709\u5982\u4e0b\u60c5\u51b5\uff1a</p> <ul> <li>\u666e\u901a\u5bf9\u8c61</li> <li>\u975e\u7248\u672c\u63a7\u5236\u5bf9\u8c61\uff1a\u76f4\u63a5\u5220\u9664</li> <li>\u7248\u672c\u63a7\u5236\u5bf9\u8c61\uff1a\u5220\u9664\u5f53\u524d\u7248\u672c</li> <li>\u5df2\u8f6c\u6362\u7684\u5bf9\u8c61\uff1a\u9700\u8981\u5220\u9664\u8fdc\u7aef\u5b58\u50a8</li> <li>\u5df2\u8f6c\u6362\u7684\u5bf9\u8c61\u4e14\u672c\u5730\u6267\u884c\u4e86 Restore\uff1a\u672c\u5730\u548c\u8fdc\u7aef\u90fd\u8981\u5220\u9664</li> <li>\u53d7\u7248\u672c\u63a7\u5236\u7684\u975e\u5f53\u524d\u7248\u672c\u5bf9\u8c61</li> </ul>"},{"location":"blog/2025/07/29/minio-ilm/#ilm_2","title":"\u7ba1\u7406 ILM \u89c4\u5219","text":"<p>\u53ef\u4ee5\u901a\u8fc7 MinIO \u7684 mc \u5de5\u5177\u6765\u521b\u5efa\u548c\u7ba1\u7406 ILM \u89c4\u5219\u3002</p> <p>\u6dfb\u52a0\u4e00\u4e2a\u8fdc\u7aef\u5b58\u50a8\u5c42\uff1a <pre><code> mc ilm tier add minio myminio WARM-MINIO-TIER                     \\\n                               --endpoint https://warm-minio.com   \\\n                               --access-key ACCESSKEY              \\\n                               --secret-key SECRETKEY              \\\n                               --bucket mybucket                   \\\n                               --prefix myprefix/\n</code></pre> \u67e5\u770b\u8fdc\u7aef\u5b58\u50a8\u5c42\uff1a <pre><code>mc ilm tier ls minio\n\n mc ilm tier info myminio WARM-TIER\n</code></pre> \u79fb\u9664\u8fdc\u7aef\u5b58\u50a8\u5c42\uff1a <pre><code>mc ilm tier rm minio myminio WARM-TIER\n</code></pre></p> <p>\u6dfb\u52a0\u4e00\u4e2a\u751f\u547d\u5468\u671f\u89c4\u5219\uff1a <pre><code>mc [GLOBALFLAGS] ilm rule add                               \\\n                 [--prefix string]                          \\\n                 [--tags string]                            \\\n                 [--expire-days \"integer\"]                  \\\n                 [--expire-all-object-versions]             \\\n                 [--expire-delete-marker]                   \\\n                 [--transition-days \"string\"]               \\\n                 [--transition-tier \"string\"]               \\\n                 [--noncurrent-expire-days \"integer\"]       \\\n                 [--noncurrent-expire-newer \"integer\"]      \\\n                 [--noncurrent-transition-days \"integer\"]   \\\n                 [--noncurrent-transition-tier \"string\"]    \\\n                 [--site-gt \"string\"]                       \\\n                 [--size-lt \"string\"]                       \\\n                 ALIAS\n</code></pre> \u4f8b\u5982\uff0c\u6dfb\u52a0\u4e00\u4e2a\u57fa\u4e8e\u65f6\u95f4\u7684\u5bf9\u8c61\u8f6c\u6362\u89c4\u5219\uff0c\u8be5\u89c4\u5219\u5c06\u6ee1 90 \u5929\u7684\u5f53\u524d\u7248\u672c\u8f6c\u6362\u4e3a <code>MINIOTIER-1</code> \u5b58\u50a8\u5c42\uff0c\u4e14\u5c06 45 \u5929\u524d\u7684\u975e\u5f53\u524d\u7248\u672c\u8f6c\u6362\u4e3a <code>MINIOTIER-2</code> \u5b58\u50a8\u5c42\uff1a <pre><code>mc ilm rule add --prefix \"doc/\" --transition-days \"90\" --transition-tier \"MINIOTIER-1\"  \\\n       --noncurrent-transition-days \"45\" --noncurrent-transition-tier \"MINIOTIER-2\"    \\\n       myminio/mybucket\n</code></pre></p> <p>\u7f16\u8f91 ILM \u89c4\u5219\uff1a <pre><code>mc [GLOBALFLAGS] ilm rule edit                                       \\\n                 --id \"string\"                                       \\\n                 [--prefix \"string\"]                                 \\\n                 [--enable]                                          \\\n                 [--disable]                                         \\\n                 [--expire-all-object-versions]                      \\\n                 [--expire-days \"string\"]                            \\\n                 [--expire-delete-marker]                            \\\n                 [--transition-days \"string\"]                        \\\n                 [--transition-tier \"string\"]                        \\\n                 [--noncurrent-expire-days \"string\"]                 \\\n                 [--noncurrent-expire-newer \"string\"]                \\\n                 [--noncurrent-transition-days \"string\"]             \\\n                 [--noncurrent-transition-tier \"string\"]             \\\n                 [--tags]                                            \\\n                 ALIAS\n</code></pre></p>"},{"location":"blog/2025/07/23/minio-local-files/","title":"MinIO \u7b14\u8bb0\uff082\uff09: \u672c\u5730\u6587\u4ef6\u7ec4\u7ec7","text":"<p>\u6839\u636e MinIO \u6587\u6863\uff0cMinIO \u5bf9\u5b58\u50a8\u7684\u8981\u6c42\u5982\u4e0b\uff1a</p> <ul> <li>\u4f7f\u7528\u672c\u5730\u5b58\u50a8\u800c\u4e0d\u662f NAS \u7b49\u7f51\u7edc\u5b58\u50a8\u3002</li> <li>\u4f7f\u7528 XFS \u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\u5316\u78c1\u76d8\u3002MinIO \u5728\u5f00\u53d1\u548c\u6d4b\u8bd5\u65f6\u4f7f\u7528\u7684\u662f XFS\uff0c\u56e0\u6b64\u4f7f\u7528 XFS \u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u66f4\u597d\u7684\u4fdd\u8bc1\u53ef\u7528\u6027\u3002</li> <li>\u91cd\u542f\u4e4b\u540e\u4fdd\u8bc1\u78c1\u76d8\u7684\u6302\u8f7d\u548c\u6620\u5c04\u4e00\u81f4\u3002</li> </ul> <p>MinIO \u91c7\u7528\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7ec4\u7ec7\u6570\u636e\uff0c\u5e76\u4e14\u63a8\u8350\u4f7f\u7528 XFS \u6587\u4ef6\u7cfb\u7edf\u3002MinIO \u8981\u6c42\u72ec\u5360\u5355\u4e2a\u9a71\u52a8\u6216\u5b58\u50a8\u5377\uff0c\u5176\u4ed6\u8fdb\u7a0b\u4e0d\u5e94\u8be5\u8bbf\u95ee\u8be5\u5377\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u6570\u636e\u88ab\u635f\u574f\u3002</p>"},{"location":"blog/2025/07/23/minio-local-files/#object","title":"Object \u7ba1\u7406","text":"<p>MinIO \u4f5c\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u5b58\u50a8\u7cfb\u7edf\uff0c\u4f7f\u7528\u6241\u5e73\u5316\u7684 Bucket \u6765\u7ec4\u7ec7 Object \u6570\u636e\u3002\u4e00\u4e2a Bucket \u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u8868\u73b0\u4e3a\u4f4d\u4e8e\u9876\u5c42\u76ee\u5f55\u7684\u4e00\u4e2a\u5b50\u76ee\u5f55\uff0cBucket \u4e0b\u53ef\u4ee5\u627f\u8f7d\u4efb\u610f\u6570\u91cf\u7684 Object\u3002</p> <p>\u4f8b\u5982\uff0c\u4e00\u4e2a MinIO \u7684\u5b58\u50a8\u9a71\u52a8\u4e0b\u53ef\u80fd\u6709\u5982\u4e0b\u7ed3\u6784\u7684\u6587\u4ef6\u7cfb\u7edf\uff1a <pre><code>/ #root\n/images/\n   2020-01-02-MinIO-Diagram.png\n   2020-01-03-MinIO-Advanced-Deployment.png\n   MinIO-Logo.png\n/videos/\n   2020-01-04-MinIO-Interview.mp4\n/articles/\n   /john.doe/\n      2020-01-02-MinIO-Object-Storage.md\n      2020-01-02-MinIO-Object-Storage-comments.json\n   /jane.doe/\n      2020-01-03-MinIO-Advanced-Deployment.png\n      2020-01-02-MinIO-Advanced-Deployment-comments.json\n      2020-01-04-MinIO-Interview.md\n</code></pre></p> <p>\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\uff0c<code>/images/</code>\u3001<code>/videos/</code>\u548c<code>/articles/</code>\u90fd\u662f Bucket\uff0c\u800c Bucket \u4e0b\u7684\u6587\u4ef6\u5219\u662f Object \u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u7ecf\u8fc7\u4e86 MinIO \u7684\u7f16\u7801\u3002\u6b64\u5916\uff0c\u4e0a\u8ff0\u7ed3\u6784\u6709\u53e6\u4e00\u4e2a\u7279\u70b9\uff0c\u6211\u4eec\u77e5\u9053\u5bf9\u8c61\u5b58\u50a8\u7684 Object \u672c\u6ca1\u6709\u76ee\u5f55\u5c42\u7ea7\u7684\u6982\u5ff5\uff0c\u800c\u662f\u6241\u5e73\u5316\u7684\u5b58\u5728\u4e8e Bucket \u4e2d\uff0c\u901a\u8fc7 ObjectName \u533a\u5206\uff0c\u4f46\u4e0a\u8ff0\u6709\u4e9b Object \u5b58\u5728\u7c7b\u4f3c\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u5c42\u7ea7\u5173\u7cfb\uff0c\u8fd9\u79cd\u5c42\u7ea7\u5173\u7cfb\u662f MinIO \u5904\u7406\u5e26\u6709 <code>/</code> \u7684 Object \u540d\u79f0\u7684\u65b9\u5f0f\uff0cObject \u540d\u79f0\u88ab<code>/</code>\u5207\u5206\uff0c\u6bcf\u4e00\u90e8\u5206\u88ab\u89c6\u4e3a\u4e00\u4e2a\u524d\u7f00\uff0c\u5c5e\u4e8e\u5bf9\u8c61\u540d\u79f0\u7684\u4e00\u90e8\u5206\u3002\u7528\u6237\u5728\u4e0a\u4f20\u4e00\u4e2a Object \u65f6\uff08\u4ee5<code>/articles/john.doe/ 2020-01-02-MinIO-Object-Storage.md</code>\u4e3a\u4f8b\uff09\uff0cMinIO \u4f1a\u81ea\u52a8\u5904\u7406<code>/articles/john.doe/</code> \u8fd9\u4e9b\u524d\u7f00\uff0c\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u7684\u5c42\u7ea7\u5173\u7cfb\u6765\u7ba1\u7406\u4e0d\u540c\u524d\u7f00\u7684 Object\u3002</p> <p>\u5728 Object \u76ee\u5f55\u4e0b\uff0c\u5b58\u5728\u6570\u636e\u76ee\u5f55\u3001\u5143\u6570\u636e\u6587\u4ef6\uff0c\u6570\u636e\u76ee\u5f55\u4e0b\u662f\u7ecf\u8fc7 MinIO \u7f16\u7801\u540e\u7684\u6587\u4ef6\uff0c\u5143\u6570\u636e\u6587\u4ef6\u662f MinIO \u5185\u90e8\u4f7f\u7528\u7684\u6587\u4ef6\uff0c\u7528\u4e8e\u5b58\u50a8 Object \u7684\u5143\u6570\u636e\u4fe1\u606f\u3002 <pre><code>2020-01-04-MinIO-Interview.md/\n    data-dir/\n        part.1\n        part.2\n    xl.meta\n</code></pre></p> <p>\u5982\u6b64\u5904\u7406\u51b3\u5b9a\u4e86 MinIO \u7684\u4e00\u4e2a\u7279\u70b9\uff0c\u5373\u4e0d\u80fd\u5b58\u5728\u5982\u4e0b\uff1a <pre><code>prefix/object1\nprefix/object1/object2\n</code></pre> \u4e0a\u8ff0 object2 \u4ee5 object1 \u4e3a\u524d\u7f00\uff0c\u8fd9\u5728 MinIO \u4e2d\u662f\u4e0d\u5141\u8bb8\u7684\u3002</p>"},{"location":"blog/2025/07/23/minio-local-files/#_1","title":"\u7cfb\u7edf\u4fdd\u7559\u6876","text":"<p>MinIO \u5728\u542f\u52a8\u65f6\u4f1a\u81ea\u52a8\u521b\u5efa\u4e00\u4e2a<code>.minio.sys</code>\u6876\uff0c\u8be5\u6876\u4e3a\u7cfb\u7edf\u4fdd\u7559\u4f7f\u7528\uff0c\u5b58\u50a8\u4e00\u4e9b\u7cfb\u7edf\u5143\u6570\u636e\u3001\u914d\u7f6e\u4fe1\u606f\u4ee5\u53ca\u4e34\u65f6\u5bf9\u8c61\u3002\u5143\u6570\u636e\u6876\u4e0b\u5305\u542b\u5982\u4e0b\u5185\u5bb9\uff1a</p> <ul> <li><code>buckets</code>: \u5b58\u653e\u4e0e Bucket \u7684\u4e00\u4e9b\u5143\u6570\u636e\uff0c\u5305\u62ec\uff1aBucket \u7528\u91cf\u3001Scanner \u626b\u63cf\u3001\u6570\u636e\u4fee\u590d\u7b49\u76f8\u5173\u4fe1\u606f\u3002</li> <li><code>config</code>: \u5b58\u653e\u7cfb\u7edf\u914d\u7f6e\u3001IAM \u914d\u7f6e\u3002</li> <li><code>format.json</code>: \u4e00\u4e2a JSON \u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u4fdd\u5b58\u78c1\u76d8\u683c\u5f0f\u5316\u4fe1\u606f\uff0cMinIO \u4f9d\u636e\u8be5\u6587\u4ef6\u5224\u65ad\u78c1\u76d8\u662f\u5426\u683c\u5f0f\u5316\u3002</li> <li><code>multipart</code>: \u5b58\u653e\u5206\u7247\u4e0a\u4f20\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u6587\u4ef6\u3002</li> <li><code>pool.bin</code>: \u5b58\u653e\u5b58\u50a8\u6c60\u76f8\u5173\u7684\u5143\u6570\u636e\u3002</li> <li><code>tmp</code>: \u5b58\u653e\u4e34\u65f6\u6587\u4ef6\u3002</li> </ul> <p>\u4e0e\u7528\u6237Bucket\u4e00\u6837\uff0c<code>.minio.sys</code>\u6876\u4e0b\u7684\u8fd9\u4e9b\u76ee\u5f55\u4e0b\u7684 Object \u4e5f\u662f\u4ee5 EC \u7684\u65b9\u5f0f\u88ab\u7f16\u7801\u5230\u5404\u4e2a\u8282\u70b9\u4e0a\u8fdb\u884c\u5b58\u50a8\uff08format.json \u9664\u5916\uff0c\u8be5\u6587\u4ef6\u662f\u6bcf\u4e2a\u78c1\u76d8\u5404\u81ea\u7684\uff0c\u4fdd\u5b58 disk_id \u53ca\u683c\u5f0f\u5316\u4fe1\u606f\uff09\u3002</p>"},{"location":"blog/2025/07/23/minio-local-files/#buckets","title":"Buckets","text":"<p><code>Buckets</code>\u76ee\u5f55\u4e0b\u6709\u5982\u4e0b Object\uff1a <pre><code>.\n\u251c\u2500\u2500 .background-heal.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u251c\u2500\u2500 .bloomcycle.bin\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .metadata.bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .usage-cache.bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 .usage-cache.bin.bkp\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 xl.meta\n\u251c\u2500\u2500 .healing.bin\n\u251c\u2500\u2500 .usage-cache.bin\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u251c\u2500\u2500 .usage-cache.bin.bkp\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u2514\u2500\u2500 .usage.json\n    \u2514\u2500\u2500 xl.met\n</code></pre></p> <p><code>.background-heal.json</code> \u5b58\u653e Scanner \u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684 Scan \u6a21\u5f0f\uff0c\u4f9d\u636e Cycle \u4fe1\u606f\u51b3\u5b9a\u662f\u5426\u91c7\u7528\u4fee\u590d bitrot\uff1a</p> <pre><code>type backgroundHealInfo struct {\n    BitrotStartTime  time.Time           `json:\"bitrotStartTime\"`\n    BitrotStartCycle uint64              `json:\"bitrotStartCycle\"`\n    CurrentScanMode  madmin.HealScanMode `json:\"currentScanMode\"`\n}\n</code></pre> <p><code>.bloomcycle.bin</code> \u5b58\u653e Scanner \u7684\u5468\u671f\u4fe1\u606f\uff0c\u5305\u62ec\u5f53\u524d\u5468\u671f\u3001\u4e0b\u4e00\u4e2a\u5468\u671f\u3001\u626b\u63cf\u5f00\u59cb\u65f6\u95f4\u3001\u5468\u671f\u5b8c\u6210\u65f6\u95f4\u7b49\u3002(\u8be5\u540d\u79f0\u662f\u5386\u53f2\u539f\u56e0\uff0c\u5f53\u524d\u5df2\u7ecf\u6ca1\u6709\u4f7f\u7528\u5e03\u9686\u8fc7\u6ee4\u5668\u4e86)\u3002</p> <pre><code>type currentScannerCycle struct {\n    current        uint64\n    next           uint64\n    started        time.Time\n    cycleCompleted []time.Time\n}\n</code></pre> <p><code>.healing.bin</code> \u5bf9\u5e94 <code>healingTracker</code>\uff0c\u7528\u6765\u6301\u4e45\u5316\u4e00\u6b21\u65b0\u78c1\u76d8\u683c\u5f0f\u5316\u548c\u6570\u636e\u6062\u590d\u8fc7\u7a0b\u4e2d\u7684\u76f8\u5173\u4fe1\u606f\uff1a <pre><code>type healingTracker struct {\n        disk StorageAPI    `msg:\"-\"`\n        mu   *sync.RWMutex `msg:\"-\"`\n\n        ID         string    // Disk ID\n        PoolIndex  int       // Pool index\n        SetIndex   int       // Set index\n        DiskIndex  int       // Disk index\n        Path       string    // Path to drive\n        Endpoint   string    // Endpoint of drive\n        Started    time.Time\n        LastUpdate time.Time\n\n        ObjectsTotalCount uint64\n        ObjectsTotalSize  uint64\n\n        ItemsHealed uint64\n        ItemsFailed uint64\n\n        BytesDone   uint64\n        BytesFailed uint64\n\n        // Last object scanned.\n        Bucket string `json:\"-\"`\n        Object string `json:\"-\"`\n\n        // Numbers when current bucket started healing,\n        // for resuming with correct numbers.\n        ResumeItemsHealed  uint64 `json:\"-\"`\n        ResumeItemsFailed  uint64 `json:\"-\"`\n        ResumeItemsSkipped uint64 `json:\"-\"`\n        ResumeBytesDone    uint64 `json:\"-\"`\n        ResumeBytesFailed  uint64 `json:\"-\"`\n        ResumeBytesSkipped uint64 `json:\"-\"`\n\n        // Filled on startup/restarts.\n        QueuedBuckets []string\n\n        // Filled during heal.\n        HealedBuckets []string\n\n        // ID of the current healing operation\n        HealID string\n\n        ItemsSkipped uint64\n        BytesSkipped uint64\n\n        RetryAttempts uint64\n\n        Finished bool // finished healing, whether with errors or not\n\n        // Add future tracking capabilities\n        // Be sure that they are included in toHealingDisk\n}\n</code></pre></p> <p><code>.usage-cache.bin</code> \u7f13\u5b58 Scanner \u8fc7\u7a0b\u4e2d\u641c\u96c6\u7684\u7528\u91cf\u4fe1\u606f\uff0c\u4e00\u4e9b\u60c5\u51b5\u4e0b\u76f4\u63a5\u4f7f\u7528\u7f13\u5b58\u4e2d\u7684\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u91cd\u65b0\u8ba1\u7b97\u3002</p> <p><code>.usage.json</code> \u5b58\u653e\u603b\u7684\u7528\u91cf\u4fe1\u606f\uff0c\u5185\u5bb9\u5982\u4e0b\uff1a <pre><code>type DataUsageInfo struct {\n    TotalCapacity     uint64 `json:\"capacity,omitempty\"`\n    TotalUsedCapacity uint64 `json:\"usedCapacity,omitempty\"`\n    TotalFreeCapacity uint64 `json:\"freeCapacity,omitempty\"`\n\n    // LastUpdate is the timestamp of when the data usage info was last updated.\n    // This does not indicate a full scan.\n    LastUpdate time.Time `json:\"lastUpdate\"`\n\n    // Objects total count across all buckets\n    ObjectsTotalCount uint64 `json:\"objectsCount\"`\n\n    // Versions total count across all buckets\n    VersionsTotalCount uint64 `json:\"versionsCount\"`\n\n    // Delete markers total count across all buckets\n    DeleteMarkersTotalCount uint64 `json:\"deleteMarkersCount\"`\n\n    // Objects total size across all buckets\n    ObjectsTotalSize uint64                           `json:\"objectsTotalSize\"`\n    ReplicationInfo  map[string]BucketTargetUsageInfo `json:\"objectsReplicationInfo\"`\n\n    // Total number of buckets in this cluster\n    BucketsCount uint64 `json:\"bucketsCount\"`\n\n    // Buckets usage info provides following information across all buckets\n    // - total size of the bucket\n    // - total objects in a bucket\n    // - object size histogram per bucket\n    BucketsUsage map[string]BucketUsageInfo `json:\"bucketsUsageInfo\"`\n    // Deprecated kept here for backward compatibility reasons.\n    BucketSizes map[string]uint64 `json:\"bucketsSizes\"`\n\n    // TierStats contains per-tier stats of all configured remote tiers\n    TierStats *allTierStats `json:\"tierStats,omitempty\"`\n}\n</code></pre></p> <p>\u9664\u4e0a\u8ff0 Object \u5916\uff0c\u9488\u5bf9\u6bcf\u4e00\u4e2a\u5355\u72ec\u7684 Bucket\uff0cBuckets \u76ee\u5f55\u4e0b\u90fd\u7528\u4e00\u4e2a\u4e0e Bucket \u540c\u540d\u7684\u76ee\u5f55\uff0c\u7528\u6765\u5b58\u653e Bucket \u7684\u76f8\u5173\u4fe1\u606f\u3002\u4f8b\u5982\u4e0a\u8ff0\u7684\uff1a <pre><code>\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .metadata.bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 .usage-cache.bin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 .usage-cache.bin.bkp\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 xl.meta\n</code></pre> <code>.usage-cache.bin</code>\u4e0e\u4e0a\u5c42\u76ee\u5f55\u4e2d\u7684\u4f5c\u7528\u4e00\u81f4\u3002</p> <p><code>.metadata.bin</code> \u5b58\u653e\u8be5 Bucket \u7684\u5143\u4fe1\u606f\uff1a <pre><code>// BucketMetadata contains bucket metadata.\n// When adding/removing fields, regenerate the marshal code using the go generate above.\n// Only changing meaning of fields requires a version bump.\n// bucketMetadataFormat refers to the format.\n// bucketMetadataVersion can be used to track a rolling upgrade of a field.\ntype BucketMetadata struct {\n    Name                        string\n    Created                     time.Time\n    LockEnabled                 bool // legacy not used anymore.\n    PolicyConfigJSON            []byte\n    NotificationConfigXML       []byte\n    LifecycleConfigXML          []byte\n    ObjectLockConfigXML         []byte\n    VersioningConfigXML         []byte\n    EncryptionConfigXML         []byte\n    TaggingConfigXML            []byte\n    QuotaConfigJSON             []byte\n    ReplicationConfigXML        []byte\n    BucketTargetsConfigJSON     []byte\n    BucketTargetsConfigMetaJSON []byte\n\n    PolicyConfigUpdatedAt            time.Time\n    ObjectLockConfigUpdatedAt        time.Time\n    EncryptionConfigUpdatedAt        time.Time\n    TaggingConfigUpdatedAt           time.Time\n    QuotaConfigUpdatedAt             time.Time\n    ReplicationConfigUpdatedAt       time.Time\n    VersioningConfigUpdatedAt        time.Time\n    LifecycleConfigUpdatedAt         time.Time\n    NotificationConfigUpdatedAt      time.Time\n    BucketTargetsConfigUpdatedAt     time.Time\n    BucketTargetsConfigMetaUpdatedAt time.Time\n    // Add a new UpdatedAt field and update lastUpdate function\n\n    // Unexported fields. Must be updated atomically.\n    policyConfig           *policy.BucketPolicy\n    notificationConfig     *event.Config\n    lifecycleConfig        *lifecycle.Lifecycle\n    objectLockConfig       *objectlock.Config\n    versioningConfig       *versioning.Versioning\n    sseConfig              *bucketsse.BucketSSEConfig\n    taggingConfig          *tags.Tags\n    quotaConfig            *madmin.BucketQuota\n    replicationConfig      *replication.Config\n    bucketTargetConfig     *madmin.BucketTargets\n    bucketTargetConfigMeta map[string]string\n}\n</code></pre></p>"},{"location":"blog/2025/07/23/minio-local-files/#config","title":"config","text":""},{"location":"blog/2025/07/23/minio-local-files/#formatjson","title":"format.json","text":"<p>\u5b58\u50a8\u78c1\u76d8\u7684\u683c\u5f0f\u5316\u4fe1\u606f\uff0c\u5305\u62ec ID\u3001\u7248\u672c\u3001\u683c\u5f0f\u4ee5\u53ca\u7ea0\u5220\u96c6\u914d\u7f6e\u3001\u78c1\u76d8\u4fe1\u606f\u3002 <pre><code>// formatErasureV3 struct is same as formatErasureV2 struct except that formatErasureV3.Erasure.Version is \"3\" indicating\n// the simplified multipart backend which is a flat hierarchy now.\n// In .minio.sys/multipart we have:\n// sha256(bucket/object)/uploadID/[xl.meta, part.1, part.2 ....]\ntype formatErasureV3 struct {\n    formatMetaV1\n    Erasure struct {\n        Version string `json:\"version\"` // Version of 'xl' format.\n        This    string `json:\"this\"`    // This field carries assigned disk uuid.\n        // Sets field carries the input disk order generated the first\n        // time when fresh disks were supplied, it is a two dimensional\n        // array second dimension represents list of disks used per set.\n        Sets [][]string `json:\"sets\"`\n        // Distribution algorithm represents the hashing algorithm\n        // to pick the right set index for an object.\n        DistributionAlgo string `json:\"distributionAlgo\"`\n    } `json:\"xl\"`\n    Info DiskInfo `json:\"-\"`\n}\n\n// format.json currently has the format:\n// {\n//   \"version\": \"1\",\n//   \"format\": \"XXXXX\",\n//   \"XXXXX\": {\n//\n//   }\n// }\n// Here \"XXXXX\" depends on the backend, currently we have \"fs\" and \"xl\" implementations.\n// formatMetaV1 should be inherited by backend format structs. Please look at format-fs.go\n// and format-xl.go for details.\n\n// Ideally we will never have a situation where we will have to change the\n// fields of this struct and deal with related migration.\ntype formatMetaV1 struct {\n    // Version of the format config.\n    Version string `json:\"version\"`\n    // Format indicates the backend format type, supports two values 'xl' and 'fs'.\n    Format string `json:\"format\"`\n    // ID is the identifier for the minio deployment\n    ID string `json:\"id\"`\n}\n\n// DiskInfo is an extended type which returns current\n// disk usage per path.\n// The above means that any added/deleted fields are incompatible.\n//\n// The above means that any added/deleted fields are incompatible.\n//\n//msgp:tuple DiskInfo\ntype DiskInfo struct {\n    Total      uint64\n    Free       uint64\n    Used       uint64\n    UsedInodes uint64\n    FreeInodes uint64\n    Major      uint32\n    Minor      uint32\n    NRRequests uint64\n    FSType     string\n    RootDisk   bool\n    Healing    bool\n    Scanning   bool\n    Endpoint   string\n    MountPath  string\n    ID         string\n    Rotational bool\n    Metrics    DiskMetrics\n    Error      string // carries the error over the network\n}\n</code></pre></p>"},{"location":"blog/2025/07/23/minio-local-files/#multipart","title":"multipart","text":"<p>\u8be5\u76ee\u5f55\u4e0b\u7528\u6765\u4fdd\u5b58\u5206\u7247\u4e0a\u4f20\u65f6\u7684\u4e2d\u95f4\u6587\u4ef6\u3002\u5206\u7247\u4e0a\u4f20\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5728\u8be5\u76ee\u5f55\u4e0b\u4f1a\u5b58\u5728\u7c7b\u4f3c\u5982\u4e0b\u7ed3\u6784\u7684\u4e2d\u95f4\u76ee\u5f55\uff1a</p> <pre><code>.\n\u2514\u2500\u2500 6445a143ed2167ea4c1af3771095f1fa56274213dfd738e1c6936dc0a19db464\n    \u2514\u2500\u2500 de6b968f-95a4-4b3e-86e3-0844955463b6x1750142093339803801\n        \u251c\u2500\u2500 85fd69e6-aa55-4514-8970-ce6bc3a4c20a\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.1\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.1.meta\n        \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.2\n        \u2502\u00a0\u00a0 \u2514\u2500\u2500 part.2.meta\n        \u2514\u2500\u2500 xl.meta\n</code></pre> <p>\u5206\u7247\u4e0a\u4f20\u7684\u4e00\u822c\u6b65\u9aa4\u4e3a\uff1a</p> <ul> <li><code>NewMultipartUpload</code>\uff1a\u521d\u59cb\u5316\u5206\u7247\u4e0a\u4f20\uff0c\u8be5\u8c03\u7528\u4f1a\u5728<code>multipart</code>\u76ee\u5f55\u4e0b\u751f\u6210\u4e0a\u4f20\u7684 Object \u5bf9\u5e94\u7684 xl.meta \u6587\u4ef6\uff0c\u8def\u5f84\u4e3a\uff1aSHA256(bucket/object)/uploadID/xl.meta</li> <li><code>UploadPart</code>\uff1a\u4e0a\u4f20\u5206\u7247\uff0c\u8be5\u8c03\u7528\u4f1a\u5728<code>multipart</code>\u76ee\u5f55\u4e0b\u751f\u6210\u5206\u7247\u5bf9\u5e94\u7684\u6587\u4ef6\uff0c\u8def\u5f84\u4e3a\uff1aSHA256(bucket/object)/uploadID/part.N(part.N.meta)</li> <li><code>CompleteMultipartUpload</code>\uff1a\u5b8c\u6210\u5206\u7247\u4e0a\u4f20\uff0c\u8be5\u8c03\u7528\u4f1a\u5c06<code>multipart</code>\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6rename\u5230\u5bf9\u5e94\u7684\u7528\u6237Bucket\u4e0b\u3002</li> </ul> <p>\u6309\u7167 MinIO \u7684\u8bbe\u8ba1\uff0c\u5728\u5206\u7247\u4e0a\u4f20\u8fc7\u7a0b\u4e2d\u5982\u679c\u53d1\u751f\u4e2d\u65ad\uff0c\u5bfc\u81f4\u6ca1\u6709\u8c03\u7528<code>CompleteMultipartUpload</code>\uff0c\u90a3\u4e48\u6b64\u65f6\u4ea7\u751f\u7684\u4e2d\u95f4\u6587\u4ef6\u4e0d\u4f1a\u7acb\u9a6c\u88ab\u5220\u9664\uff0c\u4e5f\u4e0d\u4f1a\u4e00\u76f4\u6b8b\u7559\uff0c\u788e\u7247\u6587\u4ef6\u4f1a\u572824\u5c0f\u65f6\u540e\uff08\u9ed8\u8ba4\u8bbe\u7f6e\uff09\u81ea\u52a8\u5220\u9664\u3002</p>"},{"location":"blog/2025/07/23/minio-local-files/#poolbin","title":"pool.bin","text":"<p>\u4fdd\u5b58\u5b58\u50a8\u6c60\u7684\u76f8\u5173\u5143\u6570\u636e\u3002</p> <pre><code>type poolMeta struct {\n    Version int          `msg:\"v\"`\n    Pools   []PoolStatus `msg:\"pls\"`\n\n    // Value should not be saved when we have not loaded anything yet.\n    dontSave bool `msg:\"-\"`\n}\n\ntype PoolStatus struct {\n    ID           int                   `json:\"id\" msg:\"id\"`\n    CmdLine      string                `json:\"cmdline\" msg:\"cl\"`\n    LastUpdate   time.Time             `json:\"lastUpdate\" msg:\"lu\"`\n    Decommission *PoolDecommissionInfo `json:\"decommissionInfo,omitempty\" msg:\"dec\"`\n}\n\n// PoolDecommissionInfo currently decommissioning information\ntype PoolDecommissionInfo struct {\n    StartTime   time.Time `json:\"startTime\" msg:\"st\"`\n    StartSize   int64     `json:\"startSize\" msg:\"ss\"`\n    TotalSize   int64     `json:\"totalSize\" msg:\"ts\"`\n    CurrentSize int64     `json:\"currentSize\" msg:\"cs\"`\n\n    Complete bool `json:\"complete\" msg:\"cmp\"`\n    Failed   bool `json:\"failed\" msg:\"fl\"`\n    Canceled bool `json:\"canceled\" msg:\"cnl\"`\n\n    // Internal information.\n    QueuedBuckets         []string `json:\"-\" msg:\"bkts\"`\n    DecommissionedBuckets []string `json:\"-\" msg:\"dbkts\"`\n\n    // Last bucket/object decommissioned.\n    Bucket string `json:\"-\" msg:\"bkt\"`\n    // Captures prefix that is currently being\n    // decommissioned inside the 'Bucket'\n    Prefix string `json:\"-\" msg:\"pfx\"`\n    Object string `json:\"-\" msg:\"obj\"`\n\n    // Verbose information\n    ItemsDecommissioned     int64 `json:\"objectsDecommissioned\" msg:\"id\"`\n    ItemsDecommissionFailed int64 `json:\"objectsDecommissionedFailed\" msg:\"idf\"`\n    BytesDone               int64 `json:\"bytesDecommissioned\" msg:\"bd\"`\n    BytesFailed             int64 `json:\"bytesDecommissionedFailed\" msg:\"bf\"`\n}\n</code></pre>"},{"location":"blog/2025/07/23/minio-local-files/#tmp","title":"tmp","text":"<p>\u5404\u79cd\u4e34\u65f6\u6587\u4ef6\uff0c\u4f8b\u5982\u4e0a\u8ff0\u5206\u7247\u4e0a\u4f20\u8fc7\u7a0b\uff0c\u5728\u4e0a\u4f20\u4e00\u4e2apart\u65f6\uff0c\u4e5f\u4f1a\u5148\u5199\u5165\u8be5\u76ee\u5f55\uff0c\u5b8c\u6210\u540e\u518d<code>rename</code>\u5230 multipart \u76ee\u5f55\u4e0b\u3002</p> <p>\u4e5f\u5305\u62ec\u7cfb\u7edf<code>.trash</code>\u76ee\u5f55\uff0c\u4e34\u65f6\u5220\u9664\u6587\u4ef6\uff0c\u8be5\u76ee\u5f55\u5b9a\u65f6\u88ab\u6e05\u7406\uff08\u5468\u671f\u4e3a\u6700\u5927 25ms\uff09\u3002</p>"},{"location":"blog/2025/07/23/minio-local-files/#_2","title":"\u7528\u6237\u5b9a\u4e49\u6876","text":"<p>\u5373\u7528\u6237\u663e\u5f0f\u521b\u5efa\u7684\u5b58\u50a8\u6876\uff0c\u6bcf\u4e2a\u6876\u5185\u53ef\u4ee5\u4e0a\u4f20\u4efb\u610f\u6570\u91cf\u7684 Object\uff0cObject \u7684\u540d\u79f0\u53ef\u4ee5\u6709\u7c7b\u4f3c\u6587\u4ef6\u7684\u5c42\u7ea7\u7ed3\u6784,\u5bf9\u4e8e\u6570\u636e\u91cf\u5c0f\u4e8e128K\u7684Object\uff0c\u6570\u636e\u4f1a\u76f4\u63a5\u5185\u8054\u5230 xl.meta \u6587\u4ef6\u4e2d\uff0c\u800c\u4e0d\u4f1a\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u76ee\u5f55\uff0c\u5426\u5219\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u5177\u6709 uuid \u7684\u6570\u636e\u76ee\u5f55\uff0c\u7528 part.N \u7684\u6587\u4ef6\u6765\u5b58\u50a8\u6570\u636e\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u7528\u6237 Bucket \u7ed3\u6784\u5982\u4e0b\uff1a <pre><code>.\n\u251c\u2500\u2500 build.sh\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u251c\u2500\u2500 go.mod\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 xl.meta\n\u251c\u2500\u2500 subdir\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 test.txt\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 b265232c-9542-4910-9594-c875c4810f3d\n\u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 part.1\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 xl.meta\n\u2514\u2500\u2500 test.txt\n    \u251c\u2500\u2500 85fd69e6-aa55-4514-8970-ce6bc3a4c20a\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.1\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.10\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.11\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.12\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.13\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.14\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.15\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.16\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.2\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.3\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.4\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.5\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.6\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.7\n    \u2502\u00a0\u00a0 \u251c\u2500\u2500 part.8\n    \u2502\u00a0\u00a0 \u2514\u2500\u2500 part.9\n    \u2514\u2500\u2500 xl.meta\n</code></pre></p>"},{"location":"blog/2025/07/26/minio-lock/","title":"MinIO \u7b14\u8bb0\uff085\uff09\uff1a\u5206\u5e03\u5f0f\u9501","text":""},{"location":"blog/2025/07/26/minio-lock/#dsync","title":"Dsync","text":"<p>\u300cDsync\u300d\u662f MinIO \u4e2d\u7684\u7528\u4e8e\u5b9e\u73b0\u5206\u5e03\u5f0f\u9501\u7684\u7ec4\u4ef6\u3002\u5f53\u4e00\u4e2a Node \u9700\u8981\u52a0\u9501\u65f6\uff0c\u5b83\u4f1a\u5411\u6240\u6709 Node\uff08\u5305\u62ec\u81ea\u5df1\uff09\u53d1\u51fa\u52a0\u9501\u8bf7\u6c42\uff0c\u53ea\u6709\u5728\u6536\u5230\u81f3\u5c11 n/2 + 1 \u4e2a\u540c\u610f\u7684\u54cd\u5e94\u4e4b\u540e\uff08\u5bf9\u4e8e\u8bfb\u9501 n/2\uff09\uff0c\u624d\u80fd\u6210\u529f\u83b7\u53d6\u9501\u3002</p>"},{"location":"blog/2025/07/26/minio-lock/#_1","title":"\u5b9e\u73b0","text":"<p>Dsync \u7ec4\u4ef6\u8d1f\u8d23\u534f\u8c03\u591a\u4e2a Node \u4e4b\u95f4\u7684\u9501\u8bf7\u6c42\uff0c\u800c Node \u4e4b\u95f4\u7684\u52a0\u89e3\u9501\u901a\u4fe1\uff0c\u662f\u901a\u8fc7 NetLocker \u63a5\u53e3\u5b9e\u73b0\u7684\u3002</p> <p>Dsync \u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a <pre><code>// Dsync represents dsync client object which is initialized with\n// authenticated clients, used to initiate lock REST calls.\ntype Dsync struct {\n    // List of rest client objects, one per lock server.\n    GetLockers func() ([]NetLocker, string)\n\n    // Timeouts to apply.\n    Timeouts Timeouts\n}\n</code></pre> <code>GetLockers</code> \u65b9\u6cd5\u8fd4\u56de NetLocker \u5b9e\u4f8b\u5217\u8868\uff0c\u7528\u4e8e\u4e0e\u6240\u6709 Node \u8fdb\u884c\u52a0\u89e3\u9501\u901a\u4fe1\u3002</p> <p>NetLocker \u63a5\u53e3\u5b9a\u4e49\u4e86\u5206\u5e03\u5f0f\u9501\u7684\u57fa\u672c\u64cd\u4f5c\uff0c\u5305\u62ec\u52a0\u9501\u3001\u89e3\u9501\u3001\u5237\u65b0\u9501\u7b49\u3002 <pre><code>// NetLocker is dsync compatible locker interface.\ntype NetLocker interface {\n    // Do read lock for given LockArgs.  It should return\n    // * a boolean to indicate success/failure of the operation\n    // * an error on failure of lock request operation.\n    RLock(ctx context.Context, args LockArgs) (bool, error)\n\n    // Do write lock for given LockArgs. It should return\n    // * a boolean to indicate success/failure of the operation\n    // * an error on failure of lock request operation.\n    Lock(ctx context.Context, args LockArgs) (bool, error)\n\n    // Do read unlock for given LockArgs. It should return\n    // * a boolean to indicate success/failure of the operation\n    // * an error on failure of unlock request operation.\n    // Canceling the context will abort the remote call.\n    // In that case, the resource may or may not be unlocked.\n    RUnlock(ctx context.Context, args LockArgs) (bool, error)\n\n    // Do write unlock for given LockArgs. It should return\n    // * a boolean to indicate success/failure of the operation\n    // * an error on failure of unlock request operation.\n    // Canceling the context will abort the remote call.\n    // In that case, the resource may or may not be unlocked.\n    Unlock(ctx context.Context, args LockArgs) (bool, error)\n\n    // Refresh the given lock to prevent it from becoming stale\n    Refresh(ctx context.Context, args LockArgs) (bool, error)\n\n    // Unlock (read/write) forcefully for given LockArgs. It should return\n    // * a boolean to indicate success/failure of the operation\n    // * an error on failure of unlock request operation.\n    ForceUnlock(ctx context.Context, args LockArgs) (bool, error)\n\n    // Returns underlying endpoint of this lock client instance.\n    String() string\n\n    // Close closes any underlying connection to the service endpoint\n    Close() error\n\n    // Is the underlying connection online? (is always true for any local lockers)\n    IsOnline() bool\n\n    // Is the underlying locker local to this server?\n    IsLocal() bool\n}\n</code></pre></p> <p>NetLocker \u901a\u8fc7 RPC \u8c03\u7528\uff0c\u5411\u5176\u4ed6\u8282\u70b9\u53d1\u9001\u52a0\u9501\u3001\u89e3\u9501\u3001\u5237\u65b0\u7b49\u8bf7\u6c42\u3002\u8bf7\u6c42\u7684\u7ed3\u6784\u4f53\u5982\u4e0b\uff0c\u5305\u62ec\u52a0\u9501\u7684\u5bf9\u8c61\u3001\u9501\u7684\u6301\u6709\u8005\u3001\u9700\u8981\u7684 quorum \u8282\u70b9\u6570\u7b49\u3002 <pre><code>type LockArgs struct {\n    // Unique ID of lock/unlock request.\n    UID string\n\n    // Resources contains single or multiple entries to be locked/unlocked.\n    Resources []string\n\n    // Owner represents unique ID for this instance, an owner who originally requested\n    // the locked resource, useful primarily in figuring out stale locks.\n    Owner string\n\n    // Source contains the line number, function and file name of the code\n    // on the client node that requested the lock.\n    Source string `msgp:\"omitempty\"`\n\n    // Quorum represents the expected quorum for this lock type.\n    Quorum *int `msgp:\"omitempty\"`\n}\n</code></pre></p>"},{"location":"blog/2025/07/26/minio-lock/#_2","title":"\u52a0\u9501","text":"<p>\u52a0\u9501\u7684\u57fa\u672c\u6b65\u9aa4\u4e3a,\u963b\u585e\u7684\u5c1d\u8bd5\u5411\u6240\u6709\u8282\u70b9\u83b7\u53d6\u9501</p> <ul> <li>\u83b7\u53d6 quorum \u8282\u70b9\u7684\u54cd\u5e94\uff0c\u5219\u52a0\u9501\u6210\u529f\uff0c\u542f\u52a8\u4e00\u4e2a\u5f02\u6b65\u4efb\u52a1\u53bb\u5b9a\u65f6\u5237\u65b0\u9501\u3002\u5237\u65b0\u9501\u7684\u57fa\u672c\u6b65\u9aa4\u4e3a\uff1a<ul> <li>\u5411\u6240\u6709\u8282\u70b9\u53d1\u9001 Refresh \u8bf7\u6c42</li> <li>\u83b7\u53d6 quorum \u8282\u70b9\u7684\u54cd\u5e94\uff0c\u5219\u5237\u65b0\u6210\u529f</li> <li>\u5426\u5219\uff0c\u8c03\u7528\u56de\u8c03\u51fd\u6570\uff0c\u5f3a\u5236\u91ca\u653e\u5df2\u6301\u6709\u7684\u9501</li> </ul> </li> <li>\u672a\u83b7\u53d6\u5219\u91cd\u8bd5\u81f3\u8d85\u65f6</li> </ul> <pre><code>flowchart TD\n  subgraph GetLock/GetRLock\n    direction TB\n        Start([GetLocker])\n        Start --&gt; Read{\u8bfb\u9501\uff1f}\n        Read -- \u662f --&gt; SetR(isReadLock=true)\n        Read -- \u5426 --&gt; SetW(isReadLock=false)\n    subgraph LockBlocking\n        direction TB\n            SetR --&gt; quorum(\u786e\u5b9a quorum)\n            SetW --&gt; quorum(\u786e\u5b9a quorum)\n            quorum --&gt; lock(\u5411\u6240\u6709\u8282\u70b9\u53d1\u51fa\u52a0\u9501\u8bf7\u6c42)\n            lock --&gt; quorumResponse{\u662f\u5426\u83b7\u5f97 quorum \u54cd\u5e94\uff1f}\n            lock -- \u8d85\u65f6 --&gt; timeout([\u52a0\u9501\u5931\u8d25])\n            quorumResponse -- \u662f --&gt; success(\u52a0\u9501\u6210\u529f)\n            quorumResponse -- \u5426 --&gt; release(\u91ca\u653e\u5df2\u6301\u6709\u7684\u9501)\n            release -- sleep,retry --&gt; lock\n            success --&gt; return([\u8fd4\u56de\u52a0\u9501\u6210\u529f]) \n    end\n  end\n  subgraph RefreshLock\n    direction TB\n        success --\u5f02\u6b65\u542f\u52a8\u4e00\u4e2a\u534f\u7a0b--&gt; startContinuousLockRefresh(\u5f02\u6b65\u4efb\u52a1\u5237\u65b0)\n        startContinuousLockRefresh --&gt; refresh(\u5411\u6240\u6709\u8282\u70b9\u53d1\u9001 Refresh \u8bf7\u6c42)\n        refresh --&gt; quorumResponse2{\u662f\u5426\u83b7\u5f97 quorum \u54cd\u5e94\uff1f}\n        quorumResponse2 -- \u662f --&gt; startContinuousLockRefresh\n        quorumResponse2 -- \u5426 --&gt; cb(\u8c03\u7528\u56de\u8c03\u51fd\u6570)\n        cb --&gt; forceUnlock(\u5f3a\u5236\u91ca\u653e\u5df2\u6301\u6709\u7684\u9501)\n  end</code></pre>"},{"location":"blog/2025/07/26/minio-lock/#_3","title":"\u91ca\u653e\u9501","text":"<p>\u91ca\u653e\u9501\u7684\u57fa\u672c\u6b65\u9aa4\u4e3a\uff1a</p> <ul> <li>\u5411\u6240\u6709\u8282\u70b9\u53d1\u9001 Unlock \u8bf7\u6c42</li> <li>\u83b7\u53d6 quorum \u8282\u70b9\u7684\u54cd\u5e94\uff0c\u5219\u91ca\u653e\u9501\u6210\u529f</li> <li>\u5931\u8d25\u5219\u9000\u907f\u91cd\u8bd5\uff0c\u76f4\u81f3\u6210\u529f\u6216\u8d85\u65f6</li> </ul>"},{"location":"blog/2025/07/26/minio-lock/#netlocker","title":"NetLocker \u5b9e\u73b0","text":"<p>\u4e0a\u8ff0\u7684 Dsync \u7ec4\u4ef6\u8d1f\u8d23\u5728\u591a\u4e2a Node \u4e4b\u95f4\u534f\u8c03\u9501\u8bf7\u6c42\uff1b\u5bf9 Node \u7684\u52a0\u9501\u3001\u89e3\u9501\u3001\u5237\u65b0\u7b49\u64cd\u4f5c\u7531 NetLocker \u5b9e\u73b0\u3002</p> <p>NetLocker \u91c7\u7528\u4e4b\u524d\u7684 Grid \u901a\u4fe1\u6846\u67b6\uff0c\u5c06 NetLocker \u7684\u670d\u52a1\u63a5\u53e3\u6ce8\u518c\u5230 Grid \u7684 Handler \u4e2d\uff0c\u4ee5\u5b9e\u73b0\u8282\u70b9\u95f4\u7684 RPC \u8c03\u7528\u3002</p> <p>NetLocker \u7684\u4e00\u4e2a\u5b9e\u73b0\u662f <code>localLocker</code> \u5b9e\u73b0\uff0c<code>localLocker</code> \u63a5\u53d7 Node \u95f4\u7684\u52a0\u89e3\u9501\u8bf7\u6c42\uff0c\u5728\u672c\u5730 Node \u4e0a\u7ef4\u62a4\u9501\u7684\u72b6\u6001\u3002<code>localLocker</code> \u7684\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>// localLocker implements Dsync.NetLocker\n//\n//msgp:ignore localLocker\ntype localLocker struct {\n    mutex     sync.Mutex\n    waitMutex atomic.Int32\n    lockMap   map[string][]lockRequesterInfo\n    lockUID   map[string]string // UUID -&gt; resource map.\n\n    // the following are updated on every cleanup defined in lockValidityDuration\n    readers         atomic.Int32\n    writers         atomic.Int32\n    lastCleanup     atomic.Pointer[time.Time]\n    locksOverloaded atomic.Int64\n}\n</code></pre></p> <ul> <li><code>lockMap</code> \u7ef4\u62a4\u4e86\u9501\u7684\u72b6\u6001\uff0c\u952e\u4e3a\u9501\u7684\u8d44\u6e90\uff0c\u503c\u4e3a\u9501\u7684\u6301\u6709\u8005\u5217\u8868\uff08\u5199\u9501\u53ea\u6709\u4e00\u4e2a\uff0c\u8bfb\u9501\u53ef\u4ee5\u6709\u591a\u4e2a\uff09\u3002</li> <li><code>lockUID</code> \u7ef4\u62a4\u4e86\u9501\u7684 UUID \u5230\u8d44\u6e90\u7684\u6620\u5c04\uff0c\u952e\u4e3a\u9501\u7684 UUID\uff0c\u503c\u4e3a\u9501\u7684\u8d44\u6e90\u3002</li> </ul> <p>\u53ef\u89c1\uff0c<code>localLocker</code> \u901a\u8fc7\u5728\u5185\u5b58\u4e2d\u7ef4\u62a4\u4e24\u4e2a map \u6765\u5b9e\u73b0\u9501\u7684\u72b6\u6001\u7ba1\u7406\u3002</p>"},{"location":"blog/2025/07/26/minio-lock/#_4","title":"\u4e0d\u540c\u7684\u9501\u5b9e\u73b0","text":"<p>\u5728 MinIO \u4e2d\uff0c\u901a\u8fc7\u4e0a\u8ff0\u7684 Dsync \u5206\u5e03\u5f0f\u9501\u673a\u5236\uff0c\u5b9e\u73b0\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u9501\uff1a</p>"},{"location":"blog/2025/07/26/minio-lock/#namespace-lock","title":"Namespace Lock","text":"<p>\u57fa\u4e8e Dsync + localLocker \u5c01\u88c5\uff0c\u7528\u4e8e\u7ba1\u7406\u5bf9 Object \u7684\u9501\u3002Namespace Lock \u5b9e\u73b0\u4ee5\u4e0b\u63a5\u53e3\uff1a <pre><code>// RWLocker - locker interface to introduce GetRLock, RUnlock.\ntype RWLocker interface {\n    GetLock(ctx context.Context, timeout *dynamicTimeout) (lkCtx LockContext, timedOutErr error)\n    Unlock(lkCtx LockContext)\n    GetRLock(ctx context.Context, timeout *dynamicTimeout) (lkCtx LockContext, timedOutErr error)\n    RUnlock(lkCtx LockContext)\n}\n</code></pre> \u4ee5\u52a0\u9501\u4e3a\u4f8b\uff0c<code>GetLock</code> \u8fd4\u56de\u4e00\u4e2a <code>LockContext</code>: <pre><code>// LockContext lock context holds the lock backed context and canceler for the context.\ntype LockContext struct {\n    ctx    context.Context\n    cancel context.CancelFunc\n}\n</code></pre> \u901a\u8fc7\u8be5 <code>Context</code> \u53ef\u4ee5\u83b7\u53d6\u5f53\u524d\u9501\u662f\u5426\u5931\u53bb\u4e86 quorum \u8282\u70b9\u7684\u652f\u6301\u3002\u8be5 <code>Context</code> \u4f1a\u5728 Dsync \u7684\u9501\u5237\u65b0\u4efb\u52a1\u4e2d\u4f7f\u7528\uff0c\u5f53\u9501\u5237\u65b0\u4efb\u52a1\u5931\u8d25\uff0c\u4f1a\u8c03\u7528 <code>cancel</code> \u51fd\u6570\uff0c\u53d6\u6d88\u8be5 <code>Context</code>\u3002</p>"},{"location":"blog/2025/07/26/minio-lock/#share-lock","title":"Share Lock","text":"<p>\u57fa\u4e8e Namespace Lock \u5c01\u88c5\uff0c\u4f7f\u4e00\u4e2a\u5b9e\u4f8b\u53ef\u4ee5\u5171\u4eab\u4e00\u4e2a\u5199\u9501\u3002\u8fd9\u5728\u4e00\u4e9b\u573a\u666f\u4e0b\u5f88\u6709\u7528\uff0c\u6bd4\u5982\u626b\u63cf\u7a0b\u5e8f\u53ea\u9700\u8981\u5728\u4e00\u4e2a\u5b9e\u4f8b\u4e0a\u8fd0\u884c\uff0c\u800c\u4e0d\u9700\u8981\u5728\u6240\u6709\u5b9e\u4f8b\u4e0a\u8fd0\u884c\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u9501\u6765\u8fbe\u5230\u62a2\u4e3b\u7684\u6548\u679c\u3002</p> <pre><code>type sharedLock struct {\n    lockContext chan LockContext\n}\n</code></pre> <p>\u4e00\u4e2a Share Lock \u4f1a\u542f\u52a8\u4e00\u4e2a <code>backgroundRoutine</code> \u6765\u4fdd\u8bc1\u6301\u7eed\u7684\u83b7\u53d6\u9501\uff0c\u5e76\u50cf\u6240\u6709\u9700\u8981\u9501\u7684\u8bf7\u6c42\u8f6c\u53d1\u9501\u7684 <code>Context</code>\uff0c\u4ee5\u6b64\u5b9e\u73b0\u5171\u4eab\u9501\u7684\u6548\u679c\u3002</p> <pre><code>func (ld sharedLock) GetLock(ctx context.Context) (context.Context, context.CancelFunc) {\n    l := &lt;-ld.lockContext\n    return mergeContext(l.Context(), ctx)\n}\n</code></pre>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/","title":"MinIO: mc \u5de5\u5177\u5e38\u7528\u547d\u4ee4","text":"<p><code>mc</code> \u547d\u4ee4\u884c\u5de5\u5177\u4e3a <code>ls</code>\u3001<code>cat</code>\u3001<code>cp</code>\u3001<code>mirror</code> \u548c <code>diff</code> \u7b49 <code>UNIX</code> \u547d\u4ee4\u63d0\u4f9b\u4e86\u4e00\u79cd\u73b0\u4ee3\u66ff\u4ee3\u65b9\u6848\uff0c\u540c\u65f6\u652f\u6301\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u548c\u4e0e Amazon S3 \u517c\u5bb9\u7684\u4e91\u5b58\u50a8\u670d\u52a1\u3002</p>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_1","title":"\u5b89\u88c5","text":""},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#s3","title":"\u521b\u5efa S3 \u670d\u52a1\u522b\u540d","text":"<pre><code>mc alias set ALIAS HOSTNAME ACCESS_KEY SECRET_KEY\n</code></pre> <ul> <li><code>ALIAS</code>: S3 \u670d\u52a1\u522b\u540d\uff0c\u901a\u8fc7\u8be5\u540d\u79f0\u6807\u8bc6\u9488\u5bf9\u54ea\u4e2a S3 \u670d\u52a1\u6267\u884c\u547d\u4ee4\u3002</li> <li><code>HOSTNAME</code>: MinIO \u670d\u52a1\u5668\u4e3b\u673a\u540d</li> <li><code>ACCESS_KEY</code>: \u8bbf\u95ee\u5bc6\u94a5</li> <li><code>SECRET_KEY</code>: \u79d8\u5bc6\u5bc6\u94a5</li> </ul>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_2","title":"\u6d4b\u8bd5\u8fde\u901a\u6027","text":"<pre><code>mc admin info ALIAS\n</code></pre> <p>\u5f97\u5230\u7c7b\u4f3c\u5982\u4e0b\u8f93\u51fa\uff1a <pre><code>\u25cf  minio1:9000\n   Uptime: 23 minutes\n   Version: &lt;development&gt;\n   Network: 3/3 OK\n   Drives: 1/1 OK\n   Pool: 1\n\n\u25cf  minio2:9000\n   Uptime: 23 minutes\n   Version: &lt;development&gt;\n   Network: 3/3 OK\n   Drives: 1/1 OK\n   Pool: 1\n\n\u25cf  minio3:9000\n   Uptime: 23 minutes\n   Version: &lt;development&gt;\n   Network: 3/3 OK\n   Drives: 1/1 OK\n   Pool: 1\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Pool \u2502 Drives Usage           \u2502 Erasure stripe size \u2502 Erasure sets \u2502\n\u2502 1st  \u2502 23.5% (total: 111 GiB) \u2502 3                   \u2502 1            \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre></p>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_3","title":"\u5e38\u7528\u547d\u4ee4","text":"<p><code>mc</code>\u7684\u547d\u4ee4\u5206\u4e3a\u4ec5\u9002\u7528\u4e8e MinIO \u548c\u9002\u7528\u4e8e S3 \u670d\u52a1\u7684\u547d\u4ee4\uff0c\u5176\u4e2d <code>mc admin</code> \u7c07\u7684\u547d\u4ee4\u4ec5\u9002\u7528\u4e8e MinIO\uff0c\u4e00\u4e9b <code>mc</code> \u547d\u4ee4\u5141\u8bb8\u6a21\u5f0f\u5339\u914d\uff0c\u652f\u6301 <code>*</code>/<code>?</code> \u901a\u914d\u7b26\u3002</p> <ul> <li><code>*</code>: \u901a\u914d\u7b26\uff0c\u5339\u914d\u4efb\u610f\u5b57\u7b26\u4e32</li> <li><code>?</code>: \u901a\u914d\u7b26\uff0c\u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26</li> </ul> <p>\u6b64\u5916\uff0c\u6709\u4e00\u4e9b\u5168\u5c40\u7684\u9009\u9879\uff0c\u9002\u7528\u4e8e\u6240\u6709\u547d\u4ee4\uff1a  </p> <ul> <li><code>--config-dir</code>: \u914d\u7f6e\u76ee\u5f55\uff0c\u9ed8\u8ba4<code>~/.mc</code></li> <li><code>--debug</code>: \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f</li> <li><code>--quiet</code>: \u4e0d\u6253\u5370\u4efb\u4f55\u4fe1\u606f</li> <li><code>--json</code>: \u4ee5JSON\u683c\u5f0f\u8f93\u51fa</li> </ul>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_4","title":"\u666e\u901a\u547d\u4ee4","text":"<p>\u8be6\u60c5\uff1amc \u547d\u4ee4</p> <p><code>mc</code>\u63d0\u4f9b\u8bf8\u5982<code>cat</code>, <code>cp</code>,<code>diff</code>,<code>du</code>,<code>find</code>,<code>head</code>, <code>ls</code>, <code>mv</code>, <code>rm</code>, <code>stat</code>,<code>tree</code>\u7b49\u7c7b\u4f3cUNIX\u7684\u547d\u4ee4\uff0c\u547d\u4ee4\u8bed\u4e49\u4e5f\u7c7b\u4f3c\u3002</p> <p>\u6b64\u5916\uff0c\u9488\u5bf9 S3 \u7279\u6709\u7684 Bucket\uff0cObject \u6709\u5982\u4e0b\u547d\u4ee4\uff1a</p> <ul> <li><code>mb</code>: \u521b\u5efa Bucket</li> <li><code>rb</code>: \u5220\u9664 Bucket</li> <li><code>get</code>: \u4e0b\u8f7d Object</li> <li><code>put</code>: \u4e0a\u4f20 Object</li> <li><code>quota</code>: Bucket \u914d\u989d\u76f8\u5173</li> <li><code>ready</code>: \u68c0\u67e5\u96c6\u7fa4\u662f\u5426\u53ef\u7528</li> <li><code>ping</code>: \u68c0\u67e5\u96c6\u7fa4\u662f\u5426\u8054\u901a</li> </ul>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_5","title":"\u5e38\u7528\u793a\u4f8b","text":"<ol> <li> <p>\u68c0\u67e5\u96c6\u7fa4\u662f\u5426\u53ef\u8bfb\u5199\uff1a     <pre><code>&gt; mc ready minio --json\n---\n{\n\"status\": \"success\",\n\"alias\": \"minio\",\n\"healthy\": true,\n\"maintenanceMode\": false,\n\"writeQuorum\": 2,\n\"healingDrives\": 0,\n\"error\": null\n}\n</code></pre></p> </li> <li> <p>\u67e5\u770b\u4e00\u4e2a Bucket \u7684\u7528\u91cf\uff0cObject \u5206\u5e03\u7b49\u60c5\u51b5\uff1a     <pre><code>&gt; mc stat minio/data\n---\nName      : data\nDate      : 2025-07-01 17:11:57 CST\nSize      : N/A\nType      : folder\n\nProperties:\nVersioning: Un-versioned\nLocation: us-east-1\nAnonymous: Disabled\nILM: Disabled\n\nUsage:\n    Total size: 150 MiB\nObjects count: 1\nVersions count: 0\n\nObject sizes histogram:\n0 object(s) BETWEEN_1024B_AND_1_MB\n0 object(s) BETWEEN_1024_B_AND_64_KB\n0 object(s) BETWEEN_10_MB_AND_64_MB\n1 object(s) BETWEEN_128_MB_AND_512_MB\n0 object(s) BETWEEN_1_MB_AND_10_MB\n0 object(s) BETWEEN_256_KB_AND_512_KB\n0 object(s) BETWEEN_512_KB_AND_1_MB\n0 object(s) BETWEEN_64_KB_AND_256_KB\n0 object(s) BETWEEN_64_MB_AND_128_MB\n0 object(s) GREATER_THAN_512_MB\n0 object(s) LESS_THAN_1024_B\n</code></pre></p> </li> <li> <p>\u67e5\u770b\u4e00\u4e2a Bucket \u7684 quota \u8bbe\u7f6e\uff1a     <pre><code>&gt; mc quota info minio/data --json\n---\n{\n\"status\": \"success\",\n\"bucket\": \"data\",\n\"quota\": 5000000000,\n\"type\": \"hard\"\n}\n</code></pre></p> </li> </ol>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#admin","title":"admin \u547d\u4ee4","text":"<p>\u8be6\u60c5\uff1amc admin\u547d\u4ee4</p>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_6","title":"\u68c0\u67e5\u96c6\u7fa4\u72b6\u6001","text":"<pre><code>mc admin info ALIAS\n</code></pre>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_7","title":"\u914d\u7f6e\u7ba1\u7406","text":"<p><code>mc admin config</code> \u76f8\u5173\u547d\u4ee4\u63d0\u4f9b\u7ba1\u7406\u5458\u5bf9\u96c6\u7fa4\u914d\u7f6e\u7684\u7ba1\u7406\u3002</p> <ol> <li>\u83b7\u53d6\u914d\u7f6e     <pre><code>mc admin config get TARGET\n</code></pre></li> <li>\u8bbe\u7f6e\u914d\u7f6e     <pre><code>mc admin config set TARGET\n</code></pre></li> <li>\u91cd\u7f6e\u914d\u7f6e     <pre><code>mc admin config reset TARGET\n</code></pre></li> <li>\u5bfc\u51fa\u914d\u7f6e     <pre><code>mc admin config export TARGET\n</code></pre></li> </ol>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_8","title":"\u6570\u636e\u4fee\u590d","text":"<p><code>mc admin heal</code> \u76f8\u5173\u547d\u4ee4\u7528\u4e8e\u4fee\u590d\u6570\u636e\u7684\u76f8\u5173\u80fd\u529b\u3002</p> <pre><code>mc admin heal [FLAGS] TARGET\n</code></pre> <p>\u4fee\u590d\u4e00\u4e2aBucket\uff1a <pre><code>mc admin heal &lt;alias/bucket&gt;\n</code></pre> \u5f97\u5230\u7c7b\u4f3c\u5982\u4e0b\u7684\u7ed3\u679c\uff1a <pre><code> \u25d3  data\n    0/0 objects; 0 B in 1s\n    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n    \u2502 Green  \u2502 1 \u2502 100.0% \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2502\n    \u2502 Yellow \u2502 0 \u2502   0.0%              \u2502\n    \u2502 Red    \u2502 0 \u2502   0.0%              \u2502\n    \u2502 Grey   \u2502 0 \u2502   0.0%              \u2502\n    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> \u8be5\u547d\u4ee4\u6709\u4e00\u4e9bFlag\u662f\u9690\u85cf\u7684\uff0c\u4f8b\u5982\uff1a</p> <ul> <li><code>-r</code>: \u9012\u5f52\u7684\u4fee\u590d Target \u4e0b\u6240\u6709 Object\u3002</li> </ul> <p>\u5982\u679c\u6ca1\u6709\u6307\u5b9a bucket \u4e14\u6ca1\u6709 -r \u9009\u9879\uff0c\u8be5\u547d\u4ee4\u53ea\u4f1a\u8fd4\u56de\u540e\u53f0\u4fee\u590d\u8fdb\u7a0b\uff08\u65b0\u78c1\u76d8\u4fee\u590d\uff09\u7684\u72b6\u6001\uff0c\u5bf9\u4e8e\u6ca1\u6709\u6362\u76d8\u574f\u76d8\u7b49\u60c5\u51b5\uff0c\u6b63\u5e38\u8f93\u51fa\u4e3a\uff1a</p> <pre><code>&gt;mc admin heal minio\n---\nNo active healing is detected for new disks.\n</code></pre>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_9","title":"\u6570\u636e\u626b\u63cf","text":"<p><code>mc admin scanner</code>\u76f8\u5173\u547d\u4ee4\u63d0\u4f9b\u4e86\u63a2\u67e5\u6570\u636e\u626b\u63cf\u5668\u76f8\u5173\u72b6\u6001\u7684\u80fd\u529b\u3002</p>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#trace","title":"\u8bf7\u6c42trace","text":"<p><code>mc admin trace</code>\u76f8\u5173\u547d\u4ee4\u63d0\u4f9b\u4e86\u8bf7\u6c42\u8ddf\u8e2a\u76f8\u5173\u7684\u80fd\u529b\u3002</p> <pre><code>mc admin trace [FLAGS] TARGET\n</code></pre> <p><code>FLAGS</code>: - <code>-a, --all</code>: \u8ddf\u8e2a\u6240\u6709API\u64cd\u4f5c - <code>--call</code>: \u67d0\u4e00\u79cd\u7c7b\u578b\u7684\u8bf7\u6c42 - <code>--errors, e</code>: \u53eatrace\u9519\u8bef\u7684\u8bf7\u6c42 - <code>--filter-request</code>: \u5bf9request\u8fc7\u6ee4\uff0c\u540e\u9762\u5fc5\u987b\u8ddf<code>--filter-size</code>\u6765\u6307\u5b9a\u8fc7\u6ee4\u7684size - <code>--filter-response</code>: \u5bf9response\u8fc7\u6ee4\uff0c\u540e\u9762\u5fc5\u987b\u8ddf<code>--filter-size</code>\u6765\u6307\u5b9a\u8fc7\u6ee4\u7684size - <code>--funcname</code>: \u51fd\u6570\u540d\u8fc7\u6ee4 - <code>--method</code>: HTTP\u65b9\u6cd5\u8fc7\u6ee4 - <code>--path</code>: \u8def\u5f84\u8fc7\u6ee4 - <code>--status-code</code>: HTTP\u72b6\u6001\u7801\u8fc7\u6ee4 - <code>--request-header</code>: \u8bf7\u6c42\u5934\u8fc7\u6ee4 - <code>--response-duration</code>: \u54cd\u5e94\u65f6\u95f4\u8fc7\u6ee4 - <code>--status-code</code>: \u72b6\u6001\u7801\u8fc7\u6ee4</p> <p><code>--call</code>\u7684\u503c\u53ef\u4ee5\u662f\uff1a</p> <ul> <li><code>batch-keyrotation</code></li> <li><code>batch-replication</code></li> <li><code>bootstrap</code></li> <li><code>decommission</code></li> <li><code>ftp</code></li> <li><code>healing</code></li> <li><code>ilm</code></li> <li><code>internal</code></li> <li><code>os</code></li> <li><code>rebalance</code></li> <li><code>replication-resync</code></li> <li><code>s3</code></li> <li><code>scanner</code></li> <li><code>storage</code></li> </ul> <p>\u5e38\u89c1\u7528\u4f8b\uff1a</p> <ul> <li>trace\u6240\u6709API\u64cd\u4f5c     <pre><code>mc admin trace -a ALIAS\n</code></pre></li> <li>trace\u8fd4\u56de503Error\u7684\u8bf7\u6c42     <pre><code>mc admin trace -v --status-code 503 ALIAS\n</code></pre></li> <li>trace\u67d0\u4e00\u4e2a\u8def\u5f84\u7684\u8bf7\u6c42     <code>bash     mc admin trace --path my-bucket/my-prefix/* ALIAS</code></li> <li>trace\u8fd4\u56deSize\u5927\u4e8e1MB\u7684\u8bf7\u6c42     <pre><code>mc admin trace --filter-response --filter-size 1Mb ALIAS\n</code></pre></li> <li>trace\u5ef6\u8fdf\u5927\u4e8e5ms\u7684\u8bf7\u6c42     <pre><code>mc admin trace --filter-duration 5ms ALIAS\n</code></pre></li> <li>trace\u67d0\u4e00\u7c7b\u578b\u7684\u8bf7\u6c42     <pre><code>mc admin trace --call &lt;scanner&gt; TARGET \n</code></pre></li> </ul>"},{"location":"blog/2025/07/01/minio-mc-%E5%B7%A5%E5%85%B7%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/#_10","title":"\u65e5\u5fd7","text":"<p><code>mc admin logs</code>\u76f8\u5173\u547d\u4ee4\u63d0\u4f9b\u4e86\u65e5\u5fd7\u76f8\u5173\u7684\u80fd\u529b\u3002</p>"},{"location":"blog/2025/07/24/minio-meta/","title":"MinIO \u7b14\u8bb0\uff083\uff09: \u5143\u6570\u636e\u7ec4\u7ec7","text":""},{"location":"blog/2025/07/24/minio-meta/#object","title":"Object \u5143\u6570\u636e","text":"<p>MinIO \u7684\u5143\u6570\u636e\u5bf9\u5e94 xl.meta \u6587\u4ef6\uff0c\u8be5\u6587\u4ef6\u8bb0\u5f55\u4e86\u4e00\u4e2a Object \u7684\u6240\u6709\u5143\u6570\u636e\u6761\u76ee\uff0c\u5305\u62ec\u591a\u7248\u672c\u3001\u5220\u9664\u6807\u8bb0\u7b49\u3002</p> <p>xl.meta \u6587\u4ef6\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a</p> <pre><code>type xlMetaV2 struct {\n    versions []xlMetaV2ShallowVersion\n\n    // data will contain raw data if any.\n    // data will be one or more versions indexed by versionID.\n    // To remove all data set to nil.\n    data xlMetaInlineData\n\n    // metadata version.\n    metaV uint8\n}\n</code></pre> <ul> <li><code>versions</code>: \u591a\u7248\u672c\u5143\u6570\u636e\u6761\u76ee\u3002 </li> <li><code>data</code>: inline \u6570\u636e\uff0c\u5f53 Object \u6570\u636e\u5c0f\u4e8e 128K \u65f6\u4e0d\u4f1a\u521b\u5efa\u6570\u636e\u76ee\u5f55\uff0c\u76f4\u63a5\u5185\u8054\u5230\u5143\u6570\u636e\u4e2d\u3002</li> <li><code>metaV</code>: \u5143\u6570\u636e\u7248\u672c\uff0c\u76ee\u524d\u4e3a 3 \u3002</li> </ul> <p><code>versions</code> \u4e2d\u6bcf\u4e00\u4e2a\u5143\u7d20\u5bf9\u5e94\u4e00\u4e2a\u7248\u672c\u7684\u5143\u6570\u636e\u6761\u76ee\uff0c\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u5982\u4e0b\uff1a <pre><code>type xlMetaV2ShallowVersion struct {\n    header xlMetaV2VersionHeader\n    meta   []byte // meta\u6570\u636ebuf\n}\n</code></pre></p> <p>\u5176\u4e2d <code>header</code> \u5305\u62ec\u5b8c\u6574\u7684\u5143\u6570\u636e\u7684\u6982\u8981\u4fe1\u606f\uff0c\u5305\u62ec\u5982\u4e0b\u5b57\u6bb5\uff1a  <pre><code>type xlMetaV2VersionHeader struct {\n    VersionID [16]byte\n    ModTime   int64\n    Signature [4]byte\n    Type      VersionType\n    Flags     xlFlags\n    EcN, EcM  uint8 // Note that these will be 0/0 for non-v2 objects and older xl.meta\n}\n</code></pre> - <code>VersionID</code>: \u591a\u7248\u672c\u4e2d\u7684\u7248\u672c ID\uff0c\u6bcf\u4e2a Version \u4e0d\u540c\u3002 - <code>ModTime</code>: \u4fee\u6539\u65f6\u95f4\u3002 - <code>Signature</code>: \u6839\u636e <code>xlMetaV1Object</code> \u8ba1\u7b97\u51fa\u7684\u4e00\u4e2a\u7b7e\u540d\uff0c\u4e00\u4e2a Object \u7684\u67d0\u4e00 Version \u7684\u7b7e\u540d\u5728\u6240\u6709\u78c1\u76d8\u4e0a\u4e00\u81f4\u3002 - <code>Type</code>: \u6807\u8bc6\u5143\u6570\u636e\u7c7b\u578b\uff0c\u5305\u62ec\uff1a<code>ObjectType</code>/<code>DeleteType</code>/<code>LegacyType</code>,\u5206\u522b\u6807\u8bc6 Object \u7c7b\u578b\u3001\u5220\u9664\u6807\u8bb0\u3001\u5386\u53f2\u7248\u672c\uff08\u9700\u8981\u5411\u540e\u517c\u5bb9\uff09\u3002 - <code>Flags</code>: \u4e00\u4e9b\u6807\u5fd7\u4f4d\u7684\u6216\uff0c\u5305\u62ec\u662f\u5426\u4f7f\u7528\u4e86\u6570\u636e\u76ee\u5f55\uff08\u975e\u5185\u8054\u6216\u8005\u5b8c\u6210\u4e86 restore \u7684\u5206\u5c42\u5bf9\u8c61\uff09\u3001\u662f\u5426\u5185\u8054\u6570\u636e\u3001\u662f\u5426\u4e3a FreeVersion\uff08\u7528\u6765\u5904\u7406\u5206\u5c42\u5bf9\u8c61\uff0c\u521b\u5efa\u4e00\u4e2a FreeVersion \u7b49\u5f85\u5f02\u6b65\u5220\u9664\u8fdc\u7aef\u7684\u6570\u636e\uff09\u3002 - <code>EcN</code>, <code>EcM</code>: EC \u914d\u7f6e\u3002</p> <p>\u6839\u636e <code>meta</code> \u5b57\u6bb5\u53cd\u5e8f\u5217\u5316\u5f97\u5230\uff1a <pre><code>type xlMetaV2Version struct {\n    Type             VersionType           `json:\"Type\" msg:\"Type\"`\n    ObjectV1         *xlMetaV1Object       `json:\"V1Obj,omitempty\" msg:\"V1Obj,omitempty\"`\n    ObjectV2         *xlMetaV2Object       `json:\"V2Obj,omitempty\" msg:\"V2Obj,omitempty\"`\n    DeleteMarker     *xlMetaV2DeleteMarker `json:\"DelObj,omitempty\" msg:\"DelObj,omitempty\"`\n    WrittenByVersion uint64                `msg:\"v\"` // Tracks written by MinIO version\n}\n</code></pre> \u5b57\u6bb5\u542b\u4e49\uff1a</p> <ul> <li><code>Type</code>: \u6839\u636e <code>Type</code> \u5b57\u6bb5\u7684\u4e0d\u540c\uff0c\u90e8\u5206\u5b57\u6bb5\u53ef\u80fd\u4e3a <code>nil</code>\u3002</li> <li><code>ObjectV1</code>: \u5386\u53f2\u7248\u672c\uff0c\u73b0\u5728\u4e0d\u518d\u4f7f\u7528\uff0c\u53ea\u505a\u5411\u540e\u517c\u5bb9\u6027\u7684\u5904\u7406\u3002</li> <li><code>ObjectV2</code>: \u5f53\u524d\u7248\u672c\uff0c\u5305\u542b\u4e86 Object \u7684\u5143\u6570\u636e\u4fe1\u606f\u3002</li> <li><code>DeleteMarker</code>: \u5220\u9664\u6807\u8bb0\uff0c\u5f53 Object \u88ab\u5220\u9664\u65f6\uff0c\u4f1a\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u3002</li> <li><code>WrittenByVersion</code>: \u5199\u5165\u8be5\u5143\u6570\u636e\u7684 MinIO \u7248\u672c\uff0c\u5bf9\u5e94 Release \u65f6\u95f4\u6233\u3002</li> </ul>"},{"location":"blog/2025/07/24/minio-meta/#xlmetav2object","title":"<code>xlMetaV2Object</code> \u5b57\u6bb5\u89e3\u6790","text":"<p>\u5b8c\u6574\u7684 <code>xlMetaV2Object</code> \u6570\u636e\u7ed3\u6784\u5b9a\u4e49\u5982\u4e0b\uff1a <pre><code>type xlMetaV2Object struct {\n    VersionID          [16]byte          `json:\"ID\" msg:\"ID\"`                                    // Version ID\n    DataDir            [16]byte          `json:\"DDir\" msg:\"DDir\"`                                // Data dir ID\n    ErasureAlgorithm   ErasureAlgo       `json:\"EcAlgo\" msg:\"EcAlgo\"`                            // Erasure coding algorithm\n    ErasureM           int               `json:\"EcM\" msg:\"EcM\"`                                  // Erasure data blocks\n    ErasureN           int               `json:\"EcN\" msg:\"EcN\"`                                  // Erasure parity blocks\n    ErasureBlockSize   int64             `json:\"EcBSize\" msg:\"EcBSize\"`                          // Erasure block size\n    ErasureIndex       int               `json:\"EcIndex\" msg:\"EcIndex\"`                          // Erasure disk index\n    ErasureDist        []uint8           `json:\"EcDist\" msg:\"EcDist\"`                            // Erasure distribution\n    BitrotChecksumAlgo ChecksumAlgo      `json:\"CSumAlgo\" msg:\"CSumAlgo\"`                        // Bitrot checksum algo\n    PartNumbers        []int             `json:\"PartNums\" msg:\"PartNums\"`                        // Part Numbers\n    PartETags          []string          `json:\"PartETags\" msg:\"PartETags,allownil\"`             // Part ETags\n    PartSizes          []int64           `json:\"PartSizes\" msg:\"PartSizes\"`                      // Part Sizes\n    PartActualSizes    []int64           `json:\"PartASizes,omitempty\" msg:\"PartASizes,allownil\"` // Part ActualSizes (compression)\n    PartIndices        [][]byte          `json:\"PartIndices,omitempty\" msg:\"PartIdx,omitempty\"`  // Part Indexes (compression)\n    Size               int64             `json:\"Size\" msg:\"Size\"`                                // Object version size\n    ModTime            int64             `json:\"MTime\" msg:\"MTime\"`                              // Object version modified time\n    MetaSys            map[string][]byte `json:\"MetaSys,omitempty\" msg:\"MetaSys,allownil\"`       // Object version internal metadata\n    MetaUser           map[string]string `json:\"MetaUsr,omitempty\" msg:\"MetaUsr,allownil\"`       // Object version metadata set by user\n}\n</code></pre> \u5404\u5b57\u6bb5\u542b\u4e49\uff1a</p> <ul> <li><code>VersionID</code>: \u7248\u672c ID\uff0c\u6bcf\u4e2a Object \u7684\u4e0d\u540c\u7248\u672c\u7684 VersionID \u4e0d\u540c\u3002</li> <li><code>DataDir</code>: \u6570\u636e\u76ee\u5f55 ID\uff0c\u6807\u8bc6\u8be5\u7248\u672c\u6570\u636e\u5b58\u50a8\u5728\u54ea\u4e2a\u6570\u636e\u76ee\u5f55\u3002</li> <li><code>ErasureAlgorithm</code>: \u7ea0\u5220\u7801\u7b97\u6cd5\uff0c\u76ee\u524d\u53ea\u652f\u6301 <code>ReedSolomon</code>\u3002</li> <li><code>ErasureM</code>: \u7ea0\u5220\u7801\u6570\u636e\u5757\u6570\u3002</li> <li><code>ErasureN</code>: \u7ea0\u5220\u7801\u6821\u9a8c\u5757\u6570\u3002</li> <li><code>ErasureBlockSize</code>: \u7ea0\u5220\u7801\u5757\u5927\u5c0f\u3002</li> <li><code>ErasureIndex</code>: \u7ea0\u5220\u7801\u78c1\u76d8\u7d22\u5f15\uff0c\u6807\u8bc6\u5f53\u524d\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5757\u5728\u7ea0\u5220\u7801\u4e2d\u7684\u7d22\u5f15\u3002</li> <li><code>ErasureDist</code>: \u7ea0\u5220\u7801\u5206\u5e03\uff0c\u6807\u8bc6\u78c1\u76d8\u4e0e\u7ea0\u5220\u7801\u7d22\u5f15\u7684\u5bf9\u5e94\u5173\u7cfb\uff0c\u7b2c <code>ErasureDist[i]</code> \u4e2a\u7ea0\u5220\u7801\u7f16\u7801\u6570\u636e\u4f4d\u4e8e\u7b2c <code>i</code> \u4e2a\u78c1\u76d8\u4e0a\u3002</li> <li><code>BitrotChecksumAlgo</code>: \u4f4d\u65cb\u8f6c\u6821\u9a8c\u548c\u7b97\u6cd5\uff0c\u76ee\u524d\u53ea\u652f\u6301 <code>HighwayHash</code>\u3002</li> <li><code>PartNumbers</code>: Part \u7f16\u53f7\u96c6\u5408\uff0c\u6807\u8bc6\u8be5\u7248\u672c\u6570\u636e\u7684\u6240\u6709 Part \u5206\u7247\u7f16\u53f7\u3002</li> <li><code>PartETags</code>: Part \u7684 ETag \u96c6\u5408\u3002</li> <li><code>PartSizes</code>: Part \u5927\u5c0f\u96c6\u5408\uff0c\u6807\u8bc6\u8be5\u7248\u672c\u6570\u636e\u7684\u6bcf\u4e2a Part \u5927\u5c0f\u3002</li> <li><code>PartActualSizes</code>: Part \u5b9e\u9645\u5927\u5c0f\u96c6\u5408\uff0c\u6807\u8bc6\u8be5\u7248\u672c\u6570\u636e\u7684\u6bcf\u4e2a Part \u5b9e\u9645\u5927\u5c0f\uff08\u538b\u7f29\u540e\uff09\u3002</li> <li><code>PartIndices</code>: Part \u7d22\u5f15\u96c6\u5408\uff0c\u6807\u8bc6\u8be5\u7248\u672c\u6570\u636e\u7684\u6bcf\u4e2a Part \u7d22\u5f15\uff08\u538b\u7f29\u540e\uff09\u3002</li> <li><code>Size</code>: \u8be5\u7248\u672c Object \u5927\u5c0f\u3002</li> <li><code>ModTime</code>: \u8be5\u7248\u672c Object \u4fee\u6539\u65f6\u95f4\u3002</li> <li><code>MetaSys</code>: \u8be5\u7248\u672c Object \u5185\u90e8\u5143\u6570\u636e KV\u3002</li> <li><code>MetaUser</code>: \u8be5\u7248\u672c Object \u7528\u6237\u81ea\u5b9a\u4e49\u5143\u6570\u636e KV\u3002</li> </ul> <p>\u7cfb\u7edf\u5185\u90e8\u4f7f\u7528\u7684\u5143\u6570\u636e KV \u5bf9\u7684 Key \u4ee5 <code>x-minio-internal-</code> \u5f00\u5934\uff0c\u5e38\u89c1\u7684\u7cfb\u7edf\u5185\u90e8\u7684\u5143\u6570\u636e KV \u6709\uff1a</p> <ul> <li>\"tier-free-versionID\": FreeVersion \u5bf9\u5e94\u7684 Version ID\u3002</li> <li>\"tier-free-marker\"\uff1a \u6807\u8bc6\u8be5 Version \u662f\u5426\u4e3a FreeVersion\u3002</li> <li>\"tier-skip-fvid\"\uff1a\u6807\u8bc6\u662f\u5426\u8df3\u8fc7\u8be5 FreeVersion\uff0c\u5728\u5220\u9664\u5206\u5c42\u5b58\u50a8\u7684\u5bf9\u8c61\u65f6\u8fdc\u7aef\u5bf9\u8c61\u5df2\u7ecf\u88ab\u5220\u9664\uff08\u53ef\u80fd\u7531\u4e8e\u8fc7\u671f\u7b49\u673a\u5236\uff09\u65f6\u4f7f\u7528\u3002</li> <li>\"transition-status\": \u5206\u5c42\u5bf9\u8c61\u7684\u8f6c\u6362\u72b6\u6001\uff0c\u5305\u62ec <code>pending</code>\uff08\u8f6c\u6362\u4e2d\uff09\u3001<code>completed</code>\uff08\u8f6c\u6362\u5b8c\u6210\uff09\u3002</li> <li>\"transitioned-object\": \u5206\u5c42\u5bf9\u8c61\u5728\u8fdc\u7aef\u5bf9\u5e94\u7684 ObjectName\u3002</li> <li>\"transitioned-versionID\"\uff1a\u8be5\u7248\u672c\u7684\u5206\u5c42\u5bf9\u8c61\u5728\u8fdc\u7aef\u5bf9\u8c61\u5bf9\u5e94\u7684 VersionID\u3002</li> <li>\"transition-tier\"\uff1a\u5206\u5c42\u5b58\u50a8\u7684\u8fdc\u7aef\u5b58\u50a8\u7c7b\u3002</li> <li>\"crc\": \u4e0a\u4f20\u65f6\u8ba1\u7b97\u7684 CRC32C \u6821\u9a8c\u548c\u3002 </li> <li>\"metacache-part-%d\": List \u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684 metacache \u6570\u636e\u5757\u3002   </li> <li>\"inline-data\": \u6807\u8bc6\u662f\u5426\u5185\u8054\u6570\u636e\u3002</li> </ul> <p>// TODO:  - \"replication-reset\"  - \"replication-status\" - \"replication-timestamp\" - \"replica-status\" - \"replica-timestamp\" - \"tagging-timestamp\" - \"objectlock-retention-timestamp\" - \"objectlock-legalhold-timestamp\" - </p>"},{"location":"blog/2025/07/24/minio-meta/#xlmeta","title":"xl.meta \u6784\u9020\u53ca\u843d\u76d8","text":"<p>\u5bf9\u5e94 <code>xlStorage</code> \u7684 <code>WriteMetadata</code> \u65b9\u6cd5\u3002\u51fd\u6570\u7b7e\u540d\u4e3a\uff1a  </p> <p><pre><code>func (s *xlStorage) WriteMetadata(ctx context.Context, origvolume, volume, path string, fi FileInfo) (err error)\n</code></pre> \u5165\u53c2\uff1a</p> <ul> <li><code>volume</code>/<code>path</code>: \u6807\u8bc6\u78c1\u76d8\u4f4d\u7f6e\u3002</li> <li><code>fi</code>: \u5f85\u5199\u5165\u7684\u5143\u6570\u636e\u3002</li> </ul> <p>\u6839\u636e\u4e0a\u6587\u5bf9\u4e8e\u5143\u6570\u636e\u6570\u636e\u7ed3\u6784\u7684\u5206\u6790\uff0c\u53ef\u89c1\u591a\u4e2a\u7248\u672c\u5bf9\u5e94\u540c\u4e00\u4e2a xl.meta \u6587\u4ef6\uff0cxl.meta \u5185\u90e8\u901a\u8fc7\u4e00\u4e2a\u6570\u7ec4\u533a\u5206\u4e0d\u540c\u7684 version\u3002xl.meta \u6587\u4ef6\u7684\u5b8c\u6574\u5199\u5165\u6d41\u7a0b\u5982\u4e0b\uff1a</p>"},{"location":"blog/2025/07/24/minio-meta/#xlmetav2","title":"\u6784\u9020 <code>xlMetaV2</code>","text":"<p>\u5b8c\u6210 <code>FileInfo</code> \u5230 <code>xlMetaV2Version</code> \u7684\u6570\u636e\u8f6c\u6362\uff0c\u5224\u65ad\u662f\u5bf9\u5df2\u6709 version \u7684\u4fee\u6539\u8fd8\u662f\u65b0\u589e version\uff0c\u65b0\u589e version \u63d2\u5165 <code>xlMetaV2.versions</code> \u7684\u524d\u7aef\u3002</p>"},{"location":"blog/2025/07/24/minio-meta/#_1","title":"\u7f16\u7801","text":"<p>\u7f16\u7801 xlMetaV2\uff0c\u5177\u4f53\u7f16\u7801\u683c\u5f0f\u5982\u4e0b\uff1a</p> <pre><code>            +--------------------------------------------------------------------+\n            |                     xlHeader (magic,\"XL2  \")                       |\n            +--------------------------------------------------------------------+\n            |                  xlVersionCurrent(xl version)                      |\n            +--------------------------------------------------------------------+\n            |          Metadata Block Size (4\u5b57\u8282, \u540e\u7eed\u5143\u6570\u636e\u5757\u7684\u603b\u957f\u5ea6)             |\n            +--------------------------------------------------------------------+\n            |                                                                    |\n            |                            Metadata Block                          |\n            |                                                                    |\n            | +----------------------------------------------------------------+ |\n            | |                        xlHeaderVersion (3)                     | |\n            | +----------------------------------------------------------------+ |\n            | |                         xlMetaVersion (3)                      | |\n            | +----------------------------------------------------------------+ |\n            | |                        Number of Versions                      | |\n            | +----------------------------------------------------------------+ |\n            | |                 Version 1 Header (MessagePack)                 | |\n            | +----------------------------------------------------------------+ |\n            | |                 Version 1 Meta (MessagePack)                   | |\n            | +----------------------------------------------------------------+ |\n            | |                           ...                                  | |\n            | +----------------------------------------------------------------+ |\n            | |                         Version N Header                       | |\n            | +----------------------------------------------------------------+ |\n            | |                          Version N Meta                        | |\n            | +----------------------------------------------------------------+ |\n            |                                                                    |\n            +--------------------------------------------------------------------+\n            |                          CRC Checksum (5Byte)                      |\n            +--------------------------------------------------------------------+\n            |                             Inline Data                            |\n            +--------------------------------------------------------------------+\n</code></pre>"},{"location":"blog/2025/07/24/minio-meta/#_2","title":"\u843d\u76d8","text":"<p>\u5199\u78c1\u76d8\uff0c\u5bf9\u4e8e\u4e34\u65f6\u521b\u5efa\u7684\u5bf9\u8c61\uff08\u4f8b\u5982\u5728 <code>listObjects()</code> \u8c03\u7528\u671f\u95f4\u521b\u5efa\u7684\u5bf9\u8c61\uff09\uff0c\u53ef\u4ee5\u4e0d\u7528\u4f7f\u7528 sync \u843d\u76d8\uff0c\u5176\u4f59\u7684\u5199\u5165\u90fd\u662f sync \u7684\u3002</p>"},{"location":"blog/2025/07/24/minio-meta/#bucket","title":"Bucket \u5143\u6570\u636e","text":"<p>\u6bcf\u4e2a Bucket \u7684\u5143\u6570\u636e\u5bf9\u5e94\u4e00\u4e2a\u5728\u7cfb\u7edf\u4fdd\u7559 Bucket(<code>.minio.sys</code>) \u4e0b\u7684\u4e00\u4e2a Object\uff0c\u5177\u4f53\u540d\u79f0\u4e3a\uff1a<code>buckets/&lt;bucketname&gt;/.metadata.bin</code>\u3002\u8be5\u6587\u4ef6\u8bb0\u5f55\u4e86\u4e00\u4e2a Bucket \u6240\u6709\u7684\u5143\u6570\u636e\u4fe1\u606f\uff08\u4e0d\u5305\u62ec\u4f7f\u7528\u91cf\u7b49\u7edf\u8ba1\u4fe1\u606f\uff09\uff0c\u5bf9\u5e94\u7684\u6570\u636e\u7ed3\u6784\u4e3a\uff1a</p> <p><pre><code>type BucketMetadata struct {\n    Name                        string\n    Created                     time.Time\n    LockEnabled                 bool // legacy not used anymore.\n    PolicyConfigJSON            []byte\n    NotificationConfigXML       []byte\n    LifecycleConfigXML          []byte\n    ObjectLockConfigXML         []byte\n    VersioningConfigXML         []byte\n    EncryptionConfigXML         []byte\n    TaggingConfigXML            []byte\n    QuotaConfigJSON             []byte\n    ReplicationConfigXML        []byte\n    BucketTargetsConfigJSON     []byte\n    BucketTargetsConfigMetaJSON []byte\n\n    PolicyConfigUpdatedAt            time.Time\n    ObjectLockConfigUpdatedAt        time.Time\n    EncryptionConfigUpdatedAt        time.Time\n    TaggingConfigUpdatedAt           time.Time\n    QuotaConfigUpdatedAt             time.Time\n    ReplicationConfigUpdatedAt       time.Time\n    VersioningConfigUpdatedAt        time.Time\n    LifecycleConfigUpdatedAt         time.Time\n    NotificationConfigUpdatedAt      time.Time\n    BucketTargetsConfigUpdatedAt     time.Time\n    BucketTargetsConfigMetaUpdatedAt time.Time\n    // Add a new UpdatedAt field and update lastUpdate function\n\n    // Unexported fields. Must be updated atomically.\n  ...\n}\n</code></pre> \u7531\u4e0a\u8ff0\u5b57\u6bb5\u63cf\u8ff0\uff0cBucket \u5143\u6570\u636e\u5305\u542b\u4e00\u4e2a Bucket \u7684\u8bbf\u95ee\u7b56\u7565\u3001\u751f\u547d\u5468\u671f\u914d\u7f6e\u3001\u591a\u7248\u672c\u914d\u7f6e\u3001\u591a\u526f\u672c\u914d\u7f6e\u7b49\u7b49\u3002</p>"},{"location":"blog/2025/07/24/minio-meta/#bucket_1","title":"Bucket \u5143\u6570\u636e\u7ba1\u7406","text":"<p>Bucket \u5143\u6570\u636e\u7684\u7ba1\u7406\u5bf9\u5e94 <code>BucketMetadataSys</code> \u5b50\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u4e86\u4e00\u4e2a MinIO \u96c6\u7fa4\u6240\u6709 Bucket \u7684\u5143\u6570\u636e\uff0c\u63d0\u4f9b\u4e86 BucketMeta \u7684\u8bfb\u5199\u63a5\u53e3\u3002 <pre><code>type BucketMetadataSys struct {\n    objAPI ObjectLayer\n\n    sync.RWMutex\n    initialized bool\n    group       *singleflight.Group\n    metadataMap map[string]BucketMetadata \n}\n</code></pre> \u5176\u4e2d <code>metadataMap</code> \u5b57\u6bb5\u7f13\u5b58\u4e86\u6240\u6709 Bucket \u7684\u5143\u6570\u636e\uff0ckey \u4e3a Bucket \u540d\u79f0\uff0cvalue \u4e3a Bucket \u5143\u6570\u636e\u3002</p> <p>\u8be5\u5b50\u6a21\u5757\u6709\u4e00\u4e2a\u5168\u5c40\u5b9e\u4f8b\uff1a <pre><code>globalBucketMetadataSys *BucketMetadataSys\n</code></pre> \u8be5\u5b9e\u4f8b\u5728\u670d\u52a1\u542f\u52a8\u65f6\u521b\u5efa\uff0c\u7cfb\u7edf\u542f\u52a8\u65f6\u9996\u5148\u83b7\u53d6\u5168\u90e8\u7684 Bucket\uff0c\u7136\u540e\u518d\u7531 <code>BucketMetadataSys</code> \u53bb\u5c06 Bucket \u5143\u6570\u636e\u52a0\u8f7d\u5230\u5185\u5b58\u4e2d\u3002\u521d\u59cb\u52a0\u8f7d\u5b8c\u6210\u540e\uff0c\u8fd8\u4f1a\u542f\u52a8\u4e00\u4e2a\u5b9a\u65f6\u4efb\u52a1\u53bb\u5237\u65b0 Bucket \u7684\u5143\u6570\u636e\u3002</p>"},{"location":"blog/2025/07/30/minio-scanner/","title":"MinIO \u7b14\u8bb0\uff089\uff09\uff1a\u5bf9\u8c61\u626b\u63cf","text":"<p>MinIO \u4e2d\u7684\u6570\u636e\u626b\u63cf\u6a21\u5757\uff08Scanner\uff09\u7528\u6765\u5b9a\u671f\u626b\u63cf\u5bf9\u8c61\u6765\u6267\u884c\u4fee\u590d\u4ee5\u53ca\u5176\u4ed6\u64cd\u4f5c\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u7edf\u8ba1\u78c1\u76d8\u4f7f\u7528\u91cf\u3002</li> <li>\u5e94\u7528 ILM \u89c4\u5219\u3002</li> <li>\u6267\u884c\u5b58\u50a8\u6876\u6216\u7ad9\u70b9\u590d\u5236\u3002</li> <li>\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u635f\u574f\uff0c\u6267\u884c\u4fee\u590d\u3002</li> </ul>"},{"location":"blog/2025/07/30/minio-scanner/#scanner","title":"Scanner \u5b50\u7cfb\u7edf","text":""},{"location":"blog/2025/07/30/minio-scanner/#_1","title":"\u4e3b\u6d41\u7a0b","text":"<p>MinIO \u542f\u52a8\u65f6\u4f1a\u542f\u52a8\u4e00\u4e2a\u542f\u52a8 <code>initDataScanner</code> \u7684\u534f\u7a0b\uff0c\u7528\u4e8e\u5c1d\u8bd5\u83b7\u53d6 Scanner \u7684\u6267\u884c\u6743\u3002<code>runDataScanner</code> \u51fd\u6570\u901a\u8fc7\u5168\u5c40\u7684 Leader \u9501\uff08\u4e00\u4e2a shared lock\uff09\u6765\u786e\u4fdd\u96c6\u7fa4\u5185\u53ea\u6709\u4e00\u4e2a Scanner \u5b9e\u4f8b\u5728\u8fd0\u884c\u3002\u5f53\u76ee\u524d\u7684 Scanner \u6240\u5728\u5b9e\u4f8b\u4e22\u5931 Leader \u4e4b\u540e\uff0c<code>runDataScanner</code> \u51fd\u6570\u4f1a\u9000\u51fa\uff0c\u96c6\u7fa4\u5f00\u59cb\u901a\u8fc7\u62a2\u9501\u7684\u65b9\u5f0f\u6765\u83b7\u53d6 Scanner \u7684\u6267\u884c\u6743\u3002</p> <pre><code>// initDataScanner will start the scanner in the background.\nfunc initDataScanner(ctx context.Context, objAPI ObjectLayer) {\n    go func() {\n        r := rand.New(rand.NewSource(time.Now().UnixNano()))\n        // Run the data scanner in a loop\n        for {\n            runDataScanner(ctx, objAPI)\n            duration := time.Duration(r.Float64() * float64(scannerCycle.Load()))\n            if duration &lt; time.Second {\n                // Make sure to sleep at least a second to avoid high CPU ticks.\n                duration = time.Second\n            }\n            time.Sleep(duration)\n        }\n    }()\n}\n</code></pre> <p><code>runDataScanner</code> \u62a2\u5230\u5168\u5c40\u9501\u4e4b\u540e\uff0c\u4f1a\u542f\u52a8\u4e00\u4e2a\u5faa\u73af\uff0c\u6bcf\u6b21\u5faa\u73af\u7684\u4e3b\u903b\u8f91\u4e3a\uff1a <pre><code>graph TD\n  A[\u5f00\u59cb] --&gt; B[\u83b7\u53d6\u626b\u63cf\u6a21\u5f0f];\n  B--&gt;C[\u542f\u52a8\u78c1\u76d8\u7528\u91cf\u7ed3\u679c\u641c\u96c6\u534f\u7a0b];\n  B--&gt;D[\u626b\u63cf\u4e3b\u903b\u8f91];\n  D--&gt;E[\u8bb0\u5f55\u626b\u63cf\u5468\u671f\u7684\u76f8\u5173\u6307\u6807];\n  E--&gt;F[\u6301\u4e45\u5316\u626b\u63cf\u5468\u671f\u76f8\u5173\u4fe1\u606f];</code></pre></p> <p>\u5176\u4e2d\u626b\u63cf\u6a21\u5f0f\u662f\u9488\u5bf9\u5bf9\u8c61\u4fee\u590d\u65f6\u7684\u68c0\u67e5\u65b9\u5f0f\u7684\uff0c\u5305\u62ec\uff1a</p> <ul> <li>HealNormalScan\uff1a\u6b63\u5e38\u626b\u63cf\u6a21\u5f0f\uff0c\u4f1a\u68c0\u67e5\u5bf9\u8c61\u662f\u5426\u4e22\u5931\u83b7\u53d6\u8fc7\u671f\u3002</li> <li>HealDeepScan\uff1a\u6df1\u5ea6\u626b\u63cf\u6a21\u5f0f\uff0c\u4f1a\u68c0\u67e5 bitrot \u9519\u8bef\u3002</li> </ul> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cScanner \u4e0d\u4f1a\u542f\u7528 DeepScan \u6a21\u5f0f\uff0c\u53ef\u4ee5\u901a\u8fc7\u73af\u5883\u53d8\u91cf <code>MINIO_HEAL_BITROTSCAN</code> \u6216 <code>heal bitrotscan</code> \u914d\u7f6e\u9879\u6765\u914d\u7f6e\uff0c\u503c\u4e3a\uff1a</p> <ul> <li>0\uff1aHealDeepScan \u6a21\u5f0f\u3002</li> <li>-1\uff1aHealNormalScan \u6a21\u5f0f\uff08\u9ed8\u8ba4\uff09\u3002</li> <li>[x]m\uff1a\u542f\u7528 DeepScan \u6a21\u5f0f\uff0c\u4e14\u626b\u63cf\u65f6\u95f4\u95f4\u9694\u4e3a x \u6708\uff0c\u4e0d\u80fd\u5c0f\u4e8e 1 \u4e2a\u6708\u4e00\u6b21\u3002</li> </ul> <p>\u5f53\u542f\u7528\u4e86\u5b9a\u671f\u4f7f\u7528 DeepScan \u65f6\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6bcf\u4e2a Object \u90fd\u4f1a\u88ab\u68c0\u67e5\u5230\uff0c\u5f53\u5b9a\u671f\u65f6\u95f4\u5230\u4e86\u4e4b\u540e\u4f1a\u8fde\u7eed\u4ee5 1024 \u6b21 DeepScan \u6a21\u5f0f\u8fdb\u884c\u626b\u63cf\uff0c\u8fd9\u4e2a\u6570\u503c\u4e0e\u540e\u9762 Object \u88ab\u9009\u62e9\u8fdb\u884c\u4fee\u590d\u64cd\u4f5c\u7684\u5468\u671f\u76f8\u5173\u3002</p>"},{"location":"blog/2025/07/30/minio-scanner/#_2","title":"\u78c1\u76d8\u7528\u91cf\u7ed3\u679c\u641c\u96c6","text":"<p>\u8be5\u90e8\u5206\u4f1a\u542f\u52a8\u4e00\u4e2a\u534f\u7a0b\uff0c\u8bfb\u53d6\u626b\u63cf\u4e3b\u6d41\u7a0b\u8f93\u51fa\u7684\u7ed3\u679c\uff0c\u5c06\u7ed3\u679c\u6301\u4e45\u5316\u5230 <code>.minio.sys/buckets/.usage.json</code> \u5bf9\u8c61\u4e2d\u3002\u5177\u4f53\u7684\u5185\u5bb9\u5305\u62ec\u5982\u4e0b\u4e00\u4e9b\u7edf\u8ba1\u4fe1\u606f\uff1a</p> <pre><code>classDiagram\n    class DataUsageInfo {\n        +uint64 TotalCapacity // \u603b\u5bb9\u91cf\n        +uint64 TotalUsedCapacity // \u5df2\u4f7f\u7528\u5bb9\u91cf\n        +uint64 TotalFreeCapacity // \u53ef\u7528\u5bb9\u91cf\n        +time.Time LastUpdate // \u6700\u540e\u66f4\u65b0\u65f6\u95f4\n        +uint64 ObjectsTotalCount // \u603b\u5bf9\u8c61\u6570\n        +uint64 VersionsTotalCount // \u603b\u7248\u672c\u6570\n        +uint64 DeleteMarkersTotalCount // \u603b\u5220\u9664\u6807\u8bb0\u6570\n        +uint64 ObjectsTotalSize // \u603b\u5bf9\u8c61\u5927\u5c0f\n        +map~string, BucketTargetUsageInfo~ ReplicationInfo // \u590d\u5236\u4fe1\u606f\n        +uint64 BucketsCount // \u603b\u5b58\u50a8\u6876\u6570\n        +map~string, BucketUsageInfo~ BucketsUsage // \u5b58\u50a8\u6876\u4f7f\u7528\u4fe1\u606f\n        +map~string, uint64~ BucketSizes // \u5b58\u50a8\u6876\u5927\u5c0f\n        +allTierStats TierStats // \u5b58\u50a8\u5c42\u7edf\u8ba1\u4fe1\u606f\uff08\u5bf9\u5e94\u751f\u547d\u5468\u671f\u89c4\u5219\uff09\n    }\n    class BucketTargetUsageInfo\n    class BucketUsageInfo\n    class allTierStats\n\n    DataUsageInfo --* BucketTargetUsageInfo : ReplicationInfo\n    DataUsageInfo --* BucketUsageInfo : BucketsUsage\n    DataUsageInfo --* allTierStats : TierStats</code></pre>"},{"location":"blog/2025/07/30/minio-scanner/#_3","title":"\u626b\u63cf\u4e3b\u903b\u8f91","text":"<p>\u5728\u6574\u4e2a\u96c6\u7fa4\u5c42\u9762\uff1a <pre><code>graph TD\n  A[\u5f00\u59cb] --&gt; B[\u83b7\u53d6\u6240\u6709\u5b58\u50a8\u6876];\n  B --\u5e76\u53d1\u8fdb\u884c--&gt; C[\u5728\u6bcf\u4e2a Set \u4e0a\u626b\u63cf\u6240\u6709 Bucket];\n  B --&gt; D[\u542f\u52a8\u7528\u91cf\u626b\u63cf\u7ed3\u679c\u641c\u96c6\u53ca\u5408\u5e76\u534f\u7a0b];\n  C --&gt; E;\n  D --&gt; E[\"wg.wait()\"];\n  E --&gt; F[\u7ed3\u675f];</code></pre> \u5728\u6bcf\u4e00\u4e2a ErasureSet \u5c42\u9762\uff0c\u4f1a\u6839\u636e\u626b\u63cf\u7684\u5e76\u53d1\u6570\u5c06\u6240\u6709 Bucket \u8fdb\u884c\u5206\u7ec4\u8fdb\u884c\u626b\u63cf\u3002\u5e76\u53d1\u5ea6\u8ba1\u7b97\u5982\u4e0b\uff1a <pre><code>// Restrict parallelism for disk usage scanner\n// upto GOMAXPROCS if GOMAXPROCS is &lt; len(disks)\nmaxProcs := runtime.GOMAXPROCS(0)\nif maxProcs &lt; len(disks) {\n  disks = disks[:maxProcs]\n}\n</code></pre> \u4e3b\u8981\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p><pre><code>graph TD\n  A[\u5f00\u59cb] --&gt; B[\u6253\u4e71 Bucket \u987a\u5e8f\uff0c\u5199\u5165\u5bb9\u91cf\u4e3a maxProcs \u7684channel];\n  B --&gt; C[\u5e76\u53d1\u542f\u52a8 maxProcs \u4e2a\u534f\u7a0b\uff0c\u6d88\u8d39 channel];\n  C --&gt; D[\u5bf9\u6d88\u8d39\u62ff\u5230\u7684 Bucket \u6267\u884c\u626b\u63cf];\n  A --&gt; E[\u542f\u52a8 Bucket \u626b\u63cf\u7ed3\u679c\u63a5\u6536\u534f\u7a0b];\n  D --&gt; F[\"wg.Wait()\"];\n  E --&gt; F;</code></pre> \u9488\u5bf9\u6bcf\u4e2a Bucket \u7684\u626b\u63cf\u5165\u53e3 API \u4e3a\u7531 <code>StorageAPI</code> \u63d0\u4f9b\u7684\uff1a <pre><code>NSScanner(ctx context.Context, cache dataUsageCache, updates chan&lt;- dataUsageEntry, scanMode madmin.HealScanMode, shouldSleep func() bool) (dataUsageCache, error)\n</code></pre> \u6838\u5fc3\u5b9e\u73b0\u662f\u901a\u8fc7 <code>scanDataFolder</code> \u65b9\u6cd5\uff0c\u626b\u63cf Bucket \u4e0b\u7684\u5bf9\u8c61\uff0c\u5e76\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u56de\u8c03\u51fd\u6570\u5185\u90e8\u5b9e\u73b0\u4fee\u590d\u3001\u751f\u547d\u5468\u671f\u89c4\u5219\u68c0\u67e5\u7b49\u529f\u80fd\u3002\u6bcf\u6b21\u626b\u63cf\u5e76\u4e0d\u4f1a\u628a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u626b\u63cf\u5230\uff0c\u6709\u4e00\u4e9b skip \u7684\u903b\u8f91\u3002\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd <code>scanDataFolder</code> \u7684\u5b9e\u73b0\u3002</p> <p>\u9996\u5148\u4ece\u770b\u8d2f\u7a7f\u6574\u4e2a\u626b\u63cf\u8fc7\u7a0b\u7684 <code>dataUsageCache</code> \u7ed3\u6784\u4f53\uff0c\u8be5\u7ed3\u6784\u4f53\u5305\u542b\u4e86\u4e00\u4e2a Bucket \u4e0b\u7684\u6240\u6709\u7528\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u6301\u4e45\u5316\u5728 <code>.minio.sys/buckets/&lt;bucket-name&gt;/..usage-cache.bin</code> \u5bf9\u8c61\u4e2d\uff0c\u5305\u542b\u4ee5\u4e0b\u6570\u636e\uff1a <pre><code>classDiagram\n    class dataUsageCache {\n        +dataUsageCacheInfo Info\n        +map~string, dataUsageEntry~ Cache\n    }\n    class dataUsageCacheInfo {\n        +string Name\n        +uint32 NextCycle\n        +time.Time LastUpdate\n        +bool SkipHealing\n        +lifecycle_Lifecycle lifeCycle\n        +chan_dataUsageEntry updates\n        +replicationConfig replication\n    }\n    class dataUsageEntry {\n        +dataUsageHashMap Children\n        +int64 Size\n        +uint64 Objects\n        +uint64 Versions\n        +uint64 DeleteMarkers\n        +sizeHistogram ObjSizes\n        +versionsHistogram ObjVersions\n        +allTierStats AllTierStats\n        +bool Compacted\n    }\n    class lifecycle_Lifecycle\n    class replicationConfig\n    class dataUsageHashMap\n    class sizeHistogram\n    class versionsHistogram\n    class allTierStats\n    class chan_dataUsageEntry\n\n    dataUsageCache --* dataUsageCacheInfo\n    dataUsageCache --* dataUsageEntry\n    dataUsageCacheInfo --* lifecycle_Lifecycle\n    dataUsageCacheInfo --* replicationConfig\n    dataUsageCacheInfo ..&gt; chan_dataUsageEntry\n    dataUsageEntry --* dataUsageHashMap\n    dataUsageEntry --* sizeHistogram\n    dataUsageEntry --* versionsHistogram\n    dataUsageEntry --* allTierStats</code></pre></p> <p>Cache \u662f\u4e00\u4e2a\u4ee5 Bucket \u76ee\u5f55\u4e3a\u6839\u7684\u6811\u5f62\u7ed3\u6784\uff0c\u901a\u8fc7 Map \u6241\u5e73\u5316\uff0c\u6240\u6709\u7684 Node \u90fd\u5728 Cache \u8fd9\u4e2a Map \u4e2d\uff0c\u6bcf\u4e2a Entry \u7ef4\u62a4\u81ea\u5df1\u7684 Children \u3002\u6811\u7684\u53f6\u5b50\u4e0d\u4e00\u5b9a\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u800c\u53ef\u80fd\u662f\u5176\u4e0b\u6240\u6709\u5bf9\u8c61\u7684\u7edf\u8ba1\u4fe1\u606f\u5408\u5e76\u540e\u7684\u7ed3\u679c\u3002</p> <p>\u6574\u4e2a\u626b\u63cf\u8fc7\u7a0b\u662f\u4e00\u4e2a\u6df1\u5ea6\u4f18\u5148\u904d\u5386\uff0c\u5728\u6bcf\u4e00\u5c42\u7ea7\uff0c\u57fa\u672c\u6d41\u7a0b\u4e3a\uff1a <pre><code>graph TD\n  A[\u5f00\u59cb] --&gt; B[\u83b7\u53d6\u5f53\u524d\u76ee\u5f55\u4e0b\u6240\u6709 Entry];\n  B --&gt; C{Entry \u662f\u76ee\u5f55\uff1f};\n  C --Y--&gt; D{\u4e0a\u6b21\u626b\u63cf\u65f6\u662f\u5426\u5df2\u5b58\u5728\uff1f};\n  D --Y--&gt; E[\u52a0\u5165 exist \u96c6\u5408];\n  D --N--&gt; F[\u52a0\u5165 new \u96c6\u5408];\n  C --N--&gt; G[\u8be5\u5c42\u7ea7\u7ed3\u675f\uff0c\u5ffd\u7565\u53d1\u73b0\u7684\u5176\u4ed6\u76ee\u5f55\uff0c\u5bf9\u8be5Entry\u8c03\u7528\u56de\u8c03];\n  E --&gt; H[\u5224\u65ad\u662f\u5426\u5e94\u8be5 Compact];\n  F --&gt; H;\n  H --&gt; I[\u9012\u5f52\u6df1\u5165 new \u96c6\u5408];\n  H --&gt; J[\u9012\u5f52\u6df1\u5165 exist \u96c6\u5408];\n  J --&gt; M{\u7236\u7ea7\u4e0d\u662f Compact\uff0c\u4e14\u5f53\u524d Entry \u5728\u4e0a\u6b21 Cache \u4e2d Compact};\n\n  M --N--&gt; K[\u6839\u636e Compact \u5904\u7406 Cache \u4e2d\u7684\u7236\u5b50\u5173\u7cfb];\n  M --Y--&gt; N[16 \u8f6e\u626b\u63cf\u4e00\u6b21\uff0c\u5176\u4f59\u8df3\u8fc7];  \n  I--&gt;K;\n  K --&gt; L[\u8fd4\u56de];\n  G --&gt; L[\u8fd4\u56de];\n  N --&gt; L[\u8fd4\u56de];</code></pre> Compact \u4f1a\u53d1\u751f\u5728\uff1a</p> <ul> <li>\u76ee\u5f55\uff08\u5305\u542b\u5b50\u76ee\u5f55\uff09\u4e0b\u5305\u542b\u5c11\u4e8e <code>dataScannerCompactLeastObject</code>\uff08500\uff09 \u4e2a Object</li> <li>\u76ee\u5f55\uff08\u975e Bucket \u5c42\u7ea7\uff09\u5305\u542b\u81f3\u5c11 <code>dataScannerCompactAtFolders</code>\uff082500\uff09 \u4e2a\u5b50\u76ee\u5f55\u3002</li> <li>\u76ee\u5f55\u53ea\u5305\u542b <code>Object</code>\uff08\u5b8c\u6574\u7684 Object \u76ee\u5f55\uff0c\u4e0d\u662f\u6307 xl.meta \u90a3\u4e00\u5c42\uff09\u6ca1\u6709\u5176\u4ed6\u5b50\u76ee\u5f55\u3002</li> <li>\u76ee\u5f55\uff08\u5305\u542b Bucket \u76ee\u5f55\uff09\u4e0b\u5305\u542b\u8d85\u8fc7 <code>dataScannerForceCompactAtFolders</code> \uff08250_000\uff09\u4e2a\u5b50\u76ee\u5f55\u3002</li> </ul>"},{"location":"blog/2025/07/30/minio-scanner/#scanitem","title":"ScanItem \u64cd\u4f5c","text":"<p>\u4e0a\u8ff0\u626b\u63cf\u4e3b\u903b\u8f91\u7684\u9012\u5f52\u57fa\u662f\u53d1\u73b0\u4e00\u4e2a xl.meta \u6587\u4ef6\uff0c\u5373\u4e00\u4e2a ScanItem\u3002\u5728 Scanner \u5165\u53e3\u5904\uff0c\u5bf9\u6bcf\u4e00\u4e2a ScanItem \u4f1a\u6ce8\u518c\u4e00\u4e2a\u56de\u8c03\uff0c\u56de\u8c03\u5185\u90e8\u5904\u7406\u5404\u79cd\u64cd\u4f5c\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u4fee\u590d\u5bf9\u8c61</li> <li>\u751f\u547d\u5468\u671f\u89c4\u5219</li> <li>\u526f\u672c\u64cd\u4f5c</li> </ul> <p>\u5bf9\u4e8e\u4fee\u590d\u3001\u526f\u672c\u64cd\u4f5c\uff1a\u4f9d\u636e Item \u662f\u5426\u88ab\u9009\u4e2d\uff0c\u51b3\u5b9a\u662f\u5426\u8fdb\u884c\u4fee\u590d\u64cd\u4f5c\uff0c\u6bcf\u4e2a Object \u4f1a\u5728 1024 \u6b21\u626b\u63cf\u4e2d\u4fee\u590d\u4e00\u6b21\u3002</p> <p>\u5bf9\u4e8e\u751f\u547d\u5468\u671f\u89c4\u5219\u7684\u8fd0\u7528\uff1a\u4f1a\u6839\u636e\u89c4\u5219\u8fdb\u884c\u5339\u914d\u8ba1\u7b97\uff0c\u751f\u6210\u5bf9\u5e94\u7684\u52a8\u4f5c\uff0c\u7531\u4e8e\u626b\u63cf Compact \u548c Skip \u7684\u673a\u5236\u5b58\u5728\uff0c\u6bcf\u4e2a Object \u81f3\u5c11\u4f1a\u5728 16 \u8f6e\u626b\u63cf\u4e2d\u88ab\u626b\u63cf\u5230\u3002</p>"},{"location":"blog/2025/07/03/reed-solomon/","title":"Reed-Solomon \u7b97\u6cd5\u7b80\u4ecb","text":"<p>EC \u7f16\u7801\u662f\u4e00\u79cd\u6570\u636e\u5197\u4f59\u7f16\u7801\u6280\u672f\uff0c\u7528\u4e8e\u5728\u6570\u636e\u4f20\u8f93\u8fc7\u7a0b\u4e2d\u589e\u52a0\u5197\u4f59\u6570\u636e\uff0c\u4ee5\u63d0\u9ad8\u6570\u636e\u7684\u53ef\u9760\u6027\u548c\u5bb9\u9519\u6027\u3002EC \u7f16\u7801\u5c06\u6570\u636e\u5206\u4e3a K \u4e2a\u6570\u636e\u5757\u548c M \u4e2a\u6821\u9a8c\u5757\uff0c\u5176\u4e2d K+M \u7b49\u4e8e\u6570\u636e\u5757\u603b\u6570\u3002\u6700\u591a\u53ef\u4ee5\u5bb9\u5fcd M \u4e2a\u6570\u636e\u5757\u7684\u4e22\u5931\u3002</p>"},{"location":"blog/2025/07/03/reed-solomon/#_1","title":"\u57fa\u672c\u539f\u7406","text":"<p>\u4ee5\u4e0b\u56fe\u7684\u6570\u636e\u4e3a\u4f8b\uff0c\u901a\u8fc7 EC:2 \u7f16\u7801\uff0c\u8fdb\u884c EC \u7f16\u7801\u3002</p> <p></p> <p>\u9996\u5148\uff0c\u4e0a\u8ff0\u539f\u6570\u636e\u88ab\u5206\u4e3a 4 \u4e2a\u6570\u636e\u5757\uff0c\u5bf9\u5e94\u56fe\u4e2d\u7684\u4e00\u884c\uff0cEC \u7f16\u7801\u4f1a\u521b\u5efa\u4e00\u4e2a\u7f16\u7801\u77e9\u9635\u4e0e\u539f\u6570\u636e\u5206\u7247\u76f8\u4e58:</p> <p></p> <p>\u5f97\u5230\u7684\u7ed3\u679c\u77e9\u9635\u6bd4\u539f\u6570\u636e\u591a\u4e24\u884c\uff0c\u5bf9\u5e94\u4e24\u4e2a\u6821\u9a8c\u5206\u7247\u3002</p> <p>\u6211\u4eec\u6a21\u62df\u6570\u636e\u4e22\u5931\uff0c\u5212\u6389\u5176\u4e2d\u4e24\u884c\uff1a</p> <p></p> <p>\u7531\u4e8e\u77e9\u9635\u6bcf\u884c\u76f8\u4e92\u72ec\u7acb\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u5982\u4e0b\u7b49\u5f0f\uff1a</p> <p></p> <p>\u7531\u4e8e\u7f16\u7801\u77e9\u9635\u53ef\u9006\uff0c\u6211\u4eec\u6784\u9020\u7f16\u7801\u77e9\u9635\u7684\u9006\u77e9\u9635\uff0c\u7b49\u5f0f\u4e24\u8fb9\u5206\u522b\u4e58\u9006\u77e9\u9635\uff1a</p> <p></p> <p>\u77e9\u9635\u548c\u5176\u9006\u77e9\u9635\u76f8\u4e58\u7b49\u4e8e\u5355\u4f4d\u77e9\u9635\uff0c\u5373\uff1a</p> <p></p> <p>\u6700\u7ec8\u5f97\u5230\uff1a</p> <p></p> <p>\u5982\u6b64\u4fbf\u5f97\u5230\u6062\u590d\u540e\u7684\u539f\u6570\u636e\u3002</p>"},{"location":"blog/2025/07/03/reed-solomon/#_2","title":"\u53c2\u8003","text":"<ul> <li>[reed-solomon \u7b97\u6cd5\u4ecb\u7ecd]https://www.backblaze.com/blog/reed-solomon/</li> </ul>"},{"location":"blog/2025/07/10/systemd/","title":"Linux: Systemd","text":"<p>\u672c\u6587\u8bb0\u5f55\u4e00\u4e0b systemd \u57fa\u672c\u7684\u4f7f\u7528\u65b9\u6cd5\u3002</p>"},{"location":"blog/2025/07/10/systemd/#systemd","title":"Systemd \u6982\u8ff0","text":"<p>systemd \u662f Linux \u7cfb\u7edf\u5de5\u5177\uff0c\u7528\u6765\u542f\u52a8\u5b88\u62a4\u8fdb\u7a0b\u3002\u5386\u53f2\u4e0a\uff0cLinux \u4e0b\u5b88\u62a4\u8fdb\u7a0b\u4e00\u76f4\u91c7\u7528 init \u8fdb\u7a0b\u53bb\u542f\u52a8\uff0c\u4f8b\u5982\u4ee5\u4e0b\u547d\u4ee4\uff1a <pre><code>$ sudo /etc/init.d/apache2 start\n</code></pre> \u6216\u8005 <pre><code>$ service apache2 start\n</code></pre> service \u547d\u4ee4\u672c\u8eab\u662f\u4e00\u4e2a shell \u811a\u672c\uff0c\u5b83\u5728 /etc/init.d/ \u76ee\u5f55\u67e5\u627e\u6307\u5b9a\u7684\u670d\u52a1\u811a\u672c\uff0c\u7136\u540e\u8c03\u7528\u8be5\u670d\u52a1\u811a\u672c\u6765\u5b8c\u6210\u4efb\u52a1\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u6709\u4e24\u4e2a\u7f3a\u70b9:</p> <ul> <li>\u542f\u52a8\u65f6\u95f4\u957f\uff1ainit \u8fdb\u7a0b\u662f\u4e32\u884c\u542f\u52a8\uff0c\u53ea\u6709\u524d\u4e00\u4e2a\u8fdb\u7a0b\u542f\u52a8\u5b8c\uff0c\u624d\u4f1a\u542f\u52a8\u4e0b\u4e00\u4e2a\u8fdb\u7a0b\uff1b</li> <li>\u542f\u52a8\u811a\u672c\u590d\u6742\uff1ainit \u8fdb\u7a0b\u53ea\u662f\u6267\u884c\u542f\u52a8\u811a\u672c\uff0c\u4e0d\u7ba1\u5176\u4ed6\u4e8b\u60c5\u3002\u811a\u672c\u9700\u8981\u81ea\u5df1\u5904\u7406\u5404\u79cd\u60c5\u51b5\uff0c\u8fd9\u5f80\u5f80\u4f7f\u5f97\u811a\u672c\u53d8\u5f97\u5f88\u957f\u3002</li> </ul> <p>Systemd \u5c31\u662f\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u800c\u8bde\u751f\u7684\u3002\u5b83\u7684\u8bbe\u8ba1\u76ee\u6807\u662f\uff0c\u4e3a\u7cfb\u7edf\u7684\u542f\u52a8\u548c\u7ba1\u7406\u63d0\u4f9b\u4e00\u5957\u5b8c\u6574\u7684\u89e3\u51b3\u65b9\u6848\u3002\u6839\u636e Linux \u60ef\u4f8b\uff0c\u5b57\u6bcd d \u662f\u5b88\u62a4\u8fdb\u7a0b\uff08daemon\uff09\u7684\u7f29\u5199\u3002 \u300cSystemd \u300d\u8fd9\u4e2a\u540d\u5b57\u7684\u542b\u4e49\uff0c\u5c31\u662f\u5b83\u8981\u5b88\u62a4\u6574\u4e2a\u7cfb\u7edf\u3002</p> <p>\u4f7f\u7528 Systemd \u5c31\u65e0\u9700\u518d\u7528 init \u4e86\uff0csystemd \u53d6\u4ee3\u4e86 initd \u6210\u4e3a\u7cfb\u7edf\u7684\u7b2c\u4e00\u4e2a\u8fdb\u7a0b\uff08PID=1\uff09\uff0c\u5176\u4ed6\u8fdb\u7a0b\u90fd\u662f\u5b83\u7684\u5b50\u8fdb\u7a0b\u3002</p>"},{"location":"blog/2025/07/10/systemd/#unit","title":"Unit","text":"<p>Systemd \u53ef\u4ee5\u7ba1\u7406\u6240\u6709\u7edf\u8d44\u6e90\u3002\u4e0d\u540c\u7684\u8d44\u6e90\u7edf\u79f0\u4e3a Unit\uff08\u5355\u4f4d\uff09\u3002</p> <p>Unit \u4e00\u5171\u5206\u621012\u79cd\uff1a</p> <ul> <li>Service Unit\uff1a\u7cfb\u7edf\u670d\u52a1</li> <li>Target Unit\uff1a\u591a\u4e2a Unit \u6784\u6210\u7684\u4e00\u4e2a\u7ec4</li> <li>Device Unit\uff1a\u786c\u4ef6\u8bbe\u5907</li> <li>Mount Unit\uff1a\u6587\u4ef6\u7cfb\u7edf\u7684\u6302\u8f7d\u70b9</li> <li>Automount Unit\uff1a\u81ea\u52a8\u6302\u8f7d\u70b9</li> <li>Path Unit\uff1a\u6587\u4ef6\u6216\u8def\u5f84</li> <li>Scope Unit\uff1a\u4e0d\u662f\u7531 Systemd \u542f\u52a8\u7684\u5916\u90e8\u8fdb\u7a0b</li> <li>Slice Unit\uff1a\u8fdb\u7a0b\u7ec4</li> <li>Snapshot Unit\uff1aSystemd \u5feb\u7167\uff0c\u53ef\u4ee5\u5207\u56de\u67d0\u4e2a\u5feb\u7167</li> <li>Socket Unit\uff1a\u8fdb\u7a0b\u95f4\u901a\u4fe1\u7684 socket</li> <li>Swap Unit\uff1aswap \u6587\u4ef6</li> <li>Timer Unit\uff1a\u5b9a\u65f6\u5668</li> </ul> <p>\u5e38\u7528\u547d\u4ee4\uff1a</p> <pre><code># \u5217\u51fa\u6b63\u5728\u8fd0\u884c\u7684 Unit\n$ systemctl list-units\n\n# \u5217\u51fa\u6240\u6709Unit\uff0c\u5305\u62ec\u6ca1\u6709\u627e\u5230\u914d\u7f6e\u6587\u4ef6\u7684\u6216\u8005\u542f\u52a8\u5931\u8d25\u7684\n$ systemctl list-units --all\n\n# \u5217\u51fa\u6240\u6709\u6ca1\u6709\u8fd0\u884c\u7684 Unit\n$ systemctl list-units --all --state=inactive\n\n# \u5217\u51fa\u6240\u6709\u52a0\u8f7d\u5931\u8d25\u7684 Unit\n$ systemctl list-units --failed\n\n# \u5217\u51fa\u6240\u6709\u6b63\u5728\u8fd0\u884c\u7684\u3001\u7c7b\u578b\u4e3a service \u7684 Unit\n$ systemctl list-units --type=service\n3.1.2.1 Unit \u72b6\u6001\n\u300csystemctl status\u300d\u547d\u4ee4\u7528\u4e8e\u67e5\u770b\u7cfb\u7edf\u72b6\u6001\u548c\u5355\u4e2a Unit \u7684\u72b6\u6001\u3002\n# \u663e\u793a\u7cfb\u7edf\u72b6\u6001\n$ systemctl status\n\n# \u663e\u793a\u5355\u4e2a Unit \u7684\u72b6\u6001\n$ sysystemctl status bluetooth.service\n\n# \u663e\u793a\u8fdc\u7a0b\u4e3b\u673a\u7684\u67d0\u4e2a Unit \u7684\u72b6\u6001\n$ systemctl -H root@rhel7.example.com status httpd.service\n\u9664\u4e86status\u547d\u4ee4\uff0csystemctl\u8fd8\u63d0\u4f9b\u4e86\u4e09\u4e2a\u67e5\u8be2\u72b6\u6001\u7684\u7b80\u5355\u65b9\u6cd5\uff0c\u4e3b\u8981\u4f9b\u811a\u672c\u5185\u90e8\u7684\u5224\u65ad\u8bed\u53e5\u4f7f\u7528\u3002\n# \u663e\u793a\u67d0\u4e2a Unit \u662f\u5426\u6b63\u5728\u8fd0\u884c\n$ systemctl is-active application.service\n\n# \u663e\u793a\u67d0\u4e2a Unit \u662f\u5426\u5904\u4e8e\u542f\u52a8\u5931\u8d25\u72b6\u6001\n$ systemctl is-failed application.service\n\n# \u663e\u793a\u67d0\u4e2a Unit \u670d\u52a1\u662f\u5426\u5efa\u7acb\u4e86\u542f\u52a8\u94fe\u63a5\n$ systemctl is-enabled application.service\n</code></pre>"},{"location":"blog/2025/07/10/systemd/#unit_1","title":"Unit \u7ba1\u7406","text":"<p>\u5bf9\u4e8e\u7528\u6237\u6765\u8bf4\uff0c\u6700\u5e38\u7528\u7684\u662f\u4e0b\u9762\u8fd9\u4e9b\u547d\u4ee4\uff0c\u7528\u4e8e\u542f\u52a8\u548c\u505c\u6b62 Unit\uff08\u4e3b\u8981\u662f service\uff09\u3002 <pre><code># \u7acb\u5373\u542f\u52a8\u4e00\u4e2a\u670d\u52a1\n$ sudo systemctl start apache.service\n\n# \u7acb\u5373\u505c\u6b62\u4e00\u4e2a\u670d\u52a1\n$ sudo systemctl stop apache.service\n\n# \u91cd\u542f\u4e00\u4e2a\u670d\u52a1\n$ sudo systemctl restart apache.service\n\n# \u6740\u6b7b\u4e00\u4e2a\u670d\u52a1\u7684\u6240\u6709\u5b50\u8fdb\u7a0b\n$ sudo systemctl kill apache.service\n\n# \u91cd\u65b0\u52a0\u8f7d\u4e00\u4e2a\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\n$ sudo systemctl reload apache.service\n\n# \u91cd\u8f7d\u6240\u6709\u4fee\u6539\u8fc7\u7684\u914d\u7f6e\u6587\u4ef6\n$ sudo systemctl daemon-reload\n\n# \u663e\u793a\u67d0\u4e2a Unit \u7684\u6240\u6709\u5e95\u5c42\u53c2\u6570\n$ systemctl show httpd.service\n\n# \u663e\u793a\u67d0\u4e2a Unit \u7684\u6307\u5b9a\u5c5e\u6027\u7684\u503c\n$ systemctl show -p CPUShares httpd.service\n\n# \u8bbe\u7f6e\u67d0\u4e2a Unit \u7684\u6307\u5b9a\u5c5e\u6027\n$ sudo systemctl set-property httpd.service CPUShares=500\n</code></pre></p>"},{"location":"blog/2025/07/10/systemd/#unit_2","title":"Unit \u4f9d\u8d56\u5173\u7cfb","text":"<p>Unit \u4e4b\u95f4\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\uff1aA \u4f9d\u8d56\u4e8e B\uff0c\u5c31\u610f\u5473\u7740 Systemd \u5728\u542f\u52a8 A \u7684\u65f6\u5019\uff0c\u540c\u65f6\u4f1a\u53bb\u542f\u52a8 B\u3002 <pre><code>\u300csystemctl list-dependencies\u300d\u547d\u4ee4\u5217\u51fa\u4e00\u4e2a Unit \u7684\u6240\u6709\u4f9d\u8d56\u3002\n$ systemctl list-dependencies nginx.service\n</code></pre></p> <p>\u4e0a\u9762\u547d\u4ee4\u7684\u8f93\u51fa\u7ed3\u679c\u4e4b\u4e2d\uff0c\u6709\u4e9b\u4f9d\u8d56\u662f Target \u7c7b\u578b\uff08\u8be6\u89c1\u4e0b\u6587\uff09\uff0c\u9ed8\u8ba4\u4e0d\u4f1a\u5c55\u5f00\u663e\u793a\u3002\u5982\u679c\u8981\u5c55\u5f00 Target\uff0c\u5c31\u9700\u8981\u4f7f\u7528--all \u53c2\u6570\u3002 <pre><code>$ systemctl list-dependencies --all nginx.service\n</code></pre></p>"},{"location":"blog/2025/07/10/systemd/#unit_3","title":"Unit \u7684\u914d\u7f6e\u6587\u4ef6","text":""},{"location":"blog/2025/07/10/systemd/#_1","title":"\u6982\u8ff0","text":"<p>\u6bcf\u4e00\u4e2a Unit \u90fd\u6709\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\uff0c\u544a\u8bc9 Systemd \u600e\u4e48\u542f\u52a8\u8fd9\u4e2a Unit \u3002 Systemd \u9ed8\u8ba4\u4ece\u76ee\u5f55/etc/systemd/system/\u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6\u3002\u4f46\u662f\uff0c\u91cc\u9762\u5b58\u653e\u7684\u5927\u90e8\u5206\u6587\u4ef6\u90fd\u662f\u7b26\u53f7\u94fe\u63a5\uff0c\u6307\u5411\u76ee\u5f55/usr/lib/systemd/system/\uff0c\u771f\u6b63\u7684\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u5728\u90a3\u4e2a\u76ee\u5f55\u3002</p> <p>\u300csystemctl enable\u300d\u547d\u4ee4\u7528\u4e8e\u5728\u4e0a\u9762\u4e24\u4e2a\u76ee\u5f55\u4e4b\u95f4\uff0c\u5efa\u7acb\u7b26\u53f7\u94fe\u63a5\u5173\u7cfb\u3002</p> <pre><code>$ sudo systemctl enable clamd@scan.service\n# \u7b49\u540c\u4e8e\n$ sudo ln -s '/usr/lib/systemd/system/clamd@scan.service' '/etc/systemd/system/multi-user.target.wants/clamd@scan.service'\n</code></pre> <p>\u5982\u679c\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u8bbe\u7f6e\u4e86\u5f00\u673a\u542f\u52a8\uff0c\u300csystemctl enable\u300d\u547d\u4ee4\u76f8\u5f53\u4e8e\u6fc0\u6d3b\u5f00\u673a\u542f\u52a8\u3002 \u4e0e\u4e4b\u5bf9\u5e94\u7684\uff0c\u300csystemctl disable\u300d\u547d\u4ee4\u7528\u4e8e\u5728\u4e24\u4e2a\u76ee\u5f55\u4e4b\u95f4\uff0c\u64a4\u9500\u7b26\u53f7\u94fe\u63a5\u5173\u7cfb\uff0c\u76f8\u5f53\u4e8e\u64a4\u9500\u5f00\u673a\u542f\u52a8\u3002 <pre><code>$ sudo systemctl disable clamd@scan.service\n</code></pre></p> <p>\u914d\u7f6e\u6587\u4ef6\u7684\u540e\u7f00\u540d\uff0c\u5c31\u662f\u8be5 Unit \u7684\u79cd\u7c7b\uff0c\u6bd4\u5982 sshd.socket\u3002\u5982\u679c\u7701\u7565\uff0cSystemd \u9ed8\u8ba4\u540e\u7f00\u540d\u4e3a .service\uff0c\u6240\u4ee5sshd\u4f1a\u88ab\u7406\u89e3\u6210 sshd.service\u3002</p> <p>\u5bf9\u4e8e\u652f\u6301 Systemd \u7684\u8f6f\u4ef6\uff0c\u5b89\u88c5\u65f6\u90fd\u4f1a\u5728 /usr/lib/systemd/system \u76ee\u5f55\u6dfb\u52a0\u4e00\u4e2a\u914d\u7f6e\u6587\u4ef6\u3002\u901a\u8fc7 systemctl enable \u53ef\u4ee5\u521b\u5efa\u7b26\u53f7\u94fe\u63a5\u5230 systemd \u8bfb\u53d6\u7684\u76ee\u5f55\u4e0b\uff0c\u5b9e\u73b0\u5f00\u673a\u81ea\u542f\u3002</p>"},{"location":"blog/2025/07/10/systemd/#_2","title":"\u914d\u7f6e\u6587\u4ef6\u7684\u72b6\u6001","text":"<p>\u300csystemctl list-unit-files\u300d\u547d\u4ee4\u7528\u4e8e\u5217\u51fa\u6240\u6709\u914d\u7f6e\u6587\u4ef6\u3002 <pre><code># \u5217\u51fa\u6240\u6709\u914d\u7f6e\u6587\u4ef6\n$ systemctl list-unit-files\n# \u5217\u51fa\u6307\u5b9a\u7c7b\u578b\u7684\u914d\u7f6e\u6587\u4ef6\n$ systemctl list-unit-files --type=service\n</code></pre> \u8fd9\u4e2a\u547d\u4ee4\u4f1a\u8f93\u51fa\u4e00\u4e2a\u5217\u8868\u3002 <pre><code>$ systemctl list-unit-files\n\nUNIT FILE              STATE\nchronyd.service        enabled\nclamd@.service         static\nclamd@scan.service     disabled\n</code></pre></p> <p>\u8fd9\u4e2a\u5217\u8868\u663e\u793a\u6bcf\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u72b6\u6001\uff0c\u4e00\u5171\u6709\u56db\u79cd\u3002</p> <ul> <li>enabled\uff1a\u5df2\u5efa\u7acb\u542f\u52a8\u94fe\u63a5</li> <li>disabled\uff1a\u6ca1\u5efa\u7acb\u542f\u52a8\u94fe\u63a5</li> <li>static\uff1a\u8be5\u914d\u7f6e\u6587\u4ef6\u6ca1\u6709[Install]\u90e8\u5206\uff08\u65e0\u6cd5\u6267\u884c\uff09\uff0c\u53ea\u80fd\u4f5c\u4e3a\u5176\u4ed6\u914d\u7f6e\u6587\u4ef6\u7684\u4f9d\u8d56</li> <li>masked\uff1a\u8be5\u914d\u7f6e\u6587\u4ef6\u88ab\u7981\u6b62\u5efa\u7acb\u542f\u52a8\u94fe\u63a5</li> </ul> <p>\u6ce8\u610f\uff0c\u4ece\u914d\u7f6e\u6587\u4ef6\u7684\u72b6\u6001\u65e0\u6cd5\u770b\u51fa\uff0c\u8be5 Unit \u662f\u5426\u6b63\u5728\u8fd0\u884c\u3002\u8fd9\u5fc5\u987b\u6267\u884c\u524d\u9762\u63d0\u5230\u7684 systemctl status \u547d\u4ee4\u3002 <pre><code>$ systemctl status bluetooth.service\n</code></pre></p> <p>\u4e00\u65e6\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\uff0c\u5c31\u8981\u8ba9 Systemd \u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\uff0c\u7136\u540e\u91cd\u65b0\u542f\u52a8\uff0c\u5426\u5219\u4fee\u6539\u4e0d\u4f1a\u751f\u6548\u3002 <pre><code>$ sudo systemctl daemon-reload\n$ sudo systemctl restart httpd.service\n</code></pre></p>"},{"location":"blog/2025/07/10/systemd/#_3","title":"\u914d\u7f6e\u6587\u4ef6\u7684\u683c\u5f0f","text":"<p>\u914d\u7f6e\u6587\u4ef6\u5c31\u662f\u666e\u901a\u7684\u6587\u672c\u6587\u4ef6\uff0c\u53ef\u4ee5\u7528\u6587\u672c\u7f16\u8f91\u5668\u6253\u5f00\u3002</p> <p>\u300csystemctl cat\u300d\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u914d\u7f6e\u6587\u4ef6\u7684\u5185\u5bb9\u3002 <pre><code>$ systemctl cat atd.service\n\n[Unit]\nDescription=ATD daemon\n\n[Service]\nType=forking\nExecStart=/usr/bin/atd\n\n[Install]\nWantedBy=multi-user.target\n</code></pre></p> <p>\u4ece\u4e0a\u9762\u7684\u8f93\u51fa\u53ef\u4ee5\u770b\u5230\uff0c\u914d\u7f6e\u6587\u4ef6\u5206\u6210\u51e0\u4e2a\u533a\u5757\u3002\u6bcf\u4e2a\u533a\u5757\u7684\u7b2c\u4e00\u884c\uff0c\u662f\u7528\u65b9\u62ec\u53f7\u8868\u793a\u7684\u533a\u522b\u540d\uff0c\u6bd4\u5982 [Unit]\u3002\u6ce8\u610f\uff0c\u914d\u7f6e\u6587\u4ef6\u7684\u533a\u5757\u540d\u548c\u5b57\u6bb5\u540d\uff0c\u90fd\u662f\u5927\u5c0f\u5199\u654f\u611f\u7684\u3002 \u6bcf\u4e2a\u533a\u5757\u5185\u90e8\u662f\u4e00\u4e9b\u7b49\u53f7\u8fde\u63a5\u7684\u952e\u503c\u5bf9\u3002 <pre><code>[Section]\nDirective1=value\nDirective2=value\n</code></pre> \u6ce8\u610f\uff0c\u952e\u503c\u5bf9\u7684\u7b49\u53f7\u4e24\u4fa7\u4e0d\u80fd\u6709\u7a7a\u683c\u3002</p>"},{"location":"blog/2025/07/10/systemd/#_4","title":"\u914d\u7f6e\u6587\u4ef6\u7684\u533a\u5757","text":"<p>[Unit] \u533a\u5757\u901a\u5e38\u662f\u914d\u7f6e\u6587\u4ef6\u7684\u7b2c\u4e00\u4e2a\u533a\u5757\uff0c\u7528\u6765\u5b9a\u4e49 Unit \u7684\u5143\u6570\u636e\uff0c\u4ee5\u53ca\u914d\u7f6e\u4e0e\u5176\u4ed6 Unit \u7684\u5173\u7cfb\u3002\u5b83\u7684\u4e3b\u8981\u5b57\u6bb5\u5982\u4e0b\u3002</p> <ul> <li>Description\uff1a\u7b80\u77ed\u63cf\u8ff0</li> <li>Documentation\uff1a\u6587\u6863\u5730\u5740</li> <li>Requires\uff1a\u5f53\u524d Unit \u4f9d\u8d56\u7684\u5176\u4ed6 Unit\uff0c\u5982\u679c\u5b83\u4eec\u6ca1\u6709\u8fd0\u884c\uff0c\u5f53\u524d Unit \u4f1a\u542f\u52a8\u5931\u8d25</li> <li>Wants\uff1a\u4e0e\u5f53\u524d Unit \u914d\u5408\u7684\u5176\u4ed6 Unit\uff0c\u5982\u679c\u5b83\u4eec\u6ca1\u6709\u8fd0\u884c\uff0c\u5f53\u524d Unit \u4e0d\u4f1a\u542f\u52a8\u5931\u8d25</li> <li>BindsTo\uff1a\u4e0eRequires\u7c7b\u4f3c\uff0c\u5b83\u6307\u5b9a\u7684 Unit \u5982\u679c\u9000\u51fa\uff0c\u4f1a\u5bfc\u81f4\u5f53\u524d Unit \u505c\u6b62\u8fd0\u884c</li> <li>Before\uff1a\u5982\u679c\u8be5\u5b57\u6bb5\u6307\u5b9a\u7684 Unit \u4e5f\u8981\u542f\u52a8\uff0c\u90a3\u4e48\u5fc5\u987b\u5728\u5f53\u524d Unit \u4e4b\u540e\u542f\u52a8</li> <li>After\uff1a\u5982\u679c\u8be5\u5b57\u6bb5\u6307\u5b9a\u7684 Unit \u4e5f\u8981\u542f\u52a8\uff0c\u90a3\u4e48\u5fc5\u987b\u5728\u5f53\u524d Unit \u4e4b\u524d\u542f\u52a8</li> <li>Conflicts\uff1a\u8fd9\u91cc\u6307\u5b9a\u7684 Unit \u4e0d\u80fd\u4e0e\u5f53\u524d Unit \u540c\u65f6\u8fd0\u884c</li> <li>Condition...\uff1a\u5f53\u524d Unit \u8fd0\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u5426\u5219\u4e0d\u4f1a\u8fd0\u884c</li> <li>Assert...\uff1a\u5f53\u524d Unit \u8fd0\u884c\u5fc5\u987b\u6ee1\u8db3\u7684\u6761\u4ef6\uff0c\u5426\u5219\u4f1a\u62a5\u542f\u52a8\u5931\u8d25</li> </ul> <p>[Install] \u901a\u5e38\u662f\u914d\u7f6e\u6587\u4ef6\u7684\u6700\u540e\u4e00\u4e2a\u533a\u5757\uff0c\u7528\u6765\u5b9a\u4e49\u5982\u4f55\u542f\u52a8\uff0c\u4ee5\u53ca\u662f\u5426\u5f00\u673a\u542f\u52a8\u3002\u5b83\u7684\u4e3b\u8981\u5b57\u6bb5\u5982\u4e0b\u3002</p> <ul> <li>WantedBy\uff1a\u5b83\u7684\u503c\u662f\u4e00\u4e2a\u6216\u591a\u4e2a Target\uff0c\u5f53\u524d Unit \u6fc0\u6d3b\u65f6\uff08enable\uff09\u7b26\u53f7\u94fe\u63a5\u4f1a\u653e\u5165/etc/systemd/system\u76ee\u5f55\u4e0b\u9762\u4ee5 Target \u540d + .wants\u540e\u7f00\u6784\u6210\u7684\u5b50\u76ee\u5f55\u4e2d</li> <li>RequiredBy\uff1a\u5b83\u7684\u503c\u662f\u4e00\u4e2a\u6216\u591a\u4e2a Target\uff0c\u5f53\u524d Unit \u6fc0\u6d3b\u65f6\uff0c\u7b26\u53f7\u94fe\u63a5\u4f1a\u653e\u5165/etc/systemd/system\u76ee\u5f55\u4e0b\u9762\u4ee5 Target \u540d + .required\u540e\u7f00\u6784\u6210\u7684\u5b50\u76ee\u5f55\u4e2d</li> <li>Alias\uff1a\u5f53\u524d Unit \u53ef\u7528\u4e8e\u542f\u52a8\u7684\u522b\u540d</li> <li>Also\uff1a\u5f53\u524d Unit \u6fc0\u6d3b\uff08enable\uff09\u65f6\uff0c\u4f1a\u88ab\u540c\u65f6\u6fc0\u6d3b\u7684\u5176\u4ed6 Unit</li> </ul> <p>[Service] \u533a\u5757\u7528\u6765 Service \u7684\u914d\u7f6e\uff0c\u53ea\u6709 Service \u7c7b\u578b\u7684 Unit \u624d\u6709\u8fd9\u4e2a\u533a\u5757\u3002\u5b83\u7684\u4e3b\u8981\u5b57\u6bb5\u5982\u4e0b\u3002</p> <ul> <li>Type\uff1a\u5b9a\u4e49\u542f\u52a8\u65f6\u7684\u8fdb\u7a0b\u884c\u4e3a\u3002\u5b83\u6709\u4ee5\u4e0b\u51e0\u79cd\u503c\u3002</li> <li>Type=simple\uff1a\u9ed8\u8ba4\u503c\uff0c\u6267\u884cExecStart\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u542f\u52a8\u4e3b\u8fdb\u7a0b</li> <li>Type=forking\uff1a\u4ee5 fork \u65b9\u5f0f\u4ece\u7236\u8fdb\u7a0b\u521b\u5efa\u5b50\u8fdb\u7a0b\uff0c\u521b\u5efa\u540e\u7236\u8fdb\u7a0b\u4f1a\u7acb\u5373\u9000\u51fa</li> <li>Type=oneshot\uff1a\u4e00\u6b21\u6027\u8fdb\u7a0b\uff0cSystemd \u4f1a\u7b49\u5f53\u524d\u670d\u52a1\u9000\u51fa\uff0c\u518d\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c</li> <li>Type=dbus\uff1a\u5f53\u524d\u670d\u52a1\u901a\u8fc7D-Bus\u542f\u52a8</li> <li>Type=notify\uff1a\u5f53\u524d\u670d\u52a1\u542f\u52a8\u5b8c\u6bd5\uff0c\u4f1a\u901a\u77e5Systemd\uff0c\u518d\u7ee7\u7eed\u5f80\u4e0b\u6267\u884c</li> <li>Type=idle\uff1a\u82e5\u6709\u5176\u4ed6\u4efb\u52a1\u6267\u884c\u5b8c\u6bd5\uff0c\u5f53\u524d\u670d\u52a1\u624d\u4f1a\u8fd0\u884c</li> <li>ExecStart\uff1a\u542f\u52a8\u5f53\u524d\u670d\u52a1\u7684\u547d\u4ee4</li> <li>ExecStartPre\uff1a\u542f\u52a8\u5f53\u524d\u670d\u52a1\u4e4b\u524d\u6267\u884c\u7684\u547d\u4ee4</li> <li>ExecStartPost\uff1a\u542f\u52a8\u5f53\u524d\u670d\u52a1\u4e4b\u540e\u6267\u884c\u7684\u547d\u4ee4</li> <li>ExecReload\uff1a\u91cd\u542f\u5f53\u524d\u670d\u52a1\u65f6\u6267\u884c\u7684\u547d\u4ee4</li> <li>ExecStop\uff1a\u505c\u6b62\u5f53\u524d\u670d\u52a1\u65f6\u6267\u884c\u7684\u547d\u4ee4</li> <li>ExecStopPost\uff1a\u505c\u6b62\u5f53\u5176\u670d\u52a1\u4e4b\u540e\u6267\u884c\u7684\u547d\u4ee4</li> <li>RestartSec\uff1a\u81ea\u52a8\u91cd\u542f\u5f53\u524d\u670d\u52a1\u95f4\u9694\u7684\u79d2\u6570</li> <li>Restart\uff1a\u5b9a\u4e49\u4f55\u79cd\u60c5\u51b5 Systemd \u4f1a\u81ea\u52a8\u91cd\u542f\u5f53\u524d\u670d\u52a1\uff0c\u53ef\u80fd\u7684\u503c\u5305\u62ecalways\uff08\u603b\u662f\u91cd\u542f\uff09\u3001on-success\u3001on-failure\u3001on-abnormal\u3001on-abort\u3001on-watchdog</li> <li>TimeoutSec\uff1a\u5b9a\u4e49 Systemd \u505c\u6b62\u5f53\u524d\u670d\u52a1\u4e4b\u524d\u7b49\u5f85\u7684\u79d2\u6570</li> <li>Environment\uff1a\u6307\u5b9a\u73af\u5883\u53d8\u91cf</li> </ul> <p>Unit \u914d\u7f6e\u6587\u4ef6\u7684\u5b8c\u6574\u5b57\u6bb5\u6e05\u5355\uff0c\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002</p>"},{"location":"blog/2025/07/10/systemd/#target","title":"Target","text":"<p>\u542f\u52a8\u8ba1\u7b97\u673a\u7684\u65f6\u5019\uff0c\u9700\u8981\u542f\u52a8\u5927\u91cf\u7684 Unit\u3002\u5982\u679c\u6bcf\u4e00\u6b21\u542f\u52a8\uff0c\u90fd\u8981\u4e00\u4e00\u5199\u660e\u672c\u6b21\u542f\u52a8\u9700\u8981\u54ea\u4e9b Unit\uff0c\u663e\u7136\u975e\u5e38\u4e0d\u65b9\u4fbf\u3002Systemd \u7684\u89e3\u51b3\u65b9\u6848\u5c31\u662f Target\u3002</p> <p>\u7b80\u5355\u8bf4\uff0cTarget \u5c31\u662f\u4e00\u4e2a Unit \u7ec4\uff0c\u5305\u542b\u8bb8\u591a\u76f8\u5173\u7684 Unit \u3002\u542f\u52a8\u67d0\u4e2a Target \u7684\u65f6\u5019\uff0cSystemd \u5c31\u4f1a\u542f\u52a8\u91cc\u9762\u6240\u6709\u7684 Unit\u3002\u4ece\u8fd9\u4e2a\u610f\u4e49\u4e0a\u8bf4\uff0cTarget \u8fd9\u4e2a\u6982\u5ff5\u7c7b\u4f3c\u4e8e\"\u72b6\u6001\u70b9\"\uff0c\u542f\u52a8\u67d0\u4e2a Target \u5c31\u597d\u6bd4\u542f\u52a8\u5230\u67d0\u79cd\u72b6\u6001\u3002</p> <p>\u4f20\u7edf\u7684init\u542f\u52a8\u6a21\u5f0f\u91cc\u9762\uff0c\u6709 RunLevel \u7684\u6982\u5ff5\uff0c\u8ddf Target \u7684\u4f5c\u7528\u5f88\u7c7b\u4f3c\u3002\u4e0d\u540c\u7684\u662f\uff0cRunLevel \u662f\u4e92\u65a5\u7684\uff0c\u4e0d\u53ef\u80fd\u591a\u4e2a RunLevel \u540c\u65f6\u542f\u52a8\uff0c\u4f46\u662f\u591a\u4e2a Target \u53ef\u4ee5\u540c\u65f6\u542f\u52a8\u3002 <pre><code># \u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u7684\u6240\u6709 Target\n$ systemctl list-unit-files --type=target\n\n# \u67e5\u770b\u4e00\u4e2a Target \u5305\u542b\u7684\u6240\u6709 Unit\n$ systemctl list-dependencies multi-user.target\n\n# \u67e5\u770b\u542f\u52a8\u65f6\u7684\u9ed8\u8ba4 Target\n$ systemctl get-default\n\n# \u8bbe\u7f6e\u542f\u52a8\u65f6\u7684\u9ed8\u8ba4 Target\n$ sudo systemctl set-default multi-user.target\n\n# \u5207\u6362 Target \u65f6\uff0c\u9ed8\u8ba4\u4e0d\u5173\u95ed\u524d\u4e00\u4e2a Target \u542f\u52a8\u7684\u8fdb\u7a0b\uff0c\n# systemctl isolate \u547d\u4ee4\u6539\u53d8\u8fd9\u79cd\u884c\u4e3a\uff0c\n# \u5173\u95ed\u524d\u4e00\u4e2a Target \u91cc\u9762\u6240\u6709\u4e0d\u5c5e\u4e8e\u540e\u4e00\u4e2a Target \u7684\u8fdb\u7a0b\n$ sudo systemctl isolate multi-user.target\n</code></pre></p> <p>Target \u4e0e \u4f20\u7edf RunLevel \u7684\u5bf9\u5e94\u5173\u7cfb\u5982\u4e0b\u3002 <pre><code>Traditional runlevel      New target name     Symbolically linked to...\n\nRunlevel 0           |    runlevel0.target -&gt; poweroff.target\nRunlevel 1           |    runlevel1.target -&gt; rescue.target\nRunlevel 2           |    runlevel2.target -&gt; multi-user.target\nRunlevel 3           |    runlevel3.target -&gt; multi-user.target\nRunlevel 4           |    runlevel4.target -&gt; multi-user.target\nRunlevel 5           |    runlevel5.target -&gt; graphical.target\nRunlevel 6           |    runlevel6.target -&gt; reboot.target\n</code></pre></p> <p>\u5b83\u4e0einit\u8fdb\u7a0b\u7684\u4e3b\u8981\u5dee\u522b\u5982\u4e0b\u3002</p> <ul> <li>\u9ed8\u8ba4\u7684 RunLevel\uff08\u5728 /etc/inittab \u6587\u4ef6\u8bbe\u7f6e\uff09\u73b0\u5728\u88ab\u9ed8\u8ba4\u7684 Target \u53d6\u4ee3\uff0c\u4f4d\u7f6e\u662f /etc/systemd/system/default.target\uff0c\u901a\u5e38\u7b26\u53f7\u94fe\u63a5\u5230 graphical.target\uff08\u56fe\u5f62\u754c\u9762\uff09\u6216\u8005 multi-user.target\uff08\u591a\u7528\u6237\u547d\u4ee4\u884c\uff09\u3002</li> <li>\u542f\u52a8\u811a\u672c\u7684\u4f4d\u7f6e\uff0c\u4ee5\u524d\u662f /etc/init.d \u76ee\u5f55\uff0c\u7b26\u53f7\u94fe\u63a5\u5230\u4e0d\u540c\u7684 RunLevel \u76ee\u5f55 \uff08\u6bd4\u5982 /etc/rc3.d\u3001/etc/rc5.d \u7b49\uff09\uff0c\u73b0\u5728\u5219\u5b58\u653e\u5728 /lib/systemd/system \u548c /etc/systemd/system \u76ee\u5f55\u3002</li> <li>\u914d\u7f6e\u6587\u4ef6\u7684\u4f4d\u7f6e\uff0c\u4ee5\u524d init \u8fdb\u7a0b\u7684\u914d\u7f6e\u6587\u4ef6\u662f /etc/inittab\uff0c\u5404\u79cd\u670d\u52a1\u7684\u914d\u7f6e\u6587\u4ef6\u5b58\u653e\u5728 /etc/sysconfig \u76ee\u5f55\u3002\u73b0\u5728\u7684\u914d\u7f6e\u6587\u4ef6\u4e3b\u8981\u5b58\u653e\u5728 /lib/systemd \u76ee\u5f55\uff0c\u5728 /etc/systemd \u76ee\u5f55\u91cc\u9762\u7684\u4fee\u6539\u53ef\u4ee5\u8986\u76d6\u539f\u59cb\u8bbe\u7f6e\u3002</li> </ul>"},{"location":"blog/2025/07/10/systemd/#_5","title":"\u65e5\u5fd7\u7ba1\u7406","text":"<p>Systemd \u7edf\u4e00\u7ba1\u7406\u6240\u6709 Unit \u7684\u542f\u52a8\u65e5\u5fd7\u3002\u5e26\u6765\u7684\u597d\u5904\u5c31\u662f\uff0c\u53ef\u4ee5\u53ea\u7528\u300cjournalctl\u300d\u4e00\u4e2a\u547d\u4ee4\uff0c\u67e5\u770b\u6240\u6709\u65e5\u5fd7\uff08\u5185\u6838\u65e5\u5fd7\u548c\u5e94\u7528\u65e5\u5fd7\uff09\u3002\u65e5\u5fd7\u7684\u914d\u7f6e\u6587\u4ef6\u662f /etc/systemd/journald.conf\u3002</p> <p>journalctl \u529f\u80fd\u5f3a\u5927\uff0c\u7528\u6cd5\u975e\u5e38\u591a\u3002</p> <pre><code># \u67e5\u770b\u6240\u6709\u65e5\u5fd7\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b \uff0c\u53ea\u4fdd\u5b58\u672c\u6b21\u542f\u52a8\u7684\u65e5\u5fd7\uff09\n$ sudo journalctl\n\n# \u67e5\u770b\u5185\u6838\u65e5\u5fd7\uff08\u4e0d\u663e\u793a\u5e94\u7528\u65e5\u5fd7\uff09\n$ sudo journalctl -k\n\n# \u67e5\u770b\u7cfb\u7edf\u672c\u6b21\u542f\u52a8\u7684\u65e5\u5fd7\n$ sudo journalctl -b\n$ sudo journalctl -b -0\n\n# \u67e5\u770b\u4e0a\u4e00\u6b21\u542f\u52a8\u7684\u65e5\u5fd7\uff08\u9700\u66f4\u6539\u8bbe\u7f6e\uff09\n$ sudo journalctl -b -1\n\n# \u67e5\u770b\u6307\u5b9a\u65f6\u95f4\u7684\u65e5\u5fd7\n$ sudo journalctl --since=\"2012-10-30 18:17:16\"\n$ sudo journalctl --since \"20 min ago\"\n$ sudo journalctl --since yesterday\n$ sudo journalctl --since \"2015-01-10\" --until \"2015-01-11 03:00\"\n$ sudo journalctl --since 09:00 --until \"1 hour ago\"\n\n# \u663e\u793a\u5c3e\u90e8\u7684\u6700\u65b010\u884c\u65e5\u5fd7\n$ sudo journalctl -n\n\n# \u663e\u793a\u5c3e\u90e8\u6307\u5b9a\u884c\u6570\u7684\u65e5\u5fd7\n$ sudo journalctl -n 20\n\n# \u5b9e\u65f6\u6eda\u52a8\u663e\u793a\u6700\u65b0\u65e5\u5fd7\n$ sudo journalctl -f\n\n# \u67e5\u770b\u6307\u5b9a\u670d\u52a1\u7684\u65e5\u5fd7\n$ sudo journalctl /usr/lib/systemd/systemd\n\n# \u67e5\u770b\u6307\u5b9a\u8fdb\u7a0b\u7684\u65e5\u5fd7\n$ sudo journalctl _PID=1\n\n# \u67e5\u770b\u67d0\u4e2a\u8def\u5f84\u7684\u811a\u672c\u7684\u65e5\u5fd7\n$ sudo journalctl /usr/bin/bash\n\n# \u67e5\u770b\u6307\u5b9a\u7528\u6237\u7684\u65e5\u5fd7\n$ sudo journalctl _UID=33 --since today\n\n# \u67e5\u770b\u67d0\u4e2a Unit \u7684\u65e5\u5fd7\n$ sudo journalctl -u nginx.service\n$ sudo journalctl -u nginx.service --since today\n\n# \u5b9e\u65f6\u6eda\u52a8\u663e\u793a\u67d0\u4e2a Unit \u7684\u6700\u65b0\u65e5\u5fd7\n$ sudo journalctl -u nginx.service -f\n\n# \u5408\u5e76\u663e\u793a\u591a\u4e2a Unit \u7684\u65e5\u5fd7\n$ journalctl -u nginx.service -u php-fpm.service --since today\n\n# \u67e5\u770b\u6307\u5b9a\u4f18\u5148\u7ea7\uff08\u53ca\u5176\u4ee5\u4e0a\u7ea7\u522b\uff09\u7684\u65e5\u5fd7\uff0c\u5171\u67098\u7ea7\n# 0: emerg\n# 1: alert\n# 2: crit\n# 3: err\n# 4: warning\n# 5: notice\n# 6: info\n# 7: debug\n$ sudo journalctl -p err -b\n\n# \u65e5\u5fd7\u9ed8\u8ba4\u5206\u9875\u8f93\u51fa\uff0c--no-pager \u6539\u4e3a\u6b63\u5e38\u7684\u6807\u51c6\u8f93\u51fa\n$ sudo journalctl --no-pager\n\n# \u4ee5 JSON \u683c\u5f0f\uff08\u5355\u884c\uff09\u8f93\u51fa\n$ sudo journalctl -b -u nginx.service -o json\n\n# \u4ee5 JSON \u683c\u5f0f\uff08\u591a\u884c\uff09\u8f93\u51fa\uff0c\u53ef\u8bfb\u6027\u66f4\u597d\n$ sudo journalctl -b -u nginx.serviceqq\n -o json-pretty\n\n# \u663e\u793a\u65e5\u5fd7\u5360\u636e\u7684\u786c\u76d8\u7a7a\u95f4\n$ sudo journalctl --disk-usage\n\n# \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u5360\u636e\u7684\u6700\u5927\u7a7a\u95f4\n$ sudo journalctl --vacuum-size=1G\n\n# \u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u4fdd\u5b58\u591a\u4e45\n$ sudo journalctl --vacuum-time=1years\n</code></pre>"},{"location":"ceph_doc/","title":"CEPH \u5b98\u65b9\u6587\u6863\u7ffb\u8bd1","text":"<p>\u672c\u6587\u6863\u4e3aCEPH\u5b98\u65b9\u6587\u6863\u4e2dCephFS\u90e8\u5206\u7684\u4e2d\u6587\u7ffb\u8bd1\uff0c\u4ec5\u4f9b\u4e2a\u4eba\u5b66\u4e60\u8bb0\u5f55\u3002</p> <p>\u4e00\u4e9bCeph\u548c\u6587\u4ef6\u7cfb\u7edf\u7684\u6982\u5ff5\u8bcd\u8bed\u4e0d\u505a\u7ffb\u8bd1\uff0c\u4f8b\u5982Caps\u3001Journal\u3001Layout\u3001MDS\u3001Inode\u3001Dentry\u7b49\u3002</p>"},{"location":"ceph_doc/architecture/architecture/","title":"CEPH\u67b6\u6784","text":"<p>Ceph\u662f\u4e00\u4e2a\u63d0\u4f9b \u5bf9\u8c61\u3001\u5757\u548c\u6587\u4ef6\u5b58\u50a8 \u7684\u7edf\u4e00\u7cfb\u7edf\uff0c\u5b83\u9ad8\u5ea6\u53ef\u9760\u3001\u6613\u4e8e\u7ba1\u7406\u4e14\u514d\u8d39\u3002Ceph \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u53ef\u6269\u5c55\u6027 - \u652f\u6301\u6570\u5343\u4e2a\u5ba2\u6237\u7aef\u8bbf\u95ee PB \u5230 EB \u91cf\u7ea7\u7684\u6570\u636e\u3002Ceph \u8282\u70b9 \u901a\u8fc7\u667a\u80fd\u5b88\u62a4\u8fdb\u7a0b\u5145\u5206\u5229\u7528\u5546\u7528\u786c\u4ef6\u8bbe\u5907\uff0c Ceph \u5b58\u50a8\u96c6\u7fa4\u53ef\u5bb9\u7eb3\u5927\u91cf\u8282\u70b9\uff0c\u8fd9\u4e9b\u8282\u70b9\u53ef\u4ee5\u76f8\u4e92\u76f4\u63a5\u901a\u4fe1\u4ee5\u5b9e\u73b0\u6570\u636e\u7684\u52a8\u6001\u590d\u5236\u4ee5\u53ca\u91cd\u65b0\u5206\u53d1\u3002</p> <p></p>"},{"location":"ceph_doc/architecture/architecture/#ceph_1","title":"CEPH \u96c6\u7fa4","text":"<p>Ceph \u63d0\u4f9b\u57fa\u4e8e RADOS \u7684\u65e0\u9650\u53ef\u6269\u5c55 \u5b58\u50a8\u96c6\u7fa4\uff0cRADOS \u662f\u4e00\u79cd\u53ef\u9760\u7684\u5206\u5e03\u5f0f\u5b58\u50a8\u670d\u52a1\uff0c\u5b83\u4f7f\u7528\u6bcf\u4e2a\u5b58\u50a8\u8282\u70b9\u4e2d\u7684\u667a\u80fd\u5b88\u62a4\u8fdb\u7a0b\u6765\u4fdd\u62a4\u5176\u5b58\u50a8\u7684\u6570\u636e\uff0c\u5e76\u5c06\u8be5\u6570\u636e\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7aef\u3002\u6709\u5173 RADOS \u7684\u7b80\u8981\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 Sage Weil \u7684\u201cRADOS \u5bf9\u8c61\u5b58\u50a8\u201d\u535a\u5ba2\u6587\u7ae0\uff0c\u53c2\u9605 RADOS - \u9002\u7528\u4e8e PB \u7ea7\u5b58\u50a8\u96c6\u7fa4\u7684\u53ef\u6269\u5c55\u3001\u53ef\u9760\u7684\u5b58\u50a8\u670d\u52a1\uff0c\u4e86\u89e3\u6709\u5173 RADOS \u7684\u8be6\u5c3d\u8bf4\u660e\u3002</p> <p>Ceph \u5b58\u50a8\u96c6\u7fa4\u7531\u591a\u79cd\u7c7b\u578b\u7684\u5b88\u62a4\u8fdb\u7a0b\u7ec4\u6210\uff1a</p> <ul> <li>Ceph Monitor</li> <li>Ceph OSD \u5b88\u62a4\u8fdb\u7a0b</li> <li>Ceph Manager</li> <li>Ceph Metadata Server</li> </ul> <p>Monitor\u7ef4\u62a4\u96c6\u7fa4\u6620\u5c04\u7684\u4e3b\u526f\u672c\uff0c\u5e76\u5c06\u5176\u63d0\u4f9b\u7ed9 Ceph \u5ba2\u6237\u7aef\u3002Ceph \u96c6\u7fa4\u4e2d\u5b58\u5728\u591a\u4e2a Monitor\u53ef\u786e\u4fdd\u5728\u5176\u4e2d\u4e00\u4e2a Monitor \u5b88\u62a4\u8fdb\u7a0b\u6216\u5176\u4e3b\u673a\u53d1\u751f\u6545\u969c\u65f6\u7684\u53ef\u7528\u6027\u3002</p> <p>Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\u68c0\u67e5\u81ea\u5df1\u7684\u72b6\u6001\u548c\u5176\u4ed6 OSD \u7684\u72b6\u6001\uff0c\u5e76\u5411 Monitor \u62a5\u544a\u3002</p> <p>Ceph Manager \u7528\u4f5c\u76d1\u63a7\u3001\u7f16\u6392\u548c\u63d2\u4ef6\u6a21\u5757\u7684\u7ec8\u7aef\u8282\u70b9\u3002</p> <p>\u5f53 CephFS \u7528\u4e8e\u63d0\u4f9b\u6587\u4ef6\u670d\u52a1\u65f6\uff0cCeph \u5143\u6570\u636e\u670d\u52a1\u5668 \uff08MDS\uff09 \u4f1a\u7ba1\u7406\u6587\u4ef6\u5143\u6570\u636e\u3002</p> <p>\u5b58\u50a8\u96c6\u7fa4\u5ba2\u6237\u7aef\u548c Ceph OSD \u5b88\u62a4\u7a0b\u5e8f\u4f7f\u7528 CRUSH \u7b97\u6cd5\u6765\u8ba1\u7b97\u6709\u5173\u6570\u636e\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002\u4f7f\u7528 CRUSH \u7b97\u6cd5\u610f\u5473\u7740\u5ba2\u6237\u7aef\u548c OSD \u4e0d\u4f1a\u53d7\u5230\u4e2d\u5fc3\u5316\u67e5\u627e\u8868\u7684\u74f6\u9888\u3002Ceph \u7684\u9ad8\u7ea7\u529f\u80fd\u5305\u62ec\u901a\u8fc7 <code>librados</code> \u8fde\u63a5\u5230 Ceph \u5b58\u50a8\u96c6\u7fa4\u7684\u539f\u751f\u63a5\u53e3\uff0c\u4ee5\u53ca\u57fa\u4e8e <code>librados</code> \u6784\u5efa\u7684\u8bb8\u591a\u670d\u52a1\u63a5\u53e3\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_1","title":"\u5b58\u50a8\u6570\u636e","text":"<p>Ceph \u5b58\u50a8\u96c6\u7fa4\u4ece \u5ba2\u6237\u7aef \u63a5\u6536\u6570\u636e\uff0c\u65e0\u8bba\u662f\u901a\u8fc7 Ceph \u5757\u8bbe\u5907\u3001Ceph \u5bf9\u8c61\u5b58\u50a8\u3001Ceph \u6587\u4ef6\u7cfb\u7edf\uff0c\u8fd8\u662f\u4f7f\u7528 <code>librados</code> \u521b\u5efa\u7684\u81ea\u5b9a\u4e49\u5b9e\u73b0\u7684\u5ba2\u6237\u7aef\uff0cCeph \u90fd\u4f1a\u5c06\u63a5\u6536\u7684\u6570\u636e\u5b58\u50a8\u4e3a RADOS \u5bf9\u8c61\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5b58\u50a8\u5728\u5bf9\u8c61\u5b58\u50a8\u8bbe\u5907\uff08\u4e5f\u79f0\u4e3a\u201cOSD\u201d\uff09\u4e0a\u3002OSD \u63a7\u5236\u5b58\u50a8\u9a71\u52a8\u5668\u4e0a\u7684\u8bfb\u53d6\u3001\u5199\u5165\u548c\u590d\u5236\u64cd\u4f5c\u3002\u9ed8\u8ba4\u4f7f\u7528 BlueStore \u5b58\u50a8\u540e\u7aef\uff0c\u4ee5\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u6570\u636e\u5e93\u7684\u65b9\u5f0f\u5b58\u50a8\u5bf9\u8c61\u3002</p> <p></p> <p>OSD \u5b88\u62a4\u8fdb\u7a0b\u5c06\u6570\u636e\u4f5c\u4e3a\u5bf9\u8c61\u5b58\u50a8\u5728\u5e73\u9762\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u5728 OSD \u4e0a\u4e0d\u5b58\u50a8\u5728\u76ee\u5f55\u5c42\u6b21\u7ed3\u6784\u3002\u5bf9\u8c61\u7531\u6807\u8bc6\u7b26\u3001\u4e8c\u8fdb\u5236\u6570\u636e\u548c\u7531\u540d\u79f0/\u503c\u5bf9\u7ec4\u6210\u7684\u5143\u6570\u636e\u6784\u6210\u3002Ceph \u5ba2\u6237\u7aef\u786e\u5b9a\u5bf9\u8c61\u6570\u636e\u7684\u8bed\u4e49\u3002\u4f8b\u5982\uff0cCephFS \u4f7f\u7528\u5143\u6570\u636e\u6765\u5b58\u50a8\u6587\u4ef6\u5c5e\u6027\uff0c\u4f8b\u5982\u6587\u4ef6\u6240\u6709\u8005\u3001\u521b\u5efa\u65e5\u671f\u548c\u4e0a\u6b21\u4fee\u6539\u65e5\u671f\u3002</p> <p></p> <p>Note</p> <p>\u5bf9\u8c61 ID \u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u662f\u552f\u4e00\u7684\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u5728\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u7edf</p>"},{"location":"ceph_doc/architecture/architecture/#_2","title":"\u53ef\u6269\u5c55\u6027\u548c\u9ad8\u53ef\u7528\u6027","text":"<p>\u5728\u4f20\u7edf\u67b6\u6784\u4e2d\uff0c\u5ba2\u6237\u7aef\u4e0e\u4e00\u4e2a\u4e2d\u5fc3\u5316\u7684\u7ec4\u4ef6\u901a\u4fe1\u3002\u8fd9\u4e2a\u4e2d\u5fc3\u5316\u7684\u7ec4\u4ef6\u53ef\u4ee5\u662f\u7f51\u5173\u3001\u4ee3\u7406\u3001API \u6216 Facade\u3002\u6b64\u7c7b\u4e2d\u5fc3\u5316\u7684\u7ec4\u4ef6\u5145\u5f53\u590d\u6742\u5b50\u7cfb\u7edf\u7684\u5355\u4e00\u5165\u53e3\u70b9\uff0c\u4f9d\u8d56\u4e8e\u8fd9\u79cd\u96c6\u4e2d\u5f0f\u7ec4\u4ef6\u7684\u67b6\u6784\u5177\u6709\u5355\u70b9\u6545\u969c\uff0c\u5e76\u4f1a\u5bfc\u81f4\u6027\u80fd\u548c\u53ef\u6269\u5c55\u6027\u53d7\u5230\u9650\u5236\u3002\u5982\u679c\u96c6\u4e2d\u5f0f\u7ec4\u4ef6\u5b95\u673a\uff0c\u5219\u6574\u4e2a\u7cfb\u7edf\u5c06\u4e0d\u53ef\u7528\u3002</p> <p>Ceph \u4ece\u8bbe\u8ba1\u4e4b\u521d\u5c31\u907f\u514d\u4e86\u8fd9\u79cd\u5355\u70b9\u7684\u9650\u5236\uff0c\u5b83\u4f7f\u5ba2\u6237\u7aef\u53ef\u4ee5\u76f4\u63a5\u4e0e Ceph OSD \u4ea4\u4e92\uff0cCeph OSD \u5f7c\u6b64\u4e4b\u95f4\u4e92\u76f8\u901a\u4fe1\u8fdb\u884c\u5bf9\u8c61\u7684\u526f\u672c\u521b\u5efa\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u5b89\u5168\u548c\u53ef\u7528\u6027\u3002\u6b64\u5916\uff0cCeph \u901a\u8fc7 Mon \u96c6\u7fa4\u6765\u4fdd\u8bc1\u9ad8\u53ef\u7528\u3002\u4e3a\u4e86\u6d88\u9664\u4e2d\u5fc3\u5316\uff0cCeph \u4f7f\u7528\u4e86\u4e00\u79cd\u79f0\u4e3a CRUSH \u7684\u7b97\u6cd5\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#crush","title":"CRUSH \u7b80\u4ecb","text":"<p>Ceph \u4e2d\u5bf9\u8c61\u7684\u5b9e\u9645\u5b58\u50a8\u4f4d\u7f6e\u4e0d\u662f\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u4e2d\u5fc3\u5316\u7684\u7ec4\u4ef6\u8fdb\u884c\u67e5\u8868\u5f97\u5230\u7684\uff0c\u800c\u662f\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u7684\u3002Ceph \u5ba2\u6237\u7aef\u548c Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\u90fd\u662f\u7528 CRUSH \u7b97\u6cd5\u6765\u8ba1\u7b97\u6709\u5173\u5bf9\u8c61\u5b58\u50a8\u4f4d\u7f6e\u7684\u4fe1\u606f\u3002\u4e0e\u4f20\u7edf\u65b9\u5f0f\u76f8\u6bd4\uff0cCRUSH \u7b97\u6cd5\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6570\u636e\u7ba1\u7406\u673a\u5236\uff0c\u5e76\u4e14 CRUSH \u7b97\u6cd5\u901a\u8fc7\u5c06\u5de5\u4f5c\u5206\u914d\u7ed9\u96c6\u7fa4\u4e2d\u6240\u6709\u7684 OSD \u4ee5\u53ca\u4e0e\u4e4b\u901a\u4fe1\u7684\u5ba2\u6237\u7aef\u6765\u5b9e\u73b0\u5927\u89c4\u6a21\u7684\u6269\u5c55\u3002CRUSH \u4f7f\u7528\u667a\u80fd\u6570\u636e\u590d\u5236\u6765\u786e\u4fdd\u5f39\u6027\uff0c\u8fd9\u66f4\u9002\u5408\u8d85\u5927\u89c4\u6a21\u5b58\u50a8\u3002\u4ee5\u4e0b\u90e8\u5206\u63d0\u4f9b\u4e86\u6709\u5173 CRUSH \u5de5\u4f5c\u539f\u7406\u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002\u6709\u5173 CRUSH \u7684\u6df1\u5165\u5b66\u672f\u8ba8\u8bba\uff0c\u8bf7\u53c2\u9605 CRUSH - \u590d\u5236\u6570\u636e\u7684\u53d7\u63a7\u3001\u53ef\u6269\u5c55\u3001\u53bb\u4e2d\u5fc3\u5316\u653e\u7f6e\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_3","title":"\u96c6\u7fa4\u6620\u5c04","text":"<p>\u4e3a\u4e86\u4f7f Ceph \u96c6\u7fa4\u6b63\u5e38\u8fd0\u884c\uff0cCeph \u5ba2\u6237\u7aef\u548c Ceph OSD \u5fc5\u987b\u5177\u6709\u6709\u5173\u96c6\u7fa4\u62d3\u6251\u7684\u6700\u65b0\u4fe1\u606f\u3002\u5f53\u524d\u4fe1\u606f\u5b58\u50a8\u5728 \u201cCluster Map\u201d \u4e2d\uff0c\u5b83\u5b9e\u9645\u4e0a\u662f\u4e94\u4e2a\u6620\u5c04\u7684\u96c6\u5408\u3002\u6784\u6210\u96c6\u7fa4\u6620\u5c04\u7684 5 \u4e2a\u6620\u5c04\u662f\uff1a</p> <ol> <li>Monitor \u6620\u5c04 :\u5305\u542b\u6bcf\u4e2a\u76d1\u89c6\u5668\u7684\u96c6\u7fa4 <code>fsid</code>\u3001\u4f4d\u7f6e\u3001\u540d\u79f0\u3001\u5730\u5740\u548c TCP \u7aef\u53e3\u3002\u76d1\u63a7\u6620\u5c04\u6307\u5b9a\u5f53\u524d\u7eaa\u5143\u3001\u76d1\u63a7\u6620\u5c04\u7684\u521b\u5efa\u65f6\u95f4\u4ee5\u53ca\u76d1\u63a7\u6620\u5c04\u7684\u4e0a\u6b21\u4fee\u6539\u65f6\u95f4\u3002\u8981\u67e5\u770b\u76d1\u63a7\u6620\u5c04\uff0c\u8bf7\u8fd0\u884c <code>ceph mon dump</code>\u3002</li> <li>OSD \u6620\u5c04 :\u5305\u542b\u7fa4\u96c6 <code>fsid</code>\u3001OSD \u6620\u5c04\u7684\u521b\u5efa\u65f6\u95f4\u3001OSD \u6620\u5c04\u7684\u4e0a\u6b21\u4fee\u6539\u65f6\u95f4\u3001\u6c60\u5217\u8868\u3001\u526f\u672c\u5927\u5c0f\u5217\u8868\u3001PG \u7f16\u53f7\u5217\u8868\u4ee5\u53ca OSD \u53ca\u5176\u72b6\u6001\uff08\u4f8b\u5982\uff0c<code>up</code>\u3001<code>in</code>\uff09\u7684\u5217\u8868\u3002\u8981\u67e5\u770b OSD \u6620\u5c04\uff0c\u8bf7\u8fd0\u884c <code>ceph osd dump</code>\u3002</li> <li>PG \u6620\u5c04 :\u5305\u542b PG \u7248\u672c\u3001\u5176\u65f6\u95f4\u6233\u3001\u6700\u540e\u4e00\u4e2a OSD \u6620\u5c04\u7eaa\u5143\u3001\u5b8c\u6574\u6bd4\u7387\u4ee5\u53ca\u6bcf\u4e2a\u7f6e\u653e\u7fa4\u7ec4\u7684\u8be6\u7ec6\u4fe1\u606f\u3002\u8fd9\u5305\u62ec PG ID\u3001Up Set\u3001Acting Set\u3001PG \u7684\u72b6\u6001\uff08\u4f8b\u5982\uff0c<code>active + clean</code>\uff09\u4ee5\u53ca\u6bcf\u4e2a\u6c60\u7684\u6570\u636e\u4f7f\u7528\u7edf\u8ba1\u4fe1\u606f\u3002</li> <li>CRUSH \u6620\u5c04 :\u5305\u542b\u5b58\u50a8\u8bbe\u5907\u5217\u8868\u3001\u6545\u969c\u57df\u5c42\u6b21\u7ed3\u6784\uff08\u4f8b\u5982\uff0c<code>\u8bbe\u5907</code>\u3001<code>\u4e3b\u673a</code>\u3001<code>\u673a\u67b6</code>\u3001<code>\u884c</code>\u3001<code>\u623f\u95f4</code>\uff09\u4ee5\u53ca\u5728\u5b58\u50a8\u6570\u636e\u65f6\u904d\u5386\u5c42\u6b21\u7ed3\u6784\u7684\u89c4\u5219\u3002\u8981\u67e5\u770b CRUSH \u7d22\u5f15\uff0c\u8bf7\u8fd0\u884c <code>ceph osd getcrushmap -o {filename}</code> \u5b83\uff0c\u7136\u540e\u901a\u8fc7\u8fd0\u884c <code>crushtool -d {comp-crushmap-filename} -o {decomp-crushmap-filename}</code> .\u4f7f\u7528\u6587\u672c\u7f16\u8f91\u5668\u6216 <code>cat</code> \u67e5\u770b\u53cd\u7f16\u8bd1\u7684\u6620\u5c04\u3002</li> <li>MDS \u6620\u5c04 :\u5305\u542b\u5f53\u524d MDS \u6620\u5c04\u7eaa\u5143\u3001\u6620\u5c04\u7684\u521b\u5efa\u65f6\u95f4\u4ee5\u53ca\u4e0a\u6b21\u66f4\u6539\u7684\u65f6\u95f4\u3002\u5b83\u8fd8\u5305\u542b\u7528\u4e8e\u5b58\u50a8\u5143\u6570\u636e\u7684\u6c60\u3001\u5143\u6570\u636e\u670d\u52a1\u5668\u5217\u8868\u4ee5\u53ca<code>\u5df2\u542f\u52a8</code>\u548c<code>\u52a0\u5165</code>\u7684\u5143\u6570\u636e\u670d\u52a1\u5668\u3002\u8981\u67e5\u770b MDS \u6620\u5c04\uff0c\u8bf7\u6267\u884c <code>ceph fs dump</code>\u3002</li> </ol> <p>\u6bcf\u4e2a\u6620\u5c04\u90fd\u7ef4\u62a4\u5176\u8fd0\u884c\u72b6\u6001\u66f4\u6539\u7684\u5386\u53f2\u8bb0\u5f55\u3002Ceph Mon \u7ef4\u62a4\u96c6\u7fa4\u6620\u5c04\u7684\u4e3b\u526f\u672c\u3002\u6b64\u4e3b\u526f\u672c\u5305\u62ec\u96c6\u7fa4\u6210\u5458\u3001\u96c6\u7fa4\u72b6\u6001\u3001\u96c6\u7fa4\u66f4\u6539\u4ee5\u53ca\u8bb0\u5f55 Ceph Storage \u96c6\u7fa4\u6574\u4f53\u8fd0\u884c\u72b6\u51b5\u7684\u4fe1\u606f\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#monitor","title":"\u9ad8\u53ef\u7528 Monitor","text":"<p>Ceph \u5ba2\u6237\u7aef\u5fc5\u987b\u8054\u7cfb Ceph Monitor \u5e76\u83b7\u53d6\u96c6\u7fa4\u6620\u5c04\u7684\u5f53\u524d\u526f\u672c\uff0c\u624d\u80fd\u4ece Ceph \u96c6\u7fa4\u8bfb\u53d6\u6570\u636e\u6216\u5c06\u6570\u636e\u5199\u5165 Ceph \u96c6\u7fa4\u3002</p> <p>Ceph \u96c6\u7fa4\u53ef\u4ee5\u53ea\u4f7f\u7528\u5355\u4e2a Monitor \u6b63\u5e38\u8fd0\u884c\uff0c\u4f46\u53ea\u6709\u4e00\u4e2a Monitor \u7684 Ceph \u96c6\u7fa4\u5b58\u5728\u5355\u70b9\u6545\u969c\uff1a\u5982\u679c Monitor \u5b95\u673a\uff0cCeph \u5ba2\u6237\u7aef\u5c06\u65e0\u6cd5\u4ece\u96c6\u7fa4\u8bfb\u53d6\u6570\u636e\u6216\u5411\u96c6\u7fa4\u5199\u5165\u6570\u636e\u3002</p> <p>Ceph \u5229\u7528\u76d1\u63a7\u5668\u96c6\u7fa4\u6765\u63d0\u9ad8\u53ef\u9760\u6027\u548c\u5bb9\u9519\u80fd\u529b\u3002\u4f46\u662f\uff0c\u5f53\u4f7f\u7528\u76d1\u89c6\u5668\u96c6\u7fa4\u65f6\uff0c\u96c6\u7fa4\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u76d1\u89c6\u5668\u53ef\u80fd\u4f1a\u56e0\u5ef6\u8fdf\u6216\u5176\u4ed6\u6545\u969c\u800c\u6ede\u540e\u3002Ceph \u901a\u8fc7\u8981\u6c42\u591a\u4e2a monitor \u5b9e\u4f8b\u5c31\u96c6\u7fa4\u7684\u72b6\u6001\u8fbe\u6210\u4e00\u81f4\u6765\u51cf\u8f7b\u8fd9\u4e9b\u8d1f\u9762\u5f71\u54cd\u3002\u4e3a\u4e86\u5728 Monitor \u4e4b\u95f4\u5c31\u96c6\u7fa4\u7684\u72b6\u6001\u8fbe\u6210\u5171\u8bc6\uff0cCeph \u4f7f\u7528 Paxos \u7b97\u6cd5\u548c\u5927\u591a\u6570 Monitor\uff08\u4f8b\u5982\uff0c\u4e00\u4e2a\u5728\u4ec5\u5305\u542b\u4e00\u4e2a monitor \u7684\u96c6\u7fa4\u4e2d\uff0c\u4e24\u4e2a\u5728\u5305\u542b 3 \u4e2a Monitor \u7684\u96c6\u7fa4\u4e2d\uff0c\u4e09\u4e2a\u5728\u5305\u542b 5 \u4e2a Monitor \u7684\u96c6\u7fa4\u4e2d\uff0c\u56db\u4e2a\u5728\u5305\u542b 6 \u4e2a Monitor \u7684\u96c6\u7fa4\u4e2d\uff0c \u7b49\u7b49\uff09\u3002</p> <p>\u6709\u5173\u914d\u7f6e Monitor \u7684\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Monitor Config Reference\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_4","title":"\u9ad8\u53ef\u7528\u8eab\u4efd\u9a8c\u8bc1","text":"<p>Ceph \u4f7f\u7528 <code>cephx</code> \u8eab\u4efd\u9a8c\u8bc1\u7cfb\u7edf\u5bf9\u7528\u6237\u548c\u5b88\u62a4\u8fdb\u7a0b\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\uff0c\u5e76\u9632\u6b62\u4e2d\u95f4\u4eba\u653b\u51fb\u3002</p> <p>Note</p> <p><code>cephx</code> \u534f\u8bae\u4e0d\u5904\u7406\u4f20\u8f93\u4e2d\u7684\u6570\u636e\u52a0\u5bc6\uff08\u4f8b\u5982 SSL/TLS\uff09\u6216\u9759\u6001\u52a0\u5bc6\u3002</p> <p><code>Cephx</code> \u4f7f\u7528\u5171\u4eab\u5bc6\u94a5\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002\u8fd9\u610f\u5473\u7740\u5ba2\u6237\u7aef\u548c Monitor \u96c6\u7fa4\u90fd\u4fdd\u7559\u5ba2\u6237\u7aef\u5bc6\u94a5\u7684\u526f\u672c\u3002</p> <p><code>cephx</code> \u534f\u8bae\u4f7f\u6bcf\u4e00\u65b9\u90fd\u53ef\u4ee5\u5728\u4e0d\u6cc4\u9732\u5bc6\u94a5\u7684\u60c5\u51b5\u4e0b\u5411\u53e6\u4e00\u65b9\u8bc1\u660e\u5b83\u62e5\u6709\u5bc6\u94a5\u7684\u526f\u672c\u3002\u8fd9\u63d0\u4f9b\u4e86\u76f8\u4e92\u8eab\u4efd\u9a8c\u8bc1\uff0c\u5e76\u5141\u8bb8\u96c6\u7fa4\u786e\u8ba4 \uff081\uff09 \u7528\u6237\u62e5\u6709\u5bc6\u94a5\uff0c\u4ee5\u53ca \uff082\uff09 \u7528\u6237\u53ef\u4ee5\u786e\u4fe1\u96c6\u7fa4\u62e5\u6709\u5bc6\u94a5\u7684\u526f\u672c\u3002</p> <p>\u5982\u53ef\u6269\u5c55\u6027\u548c\u9ad8\u53ef\u7528\u6027\u4e2d\u6240\u8ff0\uff0cCeph \u5728\u5ba2\u6237\u7aef\u548c Ceph \u5bf9\u8c61\u5b58\u50a8\u4e4b\u95f4\u6ca1\u6709\u4efb\u4f55\u4e2d\u5fc3\u5316\u7684\u63a5\u53e3\u3002\u5f97\u76ca\u4e8e\u6b64\uff0cCeph \u907f\u514d\u4e86\u6b64\u7c7b\u4e2d\u5fc3\u5316\u7684\u63a5\u53e3\u5e26\u6765\u7684\u74f6\u9888\u3002\u4f46\u662f\uff0c\u8fd9\u610f\u5473\u7740\u5ba2\u6237\u7aef\u5fc5\u987b\u76f4\u63a5\u4e0e OSD \u4ea4\u4e92\u3002Ceph \u5ba2\u6237\u7aef\u548c OSD \u4e4b\u95f4\u7684\u76f4\u63a5\u4ea4\u4e92\u9700\u8981\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u8fde\u63a5\u3002<code>cephx</code> \u8eab\u4efd\u9a8c\u8bc1\u7cfb\u7edf\u5efa\u7acb\u5e76\u7ef4\u62a4\u8fd9\u4e9b\u7ecf\u8fc7\u8eab\u4efd\u9a8c\u8bc1\u7684\u8fde\u63a5\u3002</p> <p><code>cephx</code> \u534f\u8bae\u7684\u8fd0\u884c\u65b9\u5f0f\u7c7b\u4f3c\u4e8e Kerberos\u3002</p> <p>\u7528\u6237\u8c03\u7528 Ceph \u5ba2\u6237\u7aef\u6765\u8054\u7cfb Monitor\u3002\u4e0e Kerberos \u4e0d\u540c\uff0c\u6bcf\u4e2a Monitor \u90fd\u53ef\u4ee5\u5bf9\u7528\u6237\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u5e76\u5206\u53d1\u5bc6\u94a5\uff0c\u8fd9\u610f\u5473\u7740\u5728\u4f7f\u7528 <code>cephx</code> \u65f6\u6ca1\u6709\u5355\u70b9\u6545\u969c\uff0c\u4e5f\u6ca1\u6709\u74f6\u9888\u3002Monitor \u8fd4\u56de\u7c7b\u4f3c\u4e8e Kerberos \u7968\u8bc1\u7684\u8eab\u4efd\u9a8c\u8bc1\u6570\u636e\u7ed3\u6784\u3002\u6b64\u8eab\u4efd\u9a8c\u8bc1\u6570\u636e\u7ed3\u6784\u5305\u542b\u7528\u4e8e\u83b7\u53d6 Ceph \u670d\u52a1\u7684\u4f1a\u8bdd\u5bc6\u94a5\u3002\u4f1a\u8bdd\u5bc6\u94a5\u672c\u8eab\u4f7f\u7528\u7528\u6237\u7684\u6c38\u4e45\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\uff0c\u8fd9\u610f\u5473\u7740\u53ea\u6709\u7528\u6237\u624d\u80fd\u4ece Monitor \u8bf7\u6c42\u670d\u52a1\u3002\u7136\u540e\uff0c\u5ba2\u6237\u7aef\u4f7f\u7528\u4f1a\u8bdd\u5bc6\u94a5\u5411 Monitor \u8bf7\u6c42\u670d\u52a1\uff0cMonitor \u5411\u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u7968\u8bc1\uff0c\u8be5\u7968\u8bc1\u6839\u636e\u5b9e\u9645\u5904\u7406\u6570\u636e\u7684 OSD \u5bf9\u5ba2\u6237\u7aef\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002Monitor \u548c OSD \u5171\u4eab\u4e00\u4e2a\u5bc6\u94a5\uff0c\u8fd9\u610f\u5473\u7740\u5ba2\u6237\u7aef\u53ef\u4ee5\u4f7f\u7528 Monitor \u63d0\u4f9b\u7684\u7968\u636e\u5bf9\u96c6\u7fa4\u4e2d\u7684\u4efb\u4f55 OSD \u6216 MDS \u670d\u52a1\u5668\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u3002</p> <p>\u4e0e Kerberos \u7968\u8bc1\u4e00\u6837\uff0c<code>cephx</code> \u7968\u8bc1\u4e5f\u4f1a\u8fc7\u671f\u3002\u653b\u51fb\u8005\u65e0\u6cd5\u4f7f\u7528\u5df2\u8fc7\u671f\u7684\u7968\u8bc1\u6216\u79d8\u5bc6\u83b7\u53d6\u7684\u4f1a\u8bdd\u5bc6\u94a5\u3002\u8fd9\u79cd\u5f62\u5f0f\u7684\u8eab\u4efd\u9a8c\u8bc1\u53ef\u4ee5\u9632\u6b62\u6709\u6743\u8bbf\u95ee\u901a\u4fe1\u4ecb\u8d28\u7684\u653b\u51fb\u8005\u4ee5\u5176\u4ed6\u7528\u6237\u7684\u8eab\u4efd\u521b\u5efa\u865a\u5047\u6d88\u606f\uff0c\u5e76\u9632\u6b62\u653b\u51fb\u8005\u66f4\u6539\u5176\u4ed6\u7528\u6237\u7684\u5408\u6cd5\u6d88\u606f\uff0c\u53ea\u8981\u7528\u6237\u7684\u5bc6\u94a5\u5728\u8fc7\u671f\u4e4b\u524d\u6ca1\u6709\u6cc4\u9732\u3002</p> <p>\u7ba1\u7406\u5458\u5fc5\u987b\u5728\u4f7f\u7528 <code>cephx</code> \u4e4b\u524d\u8bbe\u7f6e\u7528\u6237\u3002\u5728\u4e0b\u56fe\u4e2d\uff0c<code>client.admin</code> \u7528\u6237\u4ece\u547d\u4ee4\u884c\u8c03\u7528 <code>ceph auth get-or-create-key</code> \u4ee5\u751f\u6210\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002Ceph \u7684<code>auth</code>\u5b50\u7cfb\u7edf\u751f\u6210\u7528\u6237\u540d\u548c\u5bc6\u94a5\uff0c\u5728 Monitor \u4e0a\u5b58\u50a8\u526f\u672c\uff0c\u5e76\u5c06\u7528\u6237\u7684\u5bc6\u94a5\u4f20\u8f93\u56de <code>client.admin</code> \u7528\u6237\u3002\u8fd9\u610f\u5473\u7740\u5ba2\u6237\u7aef\u548c Monitor \u5171\u4eab\u4e00\u4e2a\u5bc6\u94a5\u3002</p> <p>Note</p> <p><code>client.admin</code> \u7528\u6237\u5fc5\u987b\u4ee5\u5b89\u5168\u7684\u65b9\u5f0f\u5411\u7528\u6237\u63d0\u4f9b\u7528\u6237 ID \u548c\u5bc6\u94a5\u3002</p> <p></p> <p>\u4ee5\u4e0b\u662f\u5ba2\u6237\u7aef\u4f7f\u7528 Monitor \u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u7684\u65b9\u5f0f\u3002\u5ba2\u6237\u7aef\u5c06\u7528\u6237\u540d\u4f20\u9012\u7ed9 Monitor\u3002Monitor \u4f1a\u751f\u6210\u4e00\u4e2a\u4f1a\u8bdd\u5bc6\u94a5\uff0c\u8be5\u5bc6\u94a5\u4f7f\u7528\u4e0e<code>username</code>\u5173\u8054\u7684\u5bc6\u94a5\u8fdb\u884c\u52a0\u5bc6\u3002Monitor \u5c06\u52a0\u5bc6\u7684\u7968\u8bc1\u4f20\u8f93\u5230\u5ba2\u6237\u7aef\u3002\u5ba2\u6237\u7aef\u4f7f\u7528\u5171\u4eab\u5bc6\u94a5\u89e3\u5bc6\u6709\u6548\u8d1f\u8f7d\u3002\u4f1a\u8bdd\u5bc6\u94a5\u6807\u8bc6\u7528\u6237\uff0c\u6b64\u6807\u8bc6\u884c\u4e3a\u5c06\u6301\u7eed\u6574\u4e2a\u4f1a\u8bdd\u6301\u7eed\u65f6\u95f4\u3002\u5ba2\u6237\u7aef\u4e3a\u7528\u6237\u8bf7\u6c42\u7968\u8bc1\uff0c\u5e76\u4f7f\u7528\u4f1a\u8bdd\u5bc6\u94a5\u5bf9\u7968\u8bc1\u8fdb\u884c\u7b7e\u540d\u3002Monitor \u751f\u6210\u4e00\u4e2a\u7968\u8bc1\uff0c\u5e76\u4f7f\u7528\u7528\u6237\u7684\u5bc6\u94a5\u5bf9\u5176\u8fdb\u884c\u52a0\u5bc6\u3002\u52a0\u5bc6\u7684\u7968\u8bc1\u5c06\u4f20\u8f93\u5230\u5ba2\u6237\u7aef\u3002\u5ba2\u6237\u7aef\u89e3\u5bc6\u7968\u8bc1\uff0c\u5e76\u4f7f\u7528\u5b83\u5bf9\u96c6\u7fa4\u4e2d\u7684 OSD \u548c\u5143\u6570\u636e\u670d\u52a1\u5668\u53d1\u51fa\u8bf7\u6c42\u8fdb\u884c\u7b7e\u540d\u3002</p> <p></p> <p><code>cephx</code> \u534f\u8bae\u9a8c\u8bc1\u5ba2\u6237\u7aef\u548c Ceph \u5b88\u62a4\u8fdb\u7a0b\u4e4b\u95f4\u7684\u6301\u7eed\u901a\u4fe1\u3002\u521d\u59cb\u8eab\u4efd\u9a8c\u8bc1\u540e\uff0c\u5ba2\u6237\u7aef\u548c\u5b88\u62a4\u7a0b\u5e8f\u4e4b\u95f4\u53d1\u9001\u7684\u6bcf\u6761\u6d88\u606f\u90fd\u4f7f\u7528\u7968\u8bc1\u8fdb\u884c\u7b7e\u540d\uff0c\u8be5\u7968\u8bc1\u53ef\u7531 Monitor\u3001OSD \u548c\u5143\u6570\u636e\u5b88\u62a4\u7a0b\u5e8f\u9a8c\u8bc1\u3002\u6b64\u7968\u8bc1\u4f7f\u7528\u5ba2\u6237\u7aef\u548c\u5b88\u62a4\u7a0b\u5e8f\u4e4b\u95f4\u5171\u4eab\u7684\u5bc6\u94a5\u8fdb\u884c\u9a8c\u8bc1\u3002</p> <p></p> <p>\u6b64\u8eab\u4efd\u9a8c\u8bc1\u4ec5\u4fdd\u62a4 Ceph \u5ba2\u6237\u7aef\u548c Ceph \u5b88\u62a4\u8fdb\u7a0b\u4e4b\u95f4\u7684\u8fde\u63a5\u3002\u8eab\u4efd\u9a8c\u8bc1\u4e0d\u4f1a\u6269\u5c55\u5230 Ceph \u5ba2\u6237\u7aef\u4e4b\u5916\u3002\u5982\u679c\u7528\u6237\u4ece\u8fdc\u7a0b\u4e3b\u673a\u8bbf\u95ee Ceph \u5ba2\u6237\u7aef\uff0c\u5219 cephx \u8eab\u4efd\u9a8c\u8bc1\u5c06\u4e0d\u4f1a\u5e94\u7528\u4e8e\u7528\u6237\u7684\u4e3b\u673a\u4e0e\u5ba2\u6237\u7aef\u4e3b\u673a\u4e4b\u95f4\u7684\u8fde\u63a5\u3002</p> <p>\u6709\u5173\u914d\u7f6e\u8be6\u7ec6\u4fe1\u606f\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Cephx Config \u6307\u5357\u3002</p> <p>\u6709\u5173\u7528\u6237\u7ba1\u7406\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u7528\u6237\u7ba1\u7406.</p> <p>\u6709\u5173\u6388\u6743\u548c\u8eab\u4efd\u9a8c\u8bc1\u4e4b\u95f4\u533a\u522b\u7684\u66f4\u591a\u4fe1\u606f\uff0c\u4ee5\u53ca <code>cephx</code> \u7968\u636e\u548c\u4f1a\u8bdd\u5bc6\u94a5\u8bbe\u7f6e\u7684\u5206\u6b65\u8bf4\u660e\uff0c\u8bf7\u53c2\u9605 Cephx \u8eab\u4efd\u9a8c\u8bc1\u534f\u8bae\u7684\u8be6\u7ec6\u8bf4\u660e</p>"},{"location":"ceph_doc/architecture/architecture/#_5","title":"\u667a\u80fd\u5b88\u62a4\u8fdb\u7a0b\u652f\u6491\u8d85\u5927\u89c4\u6a21","text":"<p>\u8bb8\u591a\u5b58\u50a8\u96c6\u7fa4\u7684\u4e00\u4e2a\u7279\u70b9\u662f\u4f7f\u7528\u4e2d\u5fc3\u5316\u7684\u63a5\u53e3\uff0c\u6765\u8ddf\u8e2a\u5141\u8bb8\u5ba2\u6237\u7aef\u8bbf\u95ee\u7684\u8282\u70b9\u3002\u8fd9\u79cd\u96c6\u4e2d\u5f0f\u67b6\u6784\u901a\u8fc7\u53cc\u91cd\u8c03\u5ea6\u7684\u65b9\u5f0f\u5411\u5ba2\u6237\u7aef\u63d0\u4f9b\u670d\u52a1\u3002\u5728 PB \u5230 EB \u7684\u89c4\u6a21\u4e0a\uff0c\u8fd9\u79cd\u53cc\u91cd\u8c03\u5ea6\u662f\u4e00\u4e2a\u91cd\u5927\u74f6\u9888\u3002</p> <p>Ceph \u4f7f OSD \u5b88\u62a4\u8fdb\u7a0b\u548c\u5ba2\u6237\u7aef\u90fd\u53ef\u4ee5\u611f\u77e5\u96c6\u7fa4\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u8fd9\u4e00\u74f6\u9888\u95ee\u9898\u3002\u4e0e Ceph \u5ba2\u6237\u7aef\u4e00\u6837\uff0c\u6bcf\u4e2a OSD \u5b88\u62a4\u8fdb\u7a0b\u90fd\u77e5\u9053\u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6 OSD \u5b88\u62a4\u8fdb\u7a0b\uff0c\u56e0\u6b64\u5b83\u4eec\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u901a\u4fe1\uff0c\u5e76\u76f4\u63a5\u4e0e Ceph Monitor \u4ea4\u4e92\u3002\u96c6\u7fa4\u611f\u77e5\u4f7f\u5ba2\u6237\u7aef\u80fd\u591f\u76f4\u63a5\u4e0e OSD \u5b88\u62a4\u8fdb\u7a0b\u4ea4\u4e92\u3002</p> <p>\u7531\u4e8e Ceph \u5ba2\u6237\u7aef\u3001Monitor \u548c OSD \u5b88\u62a4\u8fdb\u7a0b\u53ef\u4ee5\u76f4\u63a5\u76f8\u4e92\u901a\u4fe1\uff0c\u8fd9\u610f\u5473\u7740 OSD \u53ef\u4ee5\u5229\u7528\u672c\u5730\u8282\u70b9\u7684 CPU \u548c\u5185\u5b58\u6267\u884c\u90a3\u4e9b\u6709\u53ef\u80fd\u62d6\u57ae\u4e2d\u592e\u670d\u52a1\u5668\u7684\u4efb\u52a1\u3002\u4ece\u800c\u66f4\u6709\u6548\u7684\u5229\u7528\u4e86\u96c6\u7fa4\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u63d0\u4f9b\u4e86\u51e0\u4e2a\u597d\u5904\uff1a</p> <ol> <li>OSD \u76f4\u63a5\u670d\u52a1\u4e8e\u5ba2\u6237\u7aef :\u7531\u4e8e\u4efb\u4f55\u7f51\u7edc\u8bbe\u5907\u90fd\u6709\u6700\u5927\u5e76\u53d1\u8fde\u63a5\u4e0a\u9650\uff0c \u89c4\u6a21\u5de8\u5927\u65f6\u4e2d\u592e\u5316\u7684\u7cfb\u7edf\u5176\u7269\u7406\u5c40\u9650\u6027\u5c31\u66b4\u9732\u4e86\u3002 Ceph \u5141\u8bb8\u5ba2\u6237\u7aef\u76f4\u63a5\u548c OSD \u8282\u70b9\u8054\u7cfb\uff0c \u8fd9\u5728\u6d88\u9664\u5355\u6545\u969c\u70b9\u7684\u540c\u65f6\uff0c \u63d0\u5347\u4e86\u6027\u80fd\u548c\u7cfb\u7edf\u603b\u5bb9\u91cf\u3002 Ceph \u5ba2\u6237\u7aef\u53ef\u6309\u9700\u7ef4\u62a4\u548c\u67d0 OSD \u7684\u4f1a\u8bdd\uff0c \u800c\u4e0d\u662f\u4e00\u4e2d\u592e\u670d\u52a1\u5668\u3002</li> <li>OSD \u6210\u5458\u548c\u72b6\u6001 :Ceph OSD \u52a0\u5165\u96c6\u7fa4\u540e\u4f1a\u6301\u7eed\u62a5\u544a\u81ea\u5df1\u7684\u72b6\u6001\u3002 \u5728\u5e95\u5c42\uff0c OSD \u72b6\u6001\u4e3a <code>up</code> \u6216 <code>down</code> \uff0c \u53cd\u6620\u5b83\u662f\u5426\u5728\u8fd0\u884c\u3001\u80fd\u5426\u63d0\u4f9b\u670d\u52a1\u3002 \u5982\u679c\u4e00 OSD \u72b6\u6001\u4e3a <code>down</code> \u4e14 <code>in</code> \uff0c \u8868\u660e OSD \u5b88\u62a4\u8fdb\u7a0b\u53ef\u80fd\u5931\u8d25\u4e86\uff1b \u5982\u679c\u4e00 OSD \u5b88\u62a4\u8fdb\u7a0b\u6ca1\u5728\u8fd0\u884c\uff08\u6bd4\u5982\u5d29\u6e83\u4e86\uff09\uff0c \u5b83\u5c31\u4e0d\u80fd\u4eb2\u81ea\u5411\u76d1\u89c6\u5668\u62a5\u544a\u81ea\u5df1\u662f <code>down</code> \u7684\u3002 \u6240\u6709 OSD \u90fd\u4f1a\u5468\u671f\u6027\u5730\u5411 Ceph \u76d1\u89c6\u5668\u53d1\u9001\u6d88\u606f \uff08 luminous \u4e4b\u524d\u662f <code>MPGStats</code> \uff0c luminous \u8d77\u65b0\u589e <code>MOSDBeacon</code> \uff09\uff1b \u5982\u679c Ceph \u76d1\u89c6\u5668\u5728\u914d\u7f6e\u7684\u5468\u671f\u5185\u6ca1\u770b\u5230\u8fd9\u6d88\u606f\uff0c\u5c31\u628a\u5b83\u6807\u8bb0\u4e3a <code>down</code> \uff0c \u7136\u800c\uff0c\u8fd9\u53ea\u662f\u4e2a\u6545\u969c\u53cc\u4fdd\u9669\u673a\u5236\u3002\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\u4f1a\u5224\u65ad\u90bb\u5c45 OSD \u662f\u5426\u5012\u4e0b\u3001\u5e76\u62a5\u544a\u7ed9\u76d1\u89c6\u5668\uff08\u4eec\uff09\u3002 \u8fd9\u6837\u5c31\u80fd\u4fdd\u8bc1 Ceph \u76d1\u89c6\u5668\u59cb\u7ec8\u662f\u4e2a\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\u3002\u8be6\u60c5\u8bf7\u53c2\u9605\u76d1\u63a7 OSD \u548c\u5fc3\u8df3\u3002</li> <li>\u6570\u636e\u6e05\u7406 :\u4e3a\u4e86\u4fdd\u6301\u6570\u636e\u4e00\u81f4\u6027\uff0cOSD \u5b88\u62a4\u8fdb\u7a0b\u4f1a\u6e05\u7406 RADOS \u5bf9\u8c61\u3002OSD \u5c06\u5176\u672c\u5730\u5bf9\u8c61\u7684\u5143\u6570\u636e\u4e0e\u5b58\u50a8\u5728\u5176\u4ed6 OSD \u4e0a\u7684\u526f\u672c\u7684\u5143\u6570\u636e\u8fdb\u884c\u6bd4\u8f83\u3002\u6570\u636e\u6e05\u7406\u6309 PG \u7ec4\u8fdb\u884c\uff0c\u6bd4\u8f83\u5bf9\u8c61\u5927\u5c0f\u4e0e\u5143\u6570\u636e\uff0c\u5e76\u4e14\u901a\u5e38\u6bcf\u5929\u6267\u884c\u4e00\u6b21\u3002OSD \u5b88\u62a4\u8fdb\u7a0b\u901a\u8fc7\u5c06\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u9010\u4f4d\u4e0e\u5176\u6821\u9a8c\u548c\u8fdb\u884c\u6bd4\u8f83\u6765\u6267\u884c\u66f4\u6df1\u5165\u7684\u6e05\u7406\u3002\u6df1\u5ea6\u6e05\u7406\u4f1a\u5728\u9a71\u52a8\u5668\u4e0a\u53d1\u73b0\u4f7f\u7528\u8f7b\u5ea6\u6e05\u7406\u65e0\u6cd5\u68c0\u6d4b\u5230\u7684\u574f\u6247\u533a\u3002\u6709\u5173\u914d\u7f6e\u6e05\u7406\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6570\u636e\u6e05\u7406\u3002</li> <li>\u6570\u636e\u526f\u672c :\u548c Ceph \u5ba2\u6237\u7aef\u4e00\u6837\uff0c OSD \u4e5f\u7528 CRUSH \u7b97\u6cd5\uff0c \u4f46\u7528\u4e8e\u8ba1\u7b97\u526f\u672c\u5b58\u5230\u54ea\u91cc\uff08\u4e5f\u7528\u4e8e\u91cd\u5747\u8861\uff09\u3002 \u4e00\u4e2a\u5178\u578b\u7684\u60c5\u5f62\u662f\uff0c \u4e00\u5ba2\u6237\u7aef\u7528 CRUSH \u7b97\u6cd5\u7b97\u51fa\u5bf9\u8c61\u5e94\u5b58\u5230\u54ea\u91cc\uff0c \u5e76\u628a\u5bf9\u8c61\u6620\u5c04\u5230\u5b58\u50a8\u6c60\u548c\u5f52\u7f6e\u7ec4\uff0c \u7136\u540e\u67e5\u627e CRUSH \u56fe\u6765\u786e\u5b9a\u6b64\u5f52\u7f6e\u7ec4\u7684\u4e3b OSD \u3002</li> </ol> <p>\u5ba2\u6237\u7aef\u628a\u5bf9\u8c61\u5199\u5165\u76ee\u6807 PG \u7ec4\u7684\u4e3b OSD \uff0c \u7136\u540e\u8fd9\u4e2a\u4e3b OSD \u518d\u7528\u5b83\u7684 CRUSH \u56fe\u526f\u672c\u627e\u51fa\u7528\u4e8e\u653e\u5bf9\u8c61\u526f\u672c\u7684\u7b2c\u4e8c\u3001\u7b2c\u4e09\u4e2a OSD \uff0c \u5e76\u628a\u6570\u636e\u590d\u5236\u5230\u9002\u5f53\u7684 PG \u7ec4\u6240\u5bf9\u5e94\u7684\u7b2c\u4e8c\u3001\u7b2c\u4e09 OSD \uff08\u8981\u591a\u5c11\u526f\u672c\u5c31\u6709\u591a\u5c11 OSD \uff09\uff0c \u6700\u7ec8\uff0c\u786e\u8ba4\u6570\u636e\u6210\u529f\u5b58\u50a8\u540e\u53cd\u9988\u7ed9\u5ba2\u6237\u7aef\u3002</p> <p></p>"},{"location":"ceph_doc/architecture/architecture/#_6","title":"\u52a8\u6001\u96c6\u7fa4\u7ba1\u7406","text":"<p>\u5728\u53ef\u6269\u5c55\u6027\u548c\u9ad8\u53ef\u7528\u6027\u90e8\u5206\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86 Ceph \u5982\u4f55\u4f7f\u7528 CRUSH\u3001\u96c6\u7fa4\u62d3\u6251\u548c\u667a\u80fd\u5b88\u62a4\u8fdb\u7a0b\u6765\u6269\u5c55\u548c\u7ef4\u62a4\u9ad8\u53ef\u7528\u6027\u3002Ceph \u7684\u6838\u5fc3\u8bbe\u8ba1\u662f\u81ea\u6cbb\u3001\u81ea\u6108\u548c\u667a\u80fd\u7684 Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\u3002\u8ba9\u6211\u4eec\u66f4\u6df1\u5165\u5730\u4e86\u89e3\u4e00\u4e0b CRUSH \u5982\u4f55\u4f7f\u73b0\u4ee3\u4e91\u5b58\u50a8\u57fa\u7840\u8bbe\u65bd\u80fd\u591f\u653e\u7f6e\u6570\u636e\u3001\u91cd\u65b0\u5e73\u8861\u96c6\u7fa4\u3001\u81ea\u9002\u5e94\u5730\u653e\u7f6e\u548c\u5e73\u8861\u6570\u636e\u4ee5\u53ca\u4ece\u6545\u969c\u4e2d\u6062\u590d\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_7","title":"\u5b58\u50a8\u6c60","text":"<p>Ceph \u5b58\u50a8\u7cfb\u7edf\u652f\u6301\u5b58\u50a8\u201c\u6c60\u201d\u7684\u6982\u5ff5\uff0c\u5373\u7528\u4e8e\u5b58\u50a8\u5bf9\u8c61\u7684\u903b\u8f91\u5206\u533a\u3002 Ceph \u5ba2\u6237\u7aef\u4ece Ceph Monitor \u68c0\u7d22\u96c6\u7fa4\u6620\u5c04\uff0c\u5e76\u5c06 RADOS \u5bf9\u8c61\u5199\u5165\u5b58\u50a8\u6c60\u3002Ceph \u5c06\u6570\u636e\u653e\u7f6e\u5728\u6c60\u4e2d\u7684\u65b9\u5f0f\u53d6\u51b3\u4e8e\u6c60<code>size</code>\u6216\u526f\u672c\u6570\u91cf\u3001CRUSH \u89c4\u5219\u4ee5\u53ca\u6c60\u4e2d\u7684 PG \u6570\u91cf\u3002</p> <p></p> <p>\u5b58\u50a8\u6c60\u81f3\u5c11\u8bbe\u7f6e\u4ee5\u4e0b\u53c2\u6570\uff1a</p> <ul> <li>\u5bf9\u8c61\u7684\u6240\u6709\u6743/\u8bbf\u95ee\u6743\u9650</li> <li>PG \u6570\u91cf</li> <li>CRUSH \u89c4\u5219</li> </ul> <p>\u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u8bbe\u7f6e\u5b58\u50a8\u6c60\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#pg-osd","title":"\u5c06 PG \u6620\u5c04\u5230 OSD","text":"<p>\u6bcf\u4e2a\u6c60\u90fd\u6709\u591a\u4e2a\u7f6e\u653e\u7fa4\u7ec4 \uff08PG\uff09\u3002CRUSH \u5c06 PG \u52a8\u6001\u6620\u5c04\u5230 OSD\u3002\u5f53 Ceph \u5ba2\u6237\u7aef\u5b58\u50a8\u5bf9\u8c61\u65f6\uff0cCRUSH \u4f1a\u5c06\u6bcf\u4e2a RADOS \u5bf9\u8c61\u6620\u5c04\u5230\u4e00\u4e2a PG\u3002</p> <p>\u901a\u8fc7\u5c06 RADOS \u5bf9\u8c61\u6620\u5c04\u5230 PG \uff0cCeph \u5728 OSD \u5b88\u62a4\u8fdb\u7a0b\u548c\u5ba2\u6237\u7aef\u4e4b\u95f4\u5b9e\u73b0\u4e86\u62bd\u8c61\u548c\u95f4\u63a5\u5c42\u3002\u5f53\u5185\u90e8\u62d3\u6251\u53d1\u751f\u53d8\u5316\u65f6\uff0cCeph \u5fc5\u987b\u80fd\u591f\u81ea\u9002\u5e94\u5730\u589e\u957f\uff08\u6216\u6536\u7f29\uff09\u548c\u91cd\u65b0\u5206\u53d1\u6570\u636e\u3002</p> <p>\u5982\u679c Ceph \u5ba2\u6237\u7aef\u201c\u77e5\u9053\u201d\u54ea\u4e9b OSD \u5b88\u62a4\u8fdb\u7a0b\u6b63\u5728\u5b58\u50a8\u54ea\u4e9b\u5bf9\u8c61\uff0c\u5219 Ceph \u5ba2\u6237 \u548c OSD \u5b88\u62a4\u8fdb\u7a0b\u4e4b\u95f4\u5c06\u5b58\u5728\u5f3a\u8026\u5408\u3002\u4f46 Ceph \u907f\u514d\u4e86\u4efb\u4f55\u6b64\u7c7b\u5f3a\u8026\u5408\u3002\u76f8\u53cd\uff0cCRUSH \u7b97\u6cd5\u5c06\u6bcf\u4e2a RADOS \u5bf9\u8c61\u6620\u5c04\u5230\u4e00\u4e2a PG\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a PG \u6620\u5c04\u5230\u4e00\u4e2a\u6216\u591a\u4e2a OSD \u5b88\u62a4\u8fdb\u7a0b\u3002\u6b64\u201c\u95f4\u63a5\u5c42\u201d\u5141\u8bb8 Ceph \u5728\u65b0\u7684 OSD \u5b88\u62a4\u8fdb\u7a0b\u53ca\u5176\u5e95\u5c42 OSD \u8bbe\u5907\u4e0a\u7ebf\u65f6\u52a8\u6001\u5730\u91cd\u65b0\u5e73\u8861\u3002\u4e0b\u56fe\u663e\u793a\u4e86 CRUSH \u7b97\u6cd5\u5982\u4f55\u5c06\u5bf9\u8c61\u6620\u5c04\u5230 PG\uff0c\u4ee5\u53ca\u5982\u4f55\u5c06 PG \u6620\u5c04\u5230 OSD\u3002</p> <p></p> <p>\u5ba2\u6237\u7aef\u4f7f\u7528\u5176\u96c6\u7fa4\u6620\u5c04\u526f\u672c\u548c CRUSH \u7b97\u6cd5\u6765\u7cbe\u786e\u8ba1\u7b97\u5728\u8bfb\u53d6\u6216\u5199\u5165\u7279\u5b9a\u5bf9\u8c61\u65f6\u5c06\u4f7f\u7528\u7684 OSD\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#pg-id","title":"\u8ba1\u7b97 PG ID","text":"<p>\u5f53 Ceph \u5ba2\u6237\u7aef\u7ed1\u5b9a\u5230 Ceph Monitor \u65f6\uff0c\u5b83\u4f1a\u68c0\u7d22\u6700\u65b0\u7248\u672c\u7684\u96c6\u7fa4\u6620\u5c04\u3002\u5f53\u5ba2\u6237\u7aef\u83b7\u53d6\u5230\u96c6\u7fa4\u6620\u5c04\u7684\u526f\u672c\u65f6\uff0c\u5b83\u5c31\u53ef\u4ee5\u77e5\u9053\u96c6\u7fa4\u4e2d\u7684\u6240\u6709 Monitor\u3001OSD \u548c MDS\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u83b7\u53d6\u4e86\u6700\u65b0\u7248\u672c\u7684\u96c6\u7fa4\u6620\u5c04\u7684\u526f\u672c\uff0c\u5ba2\u6237\u7aef\u4e5f\u4e0d\u77e5\u9053\u5bf9\u8c61\u4f4d\u7f6e\u7684\u4efb\u4f55\u4fe1\u606f\uff0c\u5b58\u50a8\u5bf9\u8c61\u7684\u7269\u7406\u4f4d\u7f6e\u4fe1\u606f\u5fc5\u987b\u7531\u8ba1\u7b97\u5f97\u51fa\u800c\u975e\u67e5\u8868\u3002</p> <p>\u5ba2\u6237\u7aef\u53ea\u9700\u8981\u5bf9\u8c61 ID \u548c\u6c60\u7684\u540d\u79f0\u5373\u53ef\u8ba1\u7b97\u5bf9\u8c61\u4f4d\u7f6e\u3002Ceph \u5c06\u6570\u636e\u5b58\u50a8\u5728\u547d\u540d\u5b58\u50a8\u6c60\u4e2d\uff08\u4f8b\u5982\uff0c\u201cliverpool\u201d\uff09\u3002\u5f53\u5ba2\u6237\u7aef\u5b58\u50a8\u547d\u540d\u5bf9\u8c61\uff08\u4f8b\u5982\uff0c\u201cjohn\u201d\u3001\u201cpaul\u201d\u3001\u201cgeorge\u201d\u6216\u201cringo\u201d\uff09\u65f6\uff0c\u5b83\u4f1a\u4f7f\u7528\u5bf9\u8c61\u540d\u79f0\u3001\u54c8\u5e0c\u503c\u3001\u6c60\u4e2d\u7684 PG \u6570\u91cf\u548c\u6c60\u540d\u79f0\u6765\u8ba1\u7b97 PG ID\u3002Ceph \u5ba2\u6237\u7aef\u4f7f\u7528\u4ee5\u4e0b\u6b65\u9aa4\u6765\u8ba1\u7b97 PG ID\u3002</p> <ol> <li>\u5ba2\u6237\u7aef\u8f93\u5165\u5b58\u50a8\u6c60\u540d\u79f0\u548c\u5bf9\u8c61 ID\uff08\u4f8b\u5982\uff1apool = \u201cliverpool\u201d \u548c object-id = \u201cjohn\u201d\uff09</li> <li>Ceph \u5bf9\u5bf9\u8c61 ID \u8fdb\u884c\u54c8\u5e0c\u5904\u7406\u3002</li> <li>Ceph \u8ba1\u7b97\u54c8\u5e0c\u503c\uff0c\u5bf9 PG \u7684\u6570\u91cf\u53d6\u6a21\uff08\u4f8b\u5982\uff1a<code>58</code>\uff09\uff0c\u4ee5\u83b7\u5f97 PG ID\u3002</li> <li>Ceph \u4f7f\u7528\u5b58\u50a8\u6c60\u540d\u79f0\u68c0\u7d22\u5b58\u50a8\u6c60 ID\uff1a\uff08\u4f8b\u5982\uff1a\u201cliverpool\u201d = <code>4</code>\uff09</li> <li>Ceph \u5c06\u5b58\u50a8\u6c60 ID \u9644\u52a0\u5230 PG ID \u524d\u9762\uff08\u4f8b\u5982\uff1a<code>4.58</code>\uff09\u3002</li> </ol> <p>\u901a\u8fc7\u8ba1\u7b97\u5f97\u5230\u5bf9\u8c61\u7684\u5b58\u50a8\u4f4d\u7f6e\uff0c\u8fdc\u6bd4\u901a\u8fc7\u4e00\u4e2a\u7f51\u7edc\u4f1a\u8bdd\u6765\u67e5\u8868\u9ad8\u6548\u7684\u591a\u3002CRUSH \u7b97\u6cd5\u4f7f\u5f97\u5ba2\u6237\u7aef\u53ef\u4ee5\u8ba1\u7b97\u5b58\u50a8\u5bf9\u8c61\u7684\u7406\u8bba\u5b58\u50a8\u4f4d\u7f6e\uff0c\u7136\u540e\u901a\u8fc7\u4e0e\u4e3b OSD \u76f4\u63a5\u901a\u4fe1\u6765\u5b58\u50a8\u6216\u68c0\u7d22\u5bf9\u8c61\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_8","title":"\u4e92\u8054\u548c\u5b50\u96c6","text":"<p>\u6839\u636e\u524d\u6587\u7684\u53d9\u8ff0\uff0cOSD \u5b88\u62a4\u8fdb\u7a0b\u4f1a\u901a\u8fc7\u5fc3\u8df3\u68c0\u67e5\u5f7c\u6b64\u7684\u72b6\u6001\uff0c\u5e76\u5b9a\u65f6\u4e0a\u62a5\u7ed9 Monitor\u3002OSD \u5b88\u62a4\u8fdb\u7a0b\u5f7c\u6b64\u4e4b\u95f4\u7684\u4e92\u8054\uff0c\u4f7f\u5f97 PG \u4e2d\u6240\u6709 OSD \u4e2d\u5b58\u50a8\u7684 RADOS \u5bf9\u8c61\u53ca\u5176\u5143\u6570\u636e\u8fbe\u6210\u4e00\u81f4\u7684\u72b6\u6001\u3002OSD \u5b88\u62a4\u8fdb\u7a0b\u4f1a\u5411 Monitor \u4e0a\u62a5\u4e0e\u4e4b\u4e92\u8054\u7684 OSD \u8fde\u63a5\u5931\u8d25\u6d88\u606f\uff0c\u8fd9\u79cd\u5931\u8d25\u901a\u5e38\u662f\u81ea\u6108\u7684\uff0c\u4f46\u5982\u679c\u6301\u7eed\u5b58\u5728\uff0c\u5219\u9700\u8981\u53c2\u8003\u5bf9\u7b49\u8fde\u63a5\u6545\u969c\u6545\u969c\u6392\u9664\u90e8\u5206\u8fdb\u884c\u89e3\u51b3\u3002</p> <p>Info</p> <p>\u5c31\u96c6\u7fa4\u72b6\u6001\u8fbe\u6210\u4e00\u81f4\u7684 PG \u4e0d\u4e00\u5b9a\u62e5\u6709\u5f53\u524d\u6570\u636e\u3002</p> <p>Ceph \u5b58\u50a8\u96c6\u7fa4\u8981\u6c42\u6bcf\u4e2a\u5b58\u50a8\u5bf9\u8c61\u81f3\u5c11\u6709\u4e24\u526f\u672c\uff08<code>size = 2</code>\uff09\uff0c\u4ece\u800c\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u3002\u4e3a\u4e86\u5b9e\u73b0\u9ad8\u53ef\u7528\uff0cCeph \u5b58\u50a8\u96c6\u7fa4\u5e94\u8be5\u4fdd\u8bc1\u5b58\u50a8\u5bf9\u8c61\u6709\u4e24\u4e2a\u4ee5\u4e0a\u7684\u526f\u672c\uff08<code>size = 3</code> \u4ee5\u53ca <code>min size = 2</code>)\uff09\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u964d\u7ea7\u8fd0\u884c\u540c\u65f6\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\u3002</p> <p>Warning</p> <p>\u867d\u7136\u6211\u4eec\u5728\u8fd9\u91cc\u8bf4 R2 \uff08\u4f7f\u7528\u4e24\u4e2a\u526f\u672c\u8fdb\u884c\u590d\u5236\uff09 \u662f\u6570\u636e\u5b89\u5168\u7684\u6700\u4f4e\u8981\u6c42\uff0c\u4f46\u5efa\u8bae\u4f7f\u7528 R3 \uff08\u4f7f\u7528\u4e09\u4e2a\u526f\u672c\u8fdb\u884c\u590d\u5236\uff09\u3002\u5728\u8db3\u591f\u957f\u7684\u65f6\u95f4\u7ebf\u4e0a\uff0c\u4f7f\u7528 R2 \u7b56\u7565\u5b58\u50a8\u7684\u6570\u636e\u5c06\u4e22\u5931\u3002</p> <p>\u5982\u667a\u80fd\u5b88\u62a4\u8fdb\u7a0b\u652f\u6491\u8d85\u5927\u89c4\u6a21\u7684\u56fe\u8868\u4e2d\u6240\u8ff0\uff0c\u6211\u4eec\u6ca1\u6709\u4e13\u95e8\u547d\u540d Ceph OSD \u5b88\u62a4\u7a0b\u5e8f\uff08\u4f8b\u5982\uff0c<code>osd.0</code>\u3001<code>osd.1</code> \u7b49\uff09\uff0c\u800c\u662f\u5c06\u5b83\u4eec\u79f0\u4e3a Primary\u3001Secondary \u7b49\u3002\u6309\u7167\u60ef\u4f8b\uff0cPrimary \u662f Acting Set \u4e2d\u7684\u7b2c\u4e00\u4e2a OSD\uff0c\u800c\u4e14\u5b83\u8d1f\u8d23\u534f\u8c03\u5404\u5f52\u7f6e\u7ec4\u7684\u4e92\u8054\u8fdb\u7a0b\uff0c \u6240\u4ee5\u79f0\u4e4b\u4e3aPrimary  OSD\u3002Primary \u662f\u7ed9\u5b9a PG \u4e2d**\u552f\u4e00**\u63a5\u53d7\u5ba2\u6237\u7aef\u53d1\u8d77\u7684\u5bf9\u8c61\u5199\u5165\u7684 OSD\u3002</p> <p>\u8d1f\u8d23 PG \u7684 OSD \u96c6\u5408\u79f0\u4e3a Acting Set\u3002\u672f\u8bed\u201cActing Set\u201d\u53ef\u4ee5\u6307\u5f53\u524d\u8d1f\u8d23 PG \u7684 Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\uff0c\u4e5f\u53ef\u4ee5\u6307\u5728\u67d0\u4e2a epoch \u4e4b\u524d\u8d1f\u8d23\u7279\u5b9a PG \u7684 Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\u3002</p> <p>Acting Set \u4e2d\u7684 OSD \u5b88\u62a4\u8fdb\u7a0b\u5e76\u4e0d\u603b\u662f\u5904\u4e8e<code>up</code>\u72b6\u6001\uff0cActing Set \u4e2d\u5904\u4e8e<code>up</code>\u72b6\u6001\u7684 OSD \u96c6\u5408\u88ab\u79f0\u4e3a Up Set \u3002*Up Set*\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u5b50\u96c6\uff0c\u56e0\u4e3a\u5f53 OSD \u53d1\u751f\u6545\u969c\u65f6\uff0cCeph \u53ef\u4ee5\u8bb2 PG \u91cd\u65b0\u6620\u5c04\u5230\u5176\u4ed6 OSD \u5b88\u62a4\u8fdb\u7a0b\u4e2d\u3002</p> <p>Note</p> <p>\u8003\u8651\u4e00\u4e2a PG \u7684*Acting Set*\u5305\u542b <code>osd.25</code>\u3001<code>osd.32</code> \u548c <code>osd.61</code> \u4e09\u4e2a OSD\u3002\u7b2c\u4e00\u4e2a OSD \uff08<code>osd.25</code>\uff09 \u662f Primary\u3002\u5982\u679c\u8be5 OSD \u5931\u8d25\uff0c\u5219*Secondary* \uff08<code>osd.32</code>\uff09 \u5c06\u6210\u4e3a*\u4e3b OSD*\uff0c\u5e76\u4e14 <code>osd.25</code> \u5c06\u4ece Up Set \u4e2d\u5220\u9664\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_9","title":"\u91cd\u5e73\u8861","text":"<p>\u5f53\u5411 Ceph \u96c6\u7fa4\u6dfb\u52a0\u65b0\u7684 OSD \u65f6\uff0c\u96c6\u7fa4\u6620\u5c04\u4f1a\u88ab\u66f4\u65b0\u3002\u6839\u636e\u8ba1\u7b97 PG ID\u4e2d\u6240\u8ff0\uff0c\u96c6\u7fa4\u6620\u5c04\u53d1\u751f\u53d8\u5316\u540e\uff0c\u7531\u4e8e\u5bf9\u8c61\u7684\u5b9e\u9645\u5b58\u50a8\u4f4d\u7f6e\u662f\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u7684\uff0c\u4e14\u96c6\u7fa4\u6620\u5c04\u662f\u8be5\u8ba1\u7b97\u8fc7\u7a0b\u7684\u4e00\u4e2a\u8f93\u5165\u6761\u4ef6\uff0c\u81ea\u7136\u8fd9\u4e2a\u53d8\u5316\u4f1a\u5bfc\u81f4\u5bf9\u8c61\u7684\u5b58\u50a8\u4f4d\u7f6e\u53d1\u751f\u53d8\u5316\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86 OSD \u91cd\u5e73\u8861\u7684\u8fc7\u7a0b\uff08\u5c3d\u7ba1\u76f8\u5f53\u7c97\u7565\uff0c\u56e0\u4e3a\u5728\u5927\u578b\u96c6\u7fa4\u4e2d\uff0c\u52a0\u5165\u4e00\u4e2a OSD \u7684\u5f71\u54cd\u8981\u5c0f\u7684\u591a\uff09\uff0c\u5176\u4e2d\u90e8\u5206\u53d7\u5f71\u54cd\u7684 PG \u4ece\u73b0\u6709\u7684 OSD\uff08OSD 1 \u548c OSD 2\uff09\u8fc1\u79fb\u5230\u65b0\u7684 OSD\uff08OSD 3\uff09\u3002\u5373\u4f7f\u5728\u91cd\u5e73\u8861\u4e4b\u540e\uff0cCRUSH \u4e5f\u5f88\u7a33\u5b9a\uff0c\u8bb8\u591a PG \u4ecd\u7136\u4fdd\u6301\u5176\u539f\u672c\u7684\u914d\u7f6e\uff0c\u800c\u4e14\u6bcf\u4e2a OSD \u90fd\u4f1a\u83b7\u5f97\u989d\u5916\u7684\u5bb9\u91cf\uff08\u90e8\u5206 PG \u88ab\u8fc1\u51fa\u5230\u65b0\u7684 OSD \u4e0a\uff0c\u56e0\u6b64\u5f97\u4ee5\u7a7a\u95f2\uff09\uff0c\u56e0\u6b64\u5728\u91cd\u65b0\u5e73\u8861\u5b8c\u6210\u540e\uff0c\u65b0 OSD \u4e0a\u4e0d\u4f1a\u51fa\u73b0\u8d1f\u8f7d\u5cf0\u503c\u3002</p> <p></p>"},{"location":"ceph_doc/architecture/architecture/#_10","title":"\u6570\u636e\u4e00\u81f4\u6027","text":"<p>\u4f5c\u4e3a\u7ef4\u62a4\u6570\u636e\u4e00\u81f4\u6027\u548c\u6574\u6d01\u6027\u7684\u4e00\u90e8\u5206\uff0cCeph OSD \u8fd8\u4f1a\u6e05\u7406 PG \u4e2d\u7684\u5bf9\u8c61\u3002\u4e5f\u5c31\u662f\u8bf4\uff0cOSD \u5c06\u4e00\u4e2a PG \u4e2d\u7684\u5bf9\u8c61\u5143\u6570\u636e\u4e0e\u5b58\u50a8\u5728 PG \u7684\u5176\u4ed6 OSD \u4e2d\u7684\u526f\u672c\u8fdb\u884c\u6bd4\u8f83\u3002\u6e05\u7406\uff08\u901a\u5e38\u6bcf\u5929\u6267\u884c\uff09\u53ef\u6355\u83b7 OSD \u9519\u8bef\u6216\u6587\u4ef6\u7cfb\u7edf\u9519\u8bef\uff0c\u901a\u5e38\u662f\u7531\u4e8e\u786c\u4ef6\u95ee\u9898\u9020\u6210\u7684\u3002OSD \u8fd8\u901a\u8fc7\u9010\u4f4d\u6bd4\u8f83\u5bf9\u8c61\u4e2d\u7684\u6570\u636e\u6765\u6267\u884c\u66f4\u6df1\u5165\u7684\u6e05\u7406\u3002\u6df1\u5ea6\u6e05\u7406\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6bcf\u5468\u6267\u884c\u4e00\u6b21\uff09\u5728\u9a71\u52a8\u5668\u4e0a\u53d1\u73b0\u5728\u8f7b\u5ea6\u6e05\u7406\u4e2d\u4e0d\u660e\u663e\u7684\u574f\u5757\u3002</p> <p>\u6709\u5173\u914d\u7f6e\u6e05\u7406\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u6570\u636e\u6e05\u7406\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#ec","title":"EC \u7ea0\u5220\u7801","text":"<p>\u7ea0\u5220\u7801\u5b58\u50a8\u6c60\u5c06\u6bcf\u4e2a\u5bf9\u8c61\u5b58\u50a8\u4e3a <code>K+M</code> \u5757\uff0c\u5206\u522b\u4e3a <code>K</code> \u4e2a\u6570\u636e\u5757\u548c <code>M</code> \u4e2a\u7f16\u7801\u5757\u3002\u8be5\u6c60\u7684\u5927\u5c0f\u914d\u7f6e\u4e3a <code>K+M</code>\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u6570\u636e\u5757\u90fd\u5b58\u50a8\u5728_Acting Set _\u4e2d\u7684 OSD \u4e2d\u3002\u5757\u7684\u5e8f\u53f7\u5b58\u50a8\u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027\u3002</p> <p>\u4f8b\u5982\uff0c\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u4f7f\u7528\u4e94\u4e2a OSD \uff08<code>K+M = 5</code>\uff09\u7684\u7ea0\u5220\u7801\u5b58\u50a8\u6c60\uff0c\u8be5\u5b58\u50a8\u6c60\u627f\u53d7\u5176\u4e2d\u4e24\u4e2a OSD \u7684\u4e22\u5931 \uff08<code>M = 2</code>\uff09\u3002\u5728\u8fd8\u539f \uff08<code>K+1</code>\uff09 \u4e2a\u5206\u7247\u4e4b\u524d\uff0c\u6570\u636e\u53ef\u80fd\u4e0d\u53ef\u7528\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_11","title":"\u8bfb\u5199\u7f16\u7801\u5757","text":"<p>\u5f53\u5305\u542b <code>ABCDEFGHI</code> \u7684\u5bf9\u8c61 NYAN \u5199\u5165\u6c60\u65f6\uff0c\u64e6\u9664\u7f16\u7801\u51fd\u6570\u53ea\u9700\u5c06\u5185\u5bb9\u5206\u4e3a\u4e09\u4e2a\u6570\u636e\u5757\u5373\u53ef\u5c06\u5185\u5bb9\u62c6\u5206\u4e3a\u4e09\u4e2a\u6570\u636e\u5757\uff1a\u7b2c\u4e00\u4e2a\u5305\u542b <code>ABC\uff0c</code>\u7b2c\u4e8c\u4e2a <code>DEF</code> \u548c\u6700\u540e\u4e00\u4e2a <code>GHI</code>\u3002\u5982\u679c\u5185\u5bb9\u957f\u5ea6\u4e0d\u662f <code>K</code> \u7684\u500d\u6570\uff0c\u5219\u5185\u5bb9\u5c06\u88ab\u586b\u5145\u3002\u8be5\u51fd\u6570\u8fd8\u521b\u5efa\u4e86\u4e24\u4e2a\u7f16\u7801\u5757\uff1a<code>YXY</code>\uff0c<code>QGC</code>\u3002\u6bcf\u4e2a\u6570\u636e\u5757\u90fd\u5b58\u50a8\u5728_Acting Set _\u7684 OSD \u4e2d\u3002\u6570\u636e\u5757\u5177\u6709\u76f8\u540c\u540d\u79f0 \uff08NYAN\uff09 \u4f46\u5b58\u50a8\u5728\u4e0d\u540c OSD \u4e0a\u7684\u5bf9\u8c61\u4e2d\u3002\u5757\u7684\u521b\u5efa\u987a\u5e8f\u5fc5\u987b\u4fdd\u7559\uff0c\u5e76\u5c06\u5176\u5b58\u50a8\u4e3a\u5bf9\u8c61\u7684\u5c5e\u6027 \uff08<code>shard_t</code>\uff09 \uff0c\u540d\u79f0\u4e5f\u5305\u542b\u5728\u5bf9\u8c61\u7684\u5c5e\u6027\u4e2d\u3002\u6570\u636e\u5757 1 \u5305\u542b <code>ABC</code> \u5e76\u5b58\u50a8\u5728 OSD5 \u4e0a\uff0c\u800c\u6570\u636e\u5757 4 \u5305\u542b <code>YXY</code> \u5e76\u5b58\u50a8\u5728 OSD3 \u4e0a\u3002</p> <p></p> <p>\u5f53\u4ece\u7ea0\u5220\u7801\u6c60\u4e2d\u8bfb\u53d6\u5bf9\u8c61 NYAN \u65f6\uff0c\u89e3\u7801\u529f\u80fd\u4f1a\u8bfb\u53d6\u4e09\u4e2a\u5757\uff1a\u5305\u542b <code>ABC</code> \u7684\u5757 1\u3001\u5305\u542b <code>GHI</code> \u7684\u5757 3 \u548c\u5305\u542b <code>YXY</code> \u7684\u5757 4\u3002\u7136\u540e\uff0c\u5b83\u4f1a\u91cd\u65b0\u6784\u5efa\u5bf9\u8c61 <code>ABCDEFGHI</code> \u7684\u539f\u59cb\u5185\u5bb9\u3002\u89e3\u7801\u529f\u80fd\u63a5\u53d7\u5230\u5757 2 \u548c 5 \u4e22\u5931\u7684\u4fe1\u606f\uff08\u79f0\u4e3a\u201c\u64e6\u9664\u201d\uff09\u3002OSD4 \u5df2\u88ab\u79fb\u9664\uff0c\u56e0\u6b64\u65e0\u6cd5\u8bfb\u53d6\u6570\u636e\u5757 5\u3002\u89e3\u7801\u529f\u80fd\u4e00\u65e6\u8bfb\u53d6\u4e86\u4e09\u4e2a\u6570\u636e\u5757\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528\u89e3\u7801\u51fd\u6570\uff1a OSD2 \u662f\u6700\u6162\u7684\uff0c\u89e3\u7801\u65e0\u9700\u8003\u8651\u5b83\u7684\u6570\u636e\u5757\u3002</p> <p></p>"},{"location":"ceph_doc/architecture/architecture/#_12","title":"\u88ab\u4e2d\u65ad\u7684\u5b8c\u5168\u5199","text":"<p>\u5728\u7ea0\u5220\u7801\u5b58\u50a8\u6c60\u4e2d\uff0cUp Set \u4e2d_\u7684\u4e3b OSD \u63a5\u6536\u6240\u6709\u7684\u5199\u5165\u64cd\u4f5c\uff0c\u5b83\u8d1f\u8d23\u5c06\u8bf7\u6c42\u4e2d\u7684\u6709\u6548\u8d1f\u8f7d\u7f16\u7801\u4e3a <code>K+M</code> \u4e2a\u6570\u636e\u5757\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9\u5176\u4ed6 OSD\uff0c\u4e14\u8d1f\u8d23\u7ef4\u62a4 PG \u65e5\u5fd7\u7684\u6743\u5a01\u7248\u672c\u3002 \u5728\u4e0b\u56fe\u4e2d\uff0c\u4f7f\u7528 <code>K = 2\u3001M = 1</code> \u521b\u5efa\u4e86\u4e00\u4e2a\u7531\u4e09\u4e2a OSD \u7ec4\u6210\u7684\u7ea0\u5220\u7801 PG\uff0c\u4e24\u4e2a\u7528\u4e8e <code>K</code>\uff0c\u4e00\u4e2a\u7528\u4e8e <code>M</code>\u3002PG \u7684_Acting Set_\u7531 OSD 1\u3001OSD 2 \u548c OSD 3 \u7ec4\u6210\u3002\u5b58\u50a8\u5bf9\u8c61\u5df2\u7ecf\u8fc7\u7ea0\u5220\u7801\u8fdb\u884c\u7f16\u7801\u5e76\u5b58\u50a8\u5728 OSD \u4e2d\uff1a\u6570\u636e\u5757 <code>D1v1</code>\uff08\u5373\u6570\u636e\u5757\u7f16\u53f7 1\uff0c\u7248\u672c 1\uff09\u4f4d\u4e8e OSD 1 \u4e0a\uff0c<code>D2v1</code> \u4f4d\u4e8e OSD 2 \u4e0a\uff0c<code>C1v1</code>\uff08\u5373\u7f16\u7801\u5757\u7f16\u53f7 1\uff0c\u7248\u672c 1\uff09\u4f4d\u4e8e OSD 3 \u4e0a\u3002\u6bcf\u4e2a OSD \u4e0a\u7684 PG \u65e5\u5fd7\u76f8\u540c\uff08\u5373 <code>1,1</code> \u8868\u793a epoch \u4e3a 1\uff0c \u7248\u672c\u4e3a 1\uff09\u3002</p> <p></p> <p>OSD 1 \u662f_Primary OSD_\uff0c\u4ece\u5ba2\u6237\u7aef\u63a5\u6536 WRITE FULL**\u8bf7\u6c42\uff0c\u8fd9\u610f\u5473\u7740\u5c06\u5b8c\u5168\u66ff\u6362\u5b58\u50a8\u5bf9\u8c61\uff0c\u800c\u4e0d\u662f\u8986\u76d6\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\u3002Ceph \u901a\u8fc7\u521b\u5efa\u8be5\u5bf9\u8c61\u7684\u7248\u672c 2 \uff08v2\uff09 \u6765\u5c06\u7248\u672c 1 \uff08v1\uff09\u5b8c\u5168\u8986\u76d6\u3002**OSD 1 \u5c06\u8bf7\u6c42\u4e2d\u7684\u6709\u6548\u8f7d\u8377\u7f16\u7801\u4e3a\u4e09\u4e2a\u5757\uff1a<code>D1v2</code>\uff08\u5373\u6570\u636e\u5757\u7f16\u53f7 1 \u7248\u672c 2\uff09\u5c06\u4f4d\u4e8e OSD 1 \u4e0a\uff0c<code>D2v2</code> \u4f4d\u4e8e OSD 2 \u4e0a\uff0c<code>C1v2</code>\uff08\u5373\u7f16\u7801\u5757\u7f16\u53f7 1 \u7248\u672c 2\uff09\u5c06\u4f4d\u4e8e OSD 3 \u4e0a\u3002\u6bcf\u4e2a\u6570\u636e\u5757\u90fd\u4f1a\u53d1\u9001\u5230\u76ee\u6807 OSD\uff0c\u5305\u62ec\u4e3b OSD\uff0c\u4e3b OSD \u9664\u4e86\u8d1f\u8d23\u5904\u7406\u5199\u5165\u64cd\u4f5c\u548c\u7ef4\u62a4 PG \u65e5\u5fd7\u7684\u6743\u5a01\u7248\u672c\u5916\uff0c\u8fd8\u8d1f\u8d23\u5b58\u50a8\u6570\u636e\u5757\u3002\u5f53 OSD \u6536\u5230\u6307\u793a\u5176\u5199\u5165\u5757\u7684\u6d88\u606f\u65f6\uff0c\u5b83\u8fd8\u4f1a\u5728\u7f6e\u653e\u7fa4\u7ec4\u65e5\u5fd7\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u6761\u76ee\u4ee5\u53cd\u6620\u66f4\u6539\u3002\u4f8b\u5982\uff0c\u4e00\u65e6 OSD 3 \u5b58\u50a8 <code>C1v2</code>\uff0c\u5b83\u5c31\u4f1a\u5c06\u6761\u76ee <code>1,2</code>\uff08\u5373 epoch 1\uff0c\u7248\u672c 2 \uff09\u6dfb\u52a0\u5230\u5176\u65e5\u5fd7\u4e2d\u3002\u7531\u4e8e OSD \u5f02\u6b65\u5de5\u4f5c\uff0c\u56e0\u6b64\u67d0\u4e9b\u5757\u53ef\u80fd\u4ecd\u5728\u4f20\u8f93\u4e2d\uff08\u4f8b\u5982 <code>D2v2</code>\uff09\uff0c\u800c\u5176\u4ed6\u5757\u5219\u88ab\u786e\u8ba4\u5e76\u4fdd\u5b58\u5230\u5b58\u50a8\u9a71\u52a8\u5668\uff08\u4f8b\u5982 <code>C1v1</code> \u548c <code>D1v1</code>\uff09\u3002</p> <p></p> <p>\u5982\u679c\u4e00\u5207\u987a\u5229\uff0c\u5219 chunk \u5199\u5165\u8bf7\u6c42\u5c06\u5728_Acting Set_\u4e2d\u7684\u6bcf\u4e2a OSD \u4e0a\u5f97\u5230 ACK\uff0c\u5e76\u4e14\u65e5\u5fd7\u7684 <code>last_complete</code> \u6307\u9488\u53ef\u4ee5\u4ece <code>1,1</code> \u79fb\u52a8\u5230 <code>1,2</code>\u3002</p> <p></p> <p>\u6700\u540e\uff0c\u53ef\u4ee5\u5220\u9664\u7528\u4e8e\u5b58\u50a8\u5bf9\u8c61\u4ee5\u524d\u7248\u672c\u5757\u7684\u6587\u4ef6\uff1aOSD 1 \u4e0a\u7684 <code>D1v1</code>\u3001OSD 2 \u4e0a\u7684 <code>D2v1</code> \u548c OSD 3 \u4e0a\u7684 <code>C1v1</code>\u3002</p> <p></p> <p>\u4f46\u610f\u5916\u65f6\u6709\u53d1\u751f\u3002\u5982\u679c OSD 1 \u5728 <code>D2v2</code> \u4ecd\u5728\u4f20\u8f93\u65f6\u5b95\u673a\uff0c\u5219\u5bf9\u8c61\u7684\u7248\u672c 2 \u5c06\u88ab\u90e8\u5206\u5199\u5165\uff1aOSD 3 \u6709\u4e00\u4e2a\u6570\u636e\u5757\uff0c\u4f46\u4e0d\u8db3\u4ee5\u6062\u590d\u3002\u5b83\u4e22\u5931\u4e86\u4e24\u4e2a\u6570\u636e\u5757\uff1a<code>D1v2</code> \u548c <code>D2v2</code>\uff0c\u7ea0\u5220\u7801\u53c2\u6570 <code>K = 2</code>\u3001<code>M = 1</code> \u8981\u6c42\u81f3\u5c11\u6709\u4e24\u4e2a\u6570\u636e\u5757\u53ef\u7528\u4e8e\u91cd\u5efa\u7b2c\u4e09\u4e2a\u6570\u636e\u5757\u3002OSD 4 \u6210\u4e3a\u65b0\u7684_Primary OSD_\uff0c\u5e76\u53d1\u73b0<code>last_complete</code>\u65e5\u5fd7\u6761\u76ee\uff08\u5373\uff0c\u5df2\u77e5\u6b64\u6761\u76ee\u4e4b\u524d\u7684\u6240\u6709\u5bf9\u8c61\u5728\u4e0a\u4e00\u4e2a\u64cd\u4f5c\u96c6\u4e2d\u7684\u6240\u6709 OSD \u4e0a\u90fd\u53ef\u7528\uff09\u4e3a <code>1,1</code>\uff0c\u8fd9\u5c06\u662f\u65b0\u6743\u5a01\u65e5\u5fd7\u7684\u5934\u90e8\u3002</p> <p></p> <p>\u5728 OSD 3 \u4e0a\u627e\u5230\u7684\u65e5\u5fd7\u6761\u76ee 1,2 \u4e0e OSD 4 \u63d0\u4f9b\u7684\u65b0\u6743\u5a01\u65e5\u5fd7\u4e0d\u540c\uff1a\u5b83\u88ab\u4e22\u5f03\uff0c\u5305\u542b <code>C1v2</code> \u5757\u7684\u6587\u4ef6\u88ab\u5220\u9664\u3002<code>D1v1</code> \u5757\u5728\u6e05\u7406\u671f\u95f4\u4f7f\u7528\u7ea0\u5220\u7801\u5e93\u7684<code>decode</code>\u529f\u80fd\u91cd\u5efa\uff0c\u5e76\u5b58\u50a8\u5728\u65b0\u7684\u4e3b OSD 4 \u4e0a\u3002</p> <p></p> <p>\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605Erasure Code Notes \u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_13","title":"\u7f13\u5b58\u5206\u5c42","text":"<p>Note</p> <p>\u7f13\u5b58\u5206\u5c42\u5728 Reef \u7248\u672c\u4e2d\u5df2\u7ecf\u88ab\u5e9f\u5f03\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#ceph_2","title":"\u6269\u5c55 Ceph","text":"<p>\u4f60\u53ef\u4ee5\u7528 <code>Ceph Classes</code> \u5171\u4eab\u5bf9\u8c61\u7c7b\u6765\u6269\u5c55 Ceph \u529f\u80fd\uff0c Ceph \u4f1a\u52a8\u6001\u5730\u8f7d\u5165\u4f4d\u4e8e <code>osd class dir</code> \u76ee\u5f55\u4e0b\u7684 <code>.so</code> \u7c7b\u6587\u4ef6\uff08\u5373\u9ed8\u8ba4\u7684 <code>$libdir/rados-classes</code> \uff09\u3002\u5982\u679c\u4f60\u5b9e\u73b0\u4e86\u4e00\u4e2a\u7c7b\uff0c \u5c31\u53ef\u4ee5\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u65b9\u6cd5\u53bb\u8c03\u7528 Ceph \u5bf9\u8c61\u5b58\u50a8\u5185\u7684\u539f\u751f\u65b9\u6cd5\u3001 \u6216\u8005\u516c\u7528\u5e93\u6216\u81ea\u5efa\u5e93\u91cc\u7684\u5176\u5b83\u7c7b\u65b9\u6cd5\u3002</p> <p>\u5199\u5165\u65f6\uff0c Ceph \u7c7b\u80fd\u8c03\u7528\u539f\u751f\u6216\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u5165\u6808\u6570\u636e\u6267\u884c\u4efb\u610f\u64cd\u4f5c\u3001 \u751f\u6210\u6700\u7ec8\u5199\u4e8b\u52a1\uff0c \u5e76\u7531 Ceph \u539f\u5b50\u5730\u5e94\u7528\u3002</p> <p>\u8bfb\u51fa\u65f6\uff0c Ceph \u7c7b\u80fd\u8c03\u7528\u539f\u751f\u6216\u7c7b\u65b9\u6cd5\uff0c\u5bf9\u51fa\u6808\u6570\u636e\u6267\u884c\u4efb\u610f\u64cd\u4f5c\u3001 \u628a\u6570\u636e\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002</p> <p>Ceph \u7c7b\u5b9e\u4f8b</p> <p>\u4e00\u4e2a\u4e3a\u5185\u5bb9\u7ba1\u7406\u7cfb\u7edf\u5199\u7684\u7c7b\u53ef\u80fd\u8981\u5b9e\u73b0\u5982\u4e0b\u529f\u80fd\uff0c \u5b83\u8981\u5c55\u793a\u7279\u5b9a\u5c3a\u5bf8\u548c\u957f\u5bbd\u6bd4\u7684\u4f4d\u56fe\uff0c \u6240\u4ee5\u5165\u6808\u56fe\u7247\u8981\u88c1\u526a\u4e3a\u7279\u5b9a\u957f\u5bbd\u6bd4\u3001 \u7f29\u653e\u5b83\u3001\u5e76\u5d4c\u5165\u4e2a\u4e0d\u53ef\u89c1\u7684\u7248\u6743\u6216\u6c34\u5370\u7528\u4e8e\u4fdd\u62a4\u77e5\u8bc6\u4ea7\u6743\uff1b \u7136\u540e\u628a\u751f\u6210\u7684\u4f4d\u56fe\u4fdd\u5b58\u4e3a\u5bf9\u8c61\u3002</p> <p>\u5178\u578b\u7684\u5b9e\u73b0\u89c1 <code>src/objclass/objclass.h</code> \u3001 <code>src/fooclass.cc</code> \u3001\u548c <code>src/barclass</code> \u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_14","title":"\u5c0f\u7ed3","text":"<p>Ceph \u5b58\u50a8\u96c6\u7fa4\u662f\u52a8\u6001\u7684\uff0c\u5c31\u50cf\u4e00\u4e2a\u6d3b\u7684\u6709\u673a\u4f53\u3002\u8bb8\u591a\u5b58\u50a8\u7cfb\u7edf\u6ca1\u6709\u5145\u5206\u5229\u7528\u5178\u578b\u5546\u7528\u670d\u52a1\u5668\u7684 CPU \u548c RAM\uff0c\u4f46 Ceph \u53ef\u4ee5\u3002\u4ece\u5fc3\u8df3\u5230\u4e92\u8054\uff0c\u518d\u5230\u96c6\u7fa4\u91cd\u5e73\u8861\u6216\u4ece\u6545\u969c\u4e2d\u6062\u590d\uff0cCeph \u5c06\u5ba2\u6237\u7aef\u7684\u8d1f\u62c5\u51cf\u8f7b\uff08\u4ee5\u53ca Ceph \u67b6\u6784\u4e2d\u4e0d\u5b58\u5728\u7684\u96c6\u4e2d\u5f0f\u7f51\u5173\uff09\uff0c\u5e76\u4f7f\u7528 OSD \u7684\u8ba1\u7b97\u80fd\u529b\u6765\u6267\u884c\u5de5\u4f5c\u3002\u5728\u53c2\u8003 \u786c\u4ef6\u5efa\u8bae \u548c \u7f51\u7edc\u914d\u7f6e\u53c2\u8003 \u65f6\uff0c\u8bf7\u4e86\u89e3\u4e0a\u8ff0\u6982\u5ff5\uff0c\u4ee5\u4e86\u89e3 Ceph \u5982\u4f55\u5229\u7528\u8ba1\u7b97\u8d44\u6e90\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#ceph_3","title":"CEPH \u534f\u8bae","text":"<p>Ceph \u5ba2\u6237\u7aef\u4f7f\u7528\u539f\u751f\u534f\u8bae\u4e0e Ceph \u5b58\u50a8\u96c6\u7fa4\u4ea4\u4e92\u3002Ceph \u5c06\u6b64\u529f\u80fd\u6253\u5305\u5230 <code>librados</code> \u5e93\u4e2d\uff0c\u4ee5\u4fbf\u60a8\u53ef\u4ee5\u521b\u5efa\u81ea\u5b9a\u4e49\u7684 Ceph \u5ba2\u6237\u7aef\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86\u57fa\u672c\u4f53\u7cfb\u7ed3\u6784\u3002</p> <p></p>"},{"location":"ceph_doc/architecture/architecture/#librados","title":"\u539f\u751f\u534f\u8bae\u4e0e<code>LIBRADOS</code>","text":"<p>\u73b0\u4ee3\u5e94\u7528\u7a0b\u5e8f\u9700\u8981\u5177\u6709\u5f02\u6b65\u901a\u4fe1\u529f\u80fd\u7684\u7b80\u5355\u5bf9\u8c61\u5b58\u50a8\u63a5\u53e3\u3002Ceph \u5b58\u50a8\u96c6\u7fa4\u63d0\u4f9b\u5177\u6709\u5f02\u6b65\u901a\u4fe1\u529f\u80fd\u7684\u7b80\u5355\u5bf9\u8c61\u5b58\u50a8\u63a5\u53e3\u3002\u8be5\u63a5\u53e3\u63d0\u4f9b\u5bf9\u6574\u4e2a\u96c6\u7fa4\u4e2d\u7684\u5bf9\u8c61\u7684\u76f4\u63a5\u3001\u5e76\u884c\u8bbf\u95ee\u3002</p> <ul> <li>\u5b58\u50a8\u6c60\u64cd\u4f5c</li> <li>\u5feb\u7167\u548c COW</li> <li>\u8bfb/\u5199\u5bf9\u8c61 - \u521b\u5efa\u6216\u5220\u9664 - \u6574\u4e2a\u5bf9\u8c61\u6216\u5b57\u8282\u8303\u56f4 - \u8ffd\u52a0\u6216\u622a\u65ad</li> <li>\u521b\u5efa/\u8bbe\u7f6e/\u83b7\u53d6/\u5220\u9664 XATTR</li> <li>\u521b\u5efa/\u8bbe\u7f6e/\u83b7\u53d6/\u5220\u9664\u952e/\u503c\u5bf9</li> <li>\u590d\u5408\u8fd0\u7b97\u548c\u53cc ack \u8bed\u4e49</li> <li>\u5bf9\u8c61\u7c7b</li> </ul>"},{"location":"ceph_doc/architecture/architecture/#_15","title":"\u5bf9\u8c61\u8ba2\u9605\u4e0e\u901a\u77e5","text":"<p>\u5ba2\u6237\u7aef\u53ef\u4ee5\u5411\u96c6\u7fa4\u8ba2\u9605\u4e00\u4e2a\u5bf9\u8c61\u6ce8\u518c\uff0c\u5e76\u4fdd\u6301\u4e0e\u4e3b OSD \u7684\u4f1a\u8bdd\u5904\u4e8e\u6253\u5f00\u72b6\u6001\u3002\u5ba2\u6237\u7aef\u53ef\u4ee5\u5411\u6240\u6709\u89c2\u5bdf\u8005\u53d1\u9001\u901a\u77e5\u6d88\u606f\u548c\u8d1f\u8f7d\uff0c\u5e76\u5728\u89c2\u5bdf\u8005\u6536\u5230\u901a\u77e5\u65f6\u63a5\u6536\u901a\u77e5\u3002\u8fd9\u4f7f\u5ba2\u6237\u7aef\u80fd\u591f\u5c06\u4efb\u4f55\u5bf9\u8c61\u7528\u4f5c\u540c\u6b65/\u901a\u4fe1\u901a\u9053\u3002</p> <p></p>"},{"location":"ceph_doc/architecture/architecture/#_16","title":"\u6570\u636e\u6761\u5e26\u5316","text":"<p>\u5b58\u50a8\u8bbe\u5907\u5177\u6709\u541e\u5410\u91cf\u9650\u5236\uff0c\u8fd9\u4f1a\u5f71\u54cd\u6027\u80fd\u548c\u53ef\u6269\u5c55\u6027\u3002\u56e0\u6b64\uff0c\u5b58\u50a8\u7cfb\u7edf\u901a\u5e38\u652f\u6301\u6761\u5e26\u5316\uff0c\u5373\u8de8\u591a\u4e2a\u5b58\u50a8\u8bbe\u5907\u5b58\u50a8\u987a\u5e8f\u4fe1\u606f\uff0c\u4ee5\u6b64\u63d0\u9ad8\u541e\u5410\u91cf\u548c\u6027\u80fd\u3002RAID\u662f\u6700\u5e38\u89c1\u7684\u6570\u636e\u6761\u5e26\u5316\u5f62\u5f0f\uff0cCeph \u7684\u6761\u5e26\u5316\u65b9\u5f0f\u4e0eRAID 0\u6700\u76f8\u4f3c\uff0c\u6216\u79f0\u4e4b\u4e3a\u201c\u6761\u5e26\u5316\u5377\u201d\u3002Ceph \u7684\u6570\u636e\u6761\u5e26\u5316\u63d0\u4f9b\u4e86\u50cf RAID 0 \u4e00\u6837\u7684\u541e\u5410\u91cf\u3001\u50cf N \u8def RAID \u955c\u50cf\u7684\u53ef\u9760\u6027\uff0c\u4ee5\u53ca\u66f4\u5feb\u7684\u6062\u590d\u3002</p> <p>Ceph \u63d0\u4f9b\u4e09\u79cd\u7c7b\u578b\u7684\u5ba2\u6237\u7aef\uff1aCeph \u5757\u8bbe\u5907\u3001Ceph \u6587\u4ef6\u7cfb\u7edf\u548c Ceph \u5bf9\u8c61\u5b58\u50a8\u3002Ceph \u5ba2\u6237\u7aef\u5c06\u5176\u6570\u636e\u4ece\u63d0\u4f9b\u7ed9\u7528\u6237\u7684\u8868\u793a\u683c\u5f0f\uff08\u5757\u8bbe\u5907\u955c\u50cf\u3001RESTful \u5bf9\u8c61\u3001CephFS \u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\uff09\u8f6c\u6362\u4e3a RADOS \u5bf9\u8c61\uff0c\u4ee5\u5b58\u50a8\u5728 Ceph \u5b58\u50a8\u96c6\u7fa4\u4e2d\u3002</p> <p>Tip</p> <p>Ceph \u5b58\u50a8\u5728 Ceph \u5b58\u50a8\u96c6\u7fa4\u4e2d\u7684\u5bf9\u8c61\u4e0d\u662f\u6761\u5e26\u5316\u7684\u3002Ceph \u5bf9\u8c61\u5b58\u50a8\u3001Ceph \u5757\u8bbe\u5907\u548c Ceph \u6587\u4ef6\u7cfb\u7edf\u5c06\u5176\u6570\u636e\u8fdb\u884c\u6761\u5e26\u5316\uff0c\u4ea7\u751f\u591a\u4e2a Ceph \u5b58\u50a8\u7684\u57fa\u672c\u5bf9\u8c61\u3002\u901a\u8fc7 <code>librados</code> \u76f4\u63a5\u5199\u5165 Ceph \u96c6\u7fa4\u7684\u5ba2\u6237\u7aef\u5fc5\u987b\u81ea\u884c\u6267\u884c\u6761\u5e26\u5316\uff08\u548c\u5e76\u884c I/O\uff09\u624d\u80fd\u83b7\u5f97\u8fd9\u4e9b\u597d\u5904\u3002</p> <p>\u6700\u7b80\u5355\u7684 Ceph \u6570\u636e\u6761\u5e26\u7b56\u7565\u4f7f\u7528\u4e00\u4e2a Ceph \u5b58\u50a8\u5bf9\u8c61\u7684\u6761\u5e26\uff0cCeph \u5ba2\u6237\u7aef\u5c06\u6761\u5e26\u5316\u5355\u5143\u5199\u5165 Ceph \u5b58\u50a8\u5bf9\u8c61\uff0c\u76f4\u5230\u8be5\u5bf9\u8c61\u8fbe\u5230\u5176\u6700\u5927\u5bb9\u91cf\uff0c\u7136\u540e\u4e3a\u5176\u4ed6\u6570\u636e\u6761\u5e26\u521b\u5efa\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u6700\u7b80\u5355\u7684\u6761\u5e26\u5316\u5f62\u5f0f\u53ef\u80fd\u8db3\u4ee5\u5904\u7406\u5c0f\u578b\u5757\u5b58\u50a8\u8bbe\u5907\u6620\u50cf\u3001S3 \u6216 Swift \u5bf9\u8c61\u4ee5\u53ca CephFS \u6587\u4ef6\u3002\u4f46\u662f\uff0c\u8fd9\u79cd\u7b80\u5355\u7684\u8868\u5355\u5e76\u672a\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528 Ceph \u5728 PG \u4e4b\u95f4\u5206\u53d1\u6570\u636e\u7684\u80fd\u529b\uff0c\u56e0\u6b64\u4e0d\u4f1a\u5927\u5e45\u63d0\u9ad8\u6027\u80fd\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86\u6700\u7b80\u5355\u7684\u6761\u5e26\u5316\u5f62\u5f0f\uff1a</p> <p> \u5982\u679c\u60a8\u9884\u8ba1\u4f1a\u6709\u8f83\u5927\u7684\u6620\u50cf\u5927\u5c0f\u3001\u8f83\u5927\u7684 S3 \u6216 Swift \u5bf9\u8c61\uff08\u4f8b\u5982\u89c6\u9891\uff09\u6216\u5927\u578b CephFS \u76ee\u5f55\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u5728\u5bf9\u8c61\u96c6\u4e2d\u7684\u591a\u4e2a\u5bf9\u8c61\u4e0a\u5bf9\u5ba2\u6237\u7aef\u6570\u636e\u8fdb\u884c\u6761\u5e26\u5316\uff0c\u4ee5\u5927\u5e45\u63d0\u9ad8\u8bfb/\u5199\u6027\u80fd\u3002\u5f53\u5ba2\u6237\u7aef\u5c06\u6761\u5e26\u5355\u5143\u5e76\u884c\u5199\u5165\u5176\u76f8\u5e94\u7684\u5bf9\u8c61\u65f6\uff0c\u4f1a\u51fa\u73b0\u663e\u8457\u7684\u5199\u5165\u6027\u80fd\u3002\u7531\u4e8e\u5bf9\u8c61\u4f1a\u6620\u5c04\u5230\u4e0d\u540c\u7684 PG \u5e76\u8fdb\u4e00\u6b65\u6620\u5c04\u5230\u4e0d\u540c\u7684 OSD\uff0c\u56e0\u6b64\u6bcf\u6b21\u5199\u5165\u90fd\u4f1a\u4ee5\u6700\u5927\u5199\u5165\u901f\u5ea6\u5e76\u884c\u8fdb\u884c\u3002\u5bf9\u5355\u4e2a\u9a71\u52a8\u5668\u7684\u5199\u5165\u5c06\u53d7\u5230\u78c1\u5934\u79fb\u52a8\uff08\u4f8b\u5982\u6bcf\u6b21\u641c\u7d22 6 \u6beb\u79d2\uff09\u548c\u8be5\u8bbe\u5907\u7684\u5e26\u5bbd\uff08\u4f8b\u5982 100MB/s\uff09\u7684\u9650\u5236\u3002\u901a\u8fc7\u5c06\u5199\u5165\u5206\u6563\u5230\u591a\u4e2a\u5bf9\u8c61\uff08\u6620\u5c04\u5230\u4e0d\u540c\u7684 PG \u7ec4\u548c OSD\uff09\uff0cCeph \u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e2a\u9a71\u52a8\u5668\u7684\u67e5\u627e\u6570\u91cf\uff0c\u5e76\u7ed3\u5408\u591a\u4e2a\u9a71\u52a8\u5668\u7684\u541e\u5410\u91cf\u6765\u5b9e\u73b0\u66f4\u5feb\u7684\u5199\u5165\uff08\u6216\u8bfb\u53d6\uff09\u901f\u5ea6\u3002</p> <p>Info</p> <p>\u6761\u5e26\u5316\u4e0e\u5bf9\u8c61\u526f\u672c\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002CRUSH \u8de8 OSD \u590d\u5236\u5bf9\u8c61\uff0c\u56e0\u6b64\u4f1a\u81ea\u52a8\u590d\u5236\u6761\u5e26\u3002</p> <p>In the following diagram, client data gets striped across an object set (<code>object set 1</code> in the following diagram) consisting of 4 objects, where the first stripe unit is <code>stripe unit 0</code> in <code>object 0</code>, and the fourth stripe unit is <code>stripe unit 3</code> in <code>object 3</code>. After writing the fourth stripe, the client determines if the object set is full. If the object set is not full, the client begins writing a stripe to the first object again (<code>object 0</code> in the following diagram). If the object set is full, the client creates a new object set (<code>object set 2</code> in the following diagram), and begins writing to the first stripe (<code>stripe unit 16</code>) in the first object in the new object set (<code>object 4</code> in the diagram below). \u5728\u4e0b\u56fe\u4e2d\uff0c\u5ba2\u6237\u7aef\u6570\u636e\u5728\u7531 4 \u4e2a\u5bf9\u8c61\u7ec4\u6210\u7684\u5bf9\u8c61\u96c6\uff08\u4e0b\u56fe\u4e2d\u7684<code>\u5bf9\u8c61\u96c6 1</code>\uff09\u4e2d\u8fdb\u884c\u6761\u5e26\u5316\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u6761\u5e26\u5355\u5143\u662f<code>\u5bf9\u8c61 0</code> \u4e2d\u7684<code>\u6761\u5e26\u5355\u5143 0</code>\uff0c\u7b2c\u56db\u4e2a\u6761\u5e26\u5355\u5143\u662f<code>\u5bf9\u8c61 3</code> \u4e2d\u7684<code>\u6761\u5e26\u5355\u5143 3</code>\u3002\u5199\u5165\u7b2c\u56db\u4e2a\u6761\u5e26\u540e\uff0c\u5ba2\u6237\u7aef\u5c06\u786e\u5b9a\u5bf9\u8c61\u96c6\u662f\u5426\u5df2\u6ee1\u3002\u5982\u679c\u5bf9\u8c61\u96c6\u672a\u6ee1\uff0c\u5219\u5ba2\u6237\u7aef\u5c06\u518d\u6b21\u5f00\u59cb\u5c06\u6761\u5e26\u5199\u5165\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff08\u4e0b\u56fe\u4e2d\u7684<code>\u5bf9\u8c61 0</code>\uff09\u3002\u5982\u679c\u5bf9\u8c61\u96c6\u5df2\u6ee1\uff0c\u5219\u5ba2\u6237\u7aef\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\u96c6\uff08\u4e0b\u56fe\u4e2d\u7684<code>\u5bf9\u8c61\u96c6 2</code>\uff09\uff0c\u5e76\u5f00\u59cb\u5199\u5165\u65b0\u5bf9\u8c61\u96c6\uff08\u4e0b\u56fe\u4e2d\u7684<code>\u5bf9\u8c61 4</code>\uff09\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5bf9\u8c61\uff08<code>\u6761\u5e26\u5355\u5143 16</code>\uff09\u3002</p> <p> \u4e09\u4e2a\u91cd\u8981\u53d8\u91cf\u51b3\u5b9a\u4e86 Ceph \u5982\u4f55\u5bf9\u6570\u636e\u8fdb\u884c\u6761\u5e26\u5316\uff1a</p> <ul> <li>Object Size: Objects in the Ceph Storage Cluster have a maximum configurable size (e.g., 2MB, 4MB, etc.). The object size should be large enough to accommodate many stripe units, and should be a multiple of the stripe unit.   **\u5bf9\u8c61\u5927\u5c0f\uff1a**Ceph \u96c6\u7fa4\u4e2d\u7684\u5bf9\u8c61\u5177\u6709\u6700\u5927\u53ef\u914d\u7f6e\u5927\u5c0f\uff08\u4f8b\u5982\uff0c2MB\u30014MB \u7b49\uff09\u3002\u5bf9\u8c61\u5927\u5c0f\u5e94\u8db3\u591f\u5927\u4ee5\u5bb9\u7eb3\u591a\u4e2a\u6761\u5e26\u5355\u5143\uff0c\u5e76\u4e14\u5e94\u4e3a\u6761\u5e26\u5355\u5143\u7684\u500d\u6570\u3002</li> <li>Stripe Width: Stripes have a configurable unit size (e.g., 64kb). The Ceph Client divides the data it will write to objects into equally sized stripe units, except for the last stripe unit. A stripe width, should be a fraction of the Object Size so that an object may contain many stripe units.   **\u6761\u5e26\u5bbd\u5ea6\uff1a**\u6761\u5e26\u5177\u6709\u53ef\u914d\u7f6e\u7684\u5355\u4f4d\u5927\u5c0f\uff08\u4f8b\u5982 64kb\uff09\u3002Ceph \u5ba2\u6237\u7aef\u5c06\u5199\u5165\u5bf9\u8c61\u7684\u6570\u636e\u5212\u5206\u4e3a\u5927\u5c0f\u76f8\u7b49\u7684\u6761\u5e26\u5355\u5143\uff0c\u6700\u540e\u4e00\u4e2a\u6761\u5e26\u5355\u5143\u9664\u5916\u3002\u6761\u5e26\u5bbd\u5ea6\u5e94\u4e3a Object Size \uff08\u5bf9\u8c61\u5927\u5c0f\uff09 \u7684\u4e00\u5c0f\u90e8\u5206\uff0c\u4ee5\u4fbf\u5bf9\u8c61\u53ef\u4ee5\u5305\u542b\u8bb8\u591a\u6761\u5e26\u5355\u5143\u3002</li> <li>Stripe Count: The Ceph Client writes a sequence of stripe units over a series of objects determined by the stripe count. The series of objects is called an object set. After the Ceph Client writes to the last object in the object set, it returns to the first object in the object set.   **\u6761\u5e26\u8ba1\u6570\uff1a**Ceph \u5ba2\u6237\u7aef\u5728\u7531\u6761\u5e26\u8ba1\u6570\u786e\u5b9a\u7684\u4e00\u7cfb\u5217\u5bf9\u8c61\u4e0a\u5199\u5165\u4e00\u7cfb\u5217\u6761\u5e26\u5355\u5143\u3002\u5bf9\u8c61\u5e8f\u5217\u79f0\u4e3a\u5bf9\u8c61\u96c6\u3002Ceph \u5ba2\u6237\u7aef\u5199\u5165\u5bf9\u8c61\u96c6\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\u540e\uff0c\u5b83\u5c06\u8fd4\u56de\u5230\u5bf9\u8c61\u96c6\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u3002</li> </ul> <p>Danger</p> <p>\u5728\u5c06\u96c6\u7fa4\u6295\u5165\u751f\u4ea7\u4e4b\u524d\uff0c\u8bf7\u6d4b\u8bd5\u6761\u5e26\u5316\u914d\u7f6e\u7684\u6027\u80fd\u3002\u5728\u5bf9\u6570\u636e\u8fdb\u884c\u6761\u5e26\u5316\u5e76\u5c06\u5176\u5199\u5165\u5bf9\u8c61\u540e\uff0c\u60a8\u65e0\u6cd5\u66f4\u6539\u8fd9\u4e9b\u6761\u5e26\u5316\u53c2\u6570\u3002</p> <p>Once the Ceph Client has striped data to stripe units and mapped the stripe units to objects, Ceph\u2019s CRUSH algorithm maps the objects to placement groups, and the placement groups to Ceph OSD Daemons before the objects are stored as files on a storage drive. \u5728 Ceph \u5ba2\u6237\u7aef\u5c06\u6570\u636e\u6761\u5e26\u5316\u5230\u6761\u5e26\u5316\u5355\u5143\u5e76\u5c06\u6761\u5e26\u5316\u5355\u5143\u6620\u5c04\u5230\u5bf9\u8c61\u540e\uff0cCeph \u7684 CRUSH \u7b97\u6cd5\u4f1a\u5c06\u5bf9\u8c61\u6620\u5c04\u5230\u5f52\u7f6e\u7ec4\uff0c\u5e76\u5c06\u5f52\u7f6e\u7ec4\u6620\u5c04\u5230 Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\uff0c\u7136\u540e\u518d\u5c06\u5bf9\u8c61\u4f5c\u4e3a\u6587\u4ef6\u5b58\u50a8\u5728\u5b58\u50a8\u9a71\u52a8\u5668\u4e0a\u3002</p> <p>Info</p> <p>Since a client writes to a single pool, all data striped into objects get mapped to placement groups in the same pool. So they use the same CRUSH map and the same access controls. \u7531\u4e8e\u5ba2\u6237\u7aef\u5199\u5165\u5355\u4e2a\u5b58\u50a8\u6c60\uff0c\u56e0\u6b64\u6761\u5e26\u5316\u5230\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u6570\u636e\u90fd\u4f1a\u6620\u5c04\u5230\u540c\u4e00\u5b58\u50a8\u6c60\u4e2d\u7684\u7f6e\u653e\u7fa4\u7ec4\u3002\u56e0\u6b64\uff0c\u5b83\u4eec\u4f7f\u7528\u76f8\u540c\u7684 CRUSH \u7d22\u5f15\u548c\u76f8\u540c\u7684\u8bbf\u95ee\u63a7\u5236\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#ceph_4","title":"CEPH \u5ba2\u6237\u7aef","text":"<p>Ceph \u5ba2\u6237\u7aef\u5305\u62ec\u8bb8\u591a\u670d\u52a1\u63a5\u53e3\u3002\u8fd9\u4e9b\u5305\u62ec\uff1a</p> <ul> <li>Block Devices: The Ceph Block Device (a.k.a., RBD) service provides resizable, thin-provisioned block devices that can be snapshotted and cloned. Ceph stripes a block device across the cluster for high performance. Ceph supports both kernel objects (KO) and a QEMU hypervisor that uses <code>librbd</code> directly--avoiding the kernel object overhead for virtualized systems. \u5757\u8bbe\u5907\uff1aCeph \u5757\u8bbe\u5907\uff08\u53c8\u540d RBD\uff09\u670d\u52a1\u63d0\u4f9b\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u7cbe\u7b80\u914d\u7f6e\u5757\u8bbe\u5907\uff0c\u8fd9\u4e9b\u8bbe\u5907\u53ef\u4ee5\u8fdb\u884c\u5feb\u7167\u548c\u514b\u9686\u3002Ceph \u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u5bf9\u5757\u8bbe\u5907\u8fdb\u884c\u6761\u5e26\u5316\u4ee5\u5b9e\u73b0\u9ad8\u6027\u80fd\u3002Ceph \u652f\u6301\u5185\u6838\u5bf9\u8c61 \uff08KO\uff09 \u548c\u76f4\u63a5\u4f7f\u7528 <code>librbd</code> \u7684 QEMU \u865a\u62df\u673a\u76d1\u63a7\u7a0b\u5e8f\uff0c\u4ece\u800c\u907f\u514d\u4e86\u865a\u62df\u5316\u7cfb\u7edf\u7684\u5185\u6838\u5bf9\u8c61\u5f00\u9500\u3002</li> <li>\u5bf9\u8c61\u5b58\u50a8\uff1aCeph Object Storage\uff08\u53c8\u540d RGW\uff09\u670d\u52a1\u63d0\u4f9b RESTful API\uff0c\u5176\u63a5\u53e3\u4e0e Amazon S3 \u548c OpenStack Swift \u517c\u5bb9\u3002</li> <li>\u6587\u4ef6\u7cfb\u7edf\uff1aCeph \u6587\u4ef6\u7cfb\u7edf \uff08CephFS\uff09 \u670d\u52a1\u63d0\u4f9b\u7b26\u5408 POSIX \u6807\u51c6\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u53ef\u901a\u8fc7<code>mount</code>\u4f7f\u7528\u6216\u7528\u4f5c\u7528\u6237\u7a7a\u95f4\u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf \uff08FUSE\uff09\u3002</li> </ul> <p>Ceph \u53ef\u4ee5\u8fd0\u884c OSD\u3001MDS \u548c\u76d1\u89c6\u5668\u7684\u5176\u4ed6\u5b9e\u4f8b\uff0c\u4ee5\u5b9e\u73b0\u53ef\u6269\u5c55\u6027\u548c\u9ad8\u53ef\u7528\u6027\u3002\u4e0b\u56fe\u63cf\u8ff0\u4e86\u9ad8\u7ea7\u4f53\u7cfb\u7ed3\u6784\u3002</p> <p></p>"},{"location":"ceph_doc/architecture/architecture/#ceph_5","title":"CEPH \u5bf9\u8c61\u5b58\u50a8","text":"<p>The Ceph Object Storage daemon, <code>radosgw</code>, is a FastCGI service that provides a RESTful HTTP API to store objects and metadata. It layers on top of the Ceph Storage Cluster with its own data formats, and maintains its own user database, authentication, and access control. The RADOS Gateway uses a unified namespace, which means you can use either the OpenStack Swift-compatible API or the Amazon S3-compatible API. For example, you can write data using the S3-compatible API with one application and then read data using the Swift-compatible API with another application. Ceph \u5bf9\u8c61\u5b58\u50a8\u5b88\u62a4\u7a0b\u5e8f <code>radosgw</code> \u662f\u4e00\u9879 FastCGI \u670d\u52a1\uff0c\u63d0\u4f9b RESTful HTTP API \u6765\u5b58\u50a8\u5bf9\u8c61\u548c\u5143\u6570\u636e\u3002\u5b83\u4f7f\u7528\u81ea\u5df1\u7684\u6570\u636e\u683c\u5f0f\u5728 Ceph Storage Cluster \u4e4b\u4e0a\u5206\u5c42\uff0c\u5e76\u7ef4\u62a4\u81ea\u5df1\u7684\u7528\u6237\u6570\u636e\u5e93\u3001\u8eab\u4efd\u9a8c\u8bc1\u548c\u8bbf\u95ee\u63a7\u5236\u3002RADOS \u7f51\u5173\u4f7f\u7528\u7edf\u4e00\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u4f7f\u7528\u517c\u5bb9 OpenStack Swift \u7684 API \u6216\u517c\u5bb9 Amazon S3 \u7684 API\u3002\u4f8b\u5982\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u4e0e S3 \u517c\u5bb9\u7684 API \u5bf9\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5199\u5165\u6570\u636e\uff0c\u7136\u540e\u5728\u53e6\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u4f7f\u7528\u4e0e Swift \u517c\u5bb9\u7684 API \u8bfb\u53d6\u6570\u636e\u3002</p> <p>S3/Swift Objects and Store Cluster Objects Compared** **S3/Swift \u5bf9\u8c61\u548c\u5b58\u50a8\u96c6\u7fa4\u5bf9\u8c61\u6bd4\u8f83</p> <p>Ceph\u2019s Object Storage uses the term object to describe the data it stores. S3 and Swift objects are not the same as the objects that Ceph writes to the Ceph Storage Cluster. Ceph Object Storage objects are mapped to Ceph Storage Cluster objects. The S3 and Swift objects do not necessarily correspond in a 1:1 manner with an object stored in the storage cluster. It is possible for an S3 or Swift object to map to multiple Ceph objects. Ceph \u7684\u5bf9\u8c61\u5b58\u50a8\u4f7f\u7528\u672f\u8bed object \u6765\u63cf\u8ff0\u5b83\u5b58\u50a8\u7684\u6570\u636e\u3002S3 \u548c Swift \u5bf9\u8c61\u4e0e Ceph \u5199\u5165 Ceph \u5b58\u50a8\u96c6\u7fa4\u7684\u5bf9\u8c61\u4e0d\u540c\u3002Ceph \u5bf9\u8c61\u5b58\u50a8\u5bf9\u8c61\u6620\u5c04\u5230 Ceph \u5b58\u50a8\u96c6\u7fa4\u5bf9\u8c61\u3002S3 \u548c Swift \u5bf9\u8c61\u4e0d\u4e00\u5b9a\u4e0e\u5b58\u50a8\u5728\u5b58\u50a8\u7fa4\u96c6\u4e2d\u7684\u5bf9\u8c61\u4ee5 1\uff1a1 \u7684\u65b9\u5f0f\u5bf9\u5e94\u3002\u4e00\u4e2a S3 \u6216 Swift \u5bf9\u8c61\u53ef\u4ee5\u6620\u5c04\u5230\u591a\u4e2a Ceph \u5bf9\u8c61\u3002</p> <p>See Ceph Object Storage for details. \u6709\u5173\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605 Ceph \u5bf9\u8c61\u5b58\u50a8\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#ceph_6","title":"CEPH \u5757\u8bbe\u5907","text":"<p>A Ceph Block Device stripes a block device image over multiple objects in the Ceph Storage Cluster, where each object gets mapped to a placement group and distributed, and the placement groups are spread across separate <code>ceph-osd</code> daemons throughout the cluster. Ceph \u5757\u8bbe\u5907\u5728 Ceph \u5b58\u50a8\u96c6\u7fa4\u4e2d\u7684\u591a\u4e2a\u5bf9\u8c61\u4e0a\u6761\u5e26\u5316\u5757\u8bbe\u5907\u955c\u50cf\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u6620\u5c04\u5230\u4e00\u4e2a PG \u5e76\u8fdb\u884c\u5206\u53d1\uff0c\u5e76\u4e14 PG \u5206\u5e03\u5728\u6574\u4e2a\u96c6\u7fa4\u4e2d\u5355\u72ec\u7684 <code>ceph-osd</code> \u5b88\u62a4\u8fdb\u7a0b\u4e2d\u3002</p> <p>:::danger Striping allows RBD block devices to perform better than a single server could! \u6761\u5e26\u5316\u4f7f RBD \u5757\u8bbe\u5907\u7684\u6027\u80fd\u4f18\u4e8e\u5355\u4e2a\u670d\u52a1\u5668\uff01</p> <p>:::</p> <p>Thin-provisioned snapshottable Ceph Block Devices are an attractive option for virtualization and cloud computing. In virtual machine scenarios, people typically deploy a Ceph Block Device with the <code>rbd</code> network storage driver in QEMU/KVM, where the host machine uses <code>librbd</code> to provide a block device service to the guest. Many cloud computing stacks use <code>libvirt</code> to integrate with hypervisors. You can use thin-provisioned Ceph Block Devices with QEMU and <code>libvirt</code> to support OpenStack, OpenNebula and CloudStack among other solutions. \u7cbe\u7b80\u914d\u7f6e\u5feb\u7167\u53ef Ceph \u5757\u8bbe\u5907\u662f\u865a\u62df\u5316\u548c\u4e91\u8ba1\u7b97\u7684\u4e00\u4e2a\u6709\u5438\u5f15\u529b\u7684\u9009\u9879\u3002\u5728\u865a\u62df\u673a\u573a\u666f\u4e2d\uff0c\u4eba\u4eec\u901a\u5e38\u4f1a\u5728 QEMU/KVM \u4e2d\u90e8\u7f72\u5e26\u6709 <code>rbd</code> \u7f51\u7edc\u5b58\u50a8\u9a71\u52a8\u7a0b\u5e8f\u7684 Ceph \u5757\u8bbe\u5907\uff0c\u5176\u4e2d\u4e3b\u673a\u4f7f\u7528 <code>librbd</code> \u5411\u5ba2\u6237\u673a\u63d0\u4f9b\u5757\u8bbe\u5907\u670d\u52a1\u3002\u8bb8\u591a\u4e91\u8ba1\u7b97\u5806\u6808\u4f7f\u7528 <code>libvirt</code> \u4e0e\u865a\u62df\u673a\u7ba1\u7406\u7a0b\u5e8f\u96c6\u6210\u3002\u60a8\u53ef\u4ee5\u5c06\u7cbe\u7b80\u914d\u7f6e\u7684 Ceph \u5757\u8bbe\u5907\u4e0e QEMU \u548c <code>libvirt</code> \u7ed3\u5408\u4f7f\u7528\uff0c\u4ee5\u652f\u6301 OpenStack\u3001OpenNebula \u548c CloudStack \u7b49\u89e3\u51b3\u65b9\u6848\u3002</p> <p>While we do not provide <code>librbd</code> support with other hypervisors at this time, you may also use Ceph Block Device kernel objects to provide a block device to a client. Other virtualization technologies such as Xen can access the Ceph Block Device kernel object(s). This is done with the command-line tool <code>rbd</code>. \u867d\u7136\u6211\u4eec\u76ee\u524d\u4e0d\u4e3a\u5176\u4ed6\u865a\u62df\u673a\u76d1\u63a7\u7a0b\u5e8f\u63d0\u4f9b <code>librbd</code> \u652f\u6301\uff0c\u4f46\u60a8\u4e5f\u53ef\u4ee5\u4f7f\u7528 Ceph \u5757\u8bbe\u5907\u5185\u6838\u5bf9\u8c61\u5411\u5ba2\u6237\u7aef\u63d0\u4f9b\u5757\u8bbe\u5907\u3002\u5176\u4ed6\u865a\u62df\u5316\u6280\u672f\uff08\u5982 Xen\uff09\u53ef\u4ee5\u8bbf\u95ee Ceph \u5757\u8bbe\u5907\u5185\u6838\u5bf9\u8c61\u3002\u8fd9\u662f\u901a\u8fc7\u547d\u4ee4\u884c\u5de5\u5177 <code>rbd</code> \u5b8c\u6210\u7684\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#ceph_7","title":"CEPH \u6587\u4ef6\u7cfb\u7edf","text":"<p>The Ceph File System (CephFS) provides a POSIX-compliant filesystem as a service that is layered on top of the object-based Ceph Storage Cluster. CephFS files get mapped to objects that Ceph stores in the Ceph Storage Cluster. Ceph Clients mount a CephFS filesystem as a kernel object or as a Filesystem in User Space (FUSE). Ceph \u6587\u4ef6\u7cfb\u7edf \uff08CephFS\uff09 \u63d0\u4f9b\u7b26\u5408 POSIX \u6807\u51c6\u7684\u6587\u4ef6\u7cfb\u7edf\u5373\u670d\u52a1\uff0c\u8be5\u670d\u52a1\u5206\u5c42\u5728\u57fa\u4e8e\u5bf9\u8c61\u7684 Ceph \u5b58\u50a8\u96c6\u7fa4\u4e4b\u4e0a\u3002CephFS \u6587\u4ef6\u6620\u5c04\u5230 Ceph \u5b58\u50a8\u5728 Ceph \u5b58\u50a8\u96c6\u7fa4\u4e2d\u7684\u5bf9\u8c61\u3002Ceph \u5ba2\u6237\u7aef\u5c06 CephFS \u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u4e3a\u5185\u6838\u5bf9\u8c61\u6216\u7528\u6237\u7a7a\u95f4 \uff08FUSE\uff09 \u4e2d\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p></p> <p>The Ceph File System service includes the Ceph Metadata Server (MDS) deployed with the Ceph Storage cluster. The purpose of the MDS is to store all the filesystem metadata (directories, file ownership, access modes, etc) in high-availability Ceph Metadata Servers where the metadata resides in memory. The reason for the MDS (a daemon called <code>ceph-mds</code>) is that simple filesystem operations like listing a directory or changing a directory (<code>ls</code>, <code>cd</code>) would tax the Ceph OSD Daemons unnecessarily. So separating the metadata from the data means that the Ceph File System can provide high performance services without taxing the Ceph Storage Cluster. Ceph \u6587\u4ef6\u7cfb\u7edf\u670d\u52a1\u5305\u62ec\u4e0e Ceph Storage \u96c6\u7fa4\u4e00\u8d77\u90e8\u7f72\u7684 Ceph \u5143\u6570\u636e\u670d\u52a1\u5668 \uff08MDS\uff09\u3002MDS \u7684\u76ee\u7684\u662f\u5c06\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u5143\u6570\u636e\uff08\u76ee\u5f55\u3001\u6587\u4ef6\u6240\u6709\u6743\u3001\u8bbf\u95ee\u6a21\u5f0f\u7b49\uff09\u5b58\u50a8\u5728\u5143\u6570\u636e\u9a7b\u7559\u5728\u5185\u5b58\u4e2d\u7684\u9ad8\u53ef\u7528\u6027 Ceph \u5143\u6570\u636e\u670d\u52a1\u5668\u4e2d\u3002\u4f7f\u7528 MDS\uff08\u79f0\u4e3a <code>ceph-mds</code> \u7684\u5b88\u62a4\u8fdb\u7a0b\uff09\u7684\u539f\u56e0\u662f\uff0c\u7b80\u5355\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\uff08\u5982\u5217\u51fa\u76ee\u5f55\u6216\u66f4\u6539\u76ee\u5f55 \uff08<code>ls</code>\u3001<code>cd</code>\uff09\uff09\u4f1a\u4e0d\u5fc5\u8981\u5730\u7ed9 Ceph OSD \u5b88\u62a4\u8fdb\u7a0b\u5e26\u6765\u8d1f\u62c5\u3002\u56e0\u6b64\uff0c\u5c06\u5143\u6570\u636e\u4e0e\u6570\u636e\u5206\u79bb\u610f\u5473\u7740 Ceph \u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u63d0\u4f9b\u9ad8\u6027\u80fd\u670d\u52a1\uff0c\u800c\u4e0d\u4f1a\u5bf9 Ceph Storage Cluster \u9020\u6210\u8d1f\u62c5\u3002</p> <p>CephFS separates the metadata from the data, storing the metadata in the MDS, and storing the file data in one or more objects in the Ceph Storage Cluster. The Ceph filesystem aims for POSIX compatibility. <code>ceph-mds</code> can run as a single process, or it can be distributed out to multiple physical machines, either for high availability or for scalability. CephFS \u5c06\u5143\u6570\u636e\u4e0e\u6570\u636e\u5206\u5f00\uff0c\u5c06\u5143\u6570\u636e\u5b58\u50a8\u5728 MDS \u4e2d\uff0c\u5e76\u5c06\u6587\u4ef6\u6570\u636e\u5b58\u50a8\u5728 Ceph \u5b58\u50a8\u96c6\u7fa4\u4e2d\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u4e2d\u3002Ceph \u6587\u4ef6\u7cfb\u7edf\u65e8\u5728\u5b9e\u73b0 POSIX \u517c\u5bb9\u6027\u3002<code>ceph-mds</code> \u53ef\u4ee5\u4f5c\u4e3a\u5355\u4e2a\u8fdb\u7a0b\u8fd0\u884c\uff0c\u4e5f\u53ef\u4ee5\u5206\u53d1\u5230\u591a\u4e2a\u7269\u7406\u673a\uff0c\u4ee5\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u6216\u53ef\u6269\u5c55\u6027\u3002</p> <ul> <li>High Availability: The extra <code>ceph-mds</code> instances can be standby, ready to take over the duties of any failed <code>ceph-mds</code> that was active. This is easy because all the data, including the journal, is stored on RADOS. The transition is triggered automatically by <code>ceph-mon</code>. \u9ad8\u53ef\u7528\u6027\uff1a\u989d\u5916\u7684 <code>ceph-mds</code> \u5b9e\u4f8b\u53ef\u4ee5\u662f\u5907\u7528\u7684\uff0c\u968f\u65f6\u53ef\u4ee5\u63a5\u7ba1\u4efb\u4f55\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u7684\u5931\u8d25 <code>ceph-mds</code> \u7684\u804c\u8d23\u3002\u8fd9\u5f88\u5bb9\u6613\uff0c\u56e0\u4e3a\u6240\u6709\u6570\u636e\uff08\u5305\u62ec\u65e5\u5fd7\uff09\u90fd\u5b58\u50a8\u5728 RADOS \u4e0a\u3002\u8f6c\u6362\u7531 <code>ceph-mon</code> \u81ea\u52a8\u89e6\u53d1\u3002</li> <li>Scalability: Multiple <code>ceph-mds</code> instances can be active, and they will split the directory tree into subtrees (and shards of a single busy directory), effectively balancing the load amongst all active servers. \u53ef\u6269\u5c55\u6027\uff1a\u591a\u4e2a <code>ceph-mds</code> \u5b9e\u4f8b\u53ef\u4ee5\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u5b83\u4eec\u4f1a\u5c06\u76ee\u5f55\u6811\u62c6\u5206\u4e3a\u5b50\u6811\uff08\u4ee5\u53ca\u5355\u4e2a\u7e41\u5fd9\u76ee\u5f55\u7684\u5206\u7247\uff09\uff0c\u4ece\u800c\u6709\u6548\u5730\u5e73\u8861\u6240\u6709\u6d3b\u52a8\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u8d1f\u8f7d\u3002</li> </ul> <p>Combinations of standby and active etc are possible, for example running 3 active <code>ceph-mds</code> instances for scaling, and one standby instance for high availability. \u5907\u7528\u5b9e\u4f8b\u548c\u6d3b\u52a8\u5b9e\u4f8b\u7684\u7ec4\u5408\u662f\u53ef\u80fd\u7684\uff0c\u4f8b\u5982\uff0c\u8fd0\u884c 3 \u4e2a\u6d3b\u52a8<code>ceph-mds</code> \u5b9e\u4f8b\u8fdb\u884c\u6269\u5c55\uff0c\u8fd0\u884c 1 \u4e2a\u5907\u7528\u5b9e\u4f8b\u4ee5\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u3002</p>"},{"location":"ceph_doc/architecture/architecture/#_17","title":"CEPH\u67b6\u6784","text":""},{"location":"ceph_doc/ceph_file_system/","title":"CEPH \u6587\u4ef6\u7cfb\u7edf","text":"<p>Ceph \u6587\u4ef6\u7cfb\u7edf \uff08CephFS\uff09 \u662f\u6784\u5efa\u5728 Ceph \u7684\u5206\u5e03\u5f0f\u5bf9\u8c61\u5b58\u50a8 RADOS \u4e4b\u4e0a\u7684 POSIX \u517c\u5bb9\u6587\u4ef6\u7cfb\u7edf\u3002CephFS \u81f4\u529b\u4e8e\u4e3a\u5404\u79cd\u5e94\u7528\u7a0b\u5e8f\u63d0\u4f9b\u6700\u5148\u8fdb\u7684\u3001\u591a\u7528\u9014\u7684\u3001\u9ad8\u53ef\u7528\u7684\u9ad8\u6027\u80fd\u6587\u4ef6\u5b58\u50a8\uff0c\u5305\u62ec\u5171\u4eab\u4e3b\u76ee\u5f55\u3001HPC \u6682\u5b58\u7a7a\u95f4\u548c\u5206\u5e03\u5f0f\u5de5\u4f5c\u6d41\u5171\u4eab\u5b58\u50a8\u7b49\u4f20\u7edf\u4f7f\u7528\u6848\u4f8b\u3002</p> <p>CephFS \u901a\u8fc7\u5176\u521b\u65b0\u7684\u67b6\u6784\u6765\u5b9e\u73b0\u8fd9\u4e9b\u76ee\u6807\u3002\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0cCephFS \u6587\u4ef6\u5143\u6570\u636e\u4e0e\u6587\u4ef6\u6570\u636e\u5206\u5f00\u5b58\u50a8\u5728RADOS \u6c60\u4e2d\uff0c\u5e76\u901a\u8fc7\u53ef\u6a2a\u5411\u6269\u5c55\u7684\u5143\u6570\u636e\u670d\u52a1\u5668\uff08MDS\uff09\u96c6\u7fa4\u5bf9\u5916\u63d0\u4f9b\u670d\u52a1\uff0c\u8be5\u96c6\u7fa4\u53ef\u6269\u5c55\u4ee5\u652f\u6301\u66f4\u9ad8\u541e\u5410\u91cf\u7684\u5de5\u4f5c\u8d1f\u8f7d\u3002</p> <p>\u6587\u4ef6\u7cfb\u7edf\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee RADOS \u4ee5\u8bfb\u53d6\u548c\u5199\u5165\u6587\u4ef6\u6570\u636e\u5757\u3002\u8fd9\u4f7f\u5f97\u5de5\u4f5c\u8d1f\u8f7d\u80fd\u591f\u6839\u636e\u5e95\u5c42 RADOS\u5bf9\u8c61\u5b58\u50a8\u7684\u5927\u5c0f\u8fdb\u884c\u7ebf\u6027\u6269\u5c55\u3002\u4e0d\u5b58\u5728\u7f51\u5173\u6216\u4ee3\u7406\u6765\u534f\u8c03\u5ba2\u6237\u7aef\u7684\u6570\u636e I/O\u3002</p> <p>\u5bf9\u6587\u4ef6\u5143\u6570\u636e\u7684\u8bbf\u95ee\u662f\u901a\u8fc7 MDS \u96c6\u7fa4\u6765\u534f\u8c03\u7684\uff0cMDS \u96c6\u7fa4\u5145\u5f53\u7531\u5ba2\u6237\u7aef\u548c MDS \u5171\u540c\u7ef4\u62a4\u7684\u5206\u5e03\u5f0f\u5143\u6570\u636e\u7f13\u5b58\u72b6\u6001\u7684\u6743\u5a01\u673a\u6784\u3002\u5143\u6570\u636e\u7684\u66f4\u6539\u7531\u6bcf\u4e2a MDS \u805a\u5408\u5e76\u987a\u5e8f\u5199\u5165\u5230\u4e00\u7cfb\u5217\u5bf9\u57fa\u4e8eRADOS\u5bf9\u8c61\u7684\u65e5\u5fd7\u4e2d;MDS\u81ea\u8eab\u4e0d\u4f1a\u5728\u672c\u5730\u5b58\u50a8\u4efb\u4f55\u5143\u6570\u636e\u72b6\u6001\u3002\u6b64\u6a21\u578b\u5141\u8bb8\u5728 POSIX \u6587\u4ef6\u7cfb\u7edf\u7684\u4e0a\u4e0b\u6587\u4e2d\u5b9e\u73b0\u5ba2\u6237\u7aef\u4e4b\u95f4\u7684\u4e00\u81f4\u548c\u5feb\u901f\u534f\u4f5c\u3002</p> <p></p> <p>CephFS \u56e0\u5176\u65b0\u9896\u7684\u8bbe\u8ba1\u548c\u5bf9\u6587\u4ef6\u7cfb\u7edf\u7814\u7a76\u7684\u8d21\u732e\u800c\u6210\u4e3a\u4f17\u591a\u5b66\u672f\u8bba\u6587\u7684\u4e3b\u9898\u3002\u5b83\u662f Ceph \u4e2d\u6700\u53e4\u8001\u7684\u5b58\u50a8\u63a5\u53e3\uff0c\u66fe\u7ecf\u662f RADOS \u7684\u4e3b\u8981\u7528\u4f8b\u3002\u73b0\u5728\uff0c\u5b83\u548c\u53e6\u5916\u4e24\u4e2a\u5b58\u50a8\u63a5\u53e3\uff0c\u5171\u540c\u5f62\u6210\u4e00\u4e2a\u73b0\u4ee3\u7edf\u4e00\u5b58\u50a8\u7cfb\u7edf\uff1aRBD(Ceph \u5757\u8bbe\u5907)\u548c RGW(Ceph \u5bf9\u8c61\u5b58\u50a8\u7f51\u5173)\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/cephfs-io-path/","title":"CEPHFS IO \u8def\u5f84","text":"<p>CephFS \u4e2d\u7684\u6240\u6709\u6587\u4ef6\u6570\u636e\u90fd\u5b58\u50a8\u4e3a RADOS \u5bf9\u8c61\u3002CephFS \u5ba2\u6237\u7aef\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee RADOS \u4ee5\u64cd\u4f5c\u6587\u4ef6\u6570\u636e\u3002MDS \u4ec5\u5904\u7406\u5143\u6570\u636e\u64cd\u4f5c\u3002</p> <p></p> <p>\u8981\u8bfb/\u5199 CephFS \u6587\u4ef6\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u5177\u6709\u76f8\u5e94 inode \u7684\u6587\u4ef6\u8bfb\u5199\u6743\u9650\u3002\u5982\u679c\u5ba2\u6237\u7aef\u6ca1\u6709\u6240\u9700\u7684\u6743\u9650(1)\uff0c\u5b83\u4f1a\u5411 MDS \u53d1\u9001\u201c\u6743\u9650\u6d88\u606f\u201d\uff0c\u544a\u8bc9 MDS \u5b83\u60f3\u8981\u4ec0\u4e48\u3002MDS \u4f1a\u6839\u636e\u60c5\u51b5\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u8d4b\u4e88\u5ba2\u6237\u7aef\u5bf9\u5e94\u7684\u6743\u9650\u3002\u4e00\u65e6\u5ba2\u6237\u7aef\u5177\u6709\u6587\u4ef6\u8bfb\u5199\u6743\u9650\uff0c\u5b83\u5c31\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee RADOS \u4ee5\u8bfb/\u5199\u6587\u4ef6\u6570\u636e\u3002\u6587\u4ef6\u6570\u636e\u4ee5 <code>&lt;inode number&gt;.&lt;object index&gt;</code> \u7684\u5f62\u5f0f\u5b58\u50a8\u4e3a RADOS \u5bf9\u8c61\u3002\u6709\u5173\u66f4\u591a\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605\u67b6\u6784\u7684\u201c\u6570\u636e\u6761\u5e26\u5316\u201d\u90e8\u5206\u3002\u5982\u679c\u6587\u4ef6\u4ec5\u7531\u4e00\u4e2a\u5ba2\u6237\u7aef\u6253\u5f00\uff0c\u5219 MDS \u8fd8\u4f1a\u6388\u4e88\u552f\u4e00\u7684\u5ba2\u6237\u7aef\u6587\u4ef6\u7684\u7f13\u5b58\u8bfb\u5199\uff08<code>file cache/buffer</code>\uff09\u6743\u9650\u3002<code>file cache</code> \u7684\u6743\u9650\u610f\u5473\u7740\u5ba2\u6237\u7aef\u7f13\u5b58\u53ef\u4ee5\u6ee1\u8db3\u6587\u4ef6\u8bfb\u53d6\u3002<code>file buffer</code> \u6743\u9650\u610f\u5473\u7740\u6587\u4ef6\u5199\u5165\u53ef\u4ee5\u5728\u5ba2\u6237\u7aef\u7f13\u5b58\u4e2d\u7f13\u51b2\u3002</p> <ol> <li>\u5bf9\u5e94CephFS\u4e2d\u7684Caps\u3002</li> </ol>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/dirfrags/","title":"\u914d\u7f6e\u76ee\u5f55\u5206\u7247","text":"<p>\u5728CephFS\u4e2d\uff0c\u5f53\u4e00\u4e2a\u76ee\u5f55\u589e\u957f\u7684\u5f88\u5927\u6216\u8005\u8d1f\u8f7d\u5f88\u9ad8\u65f6\uff0cCephFS\u4f1a\u5bf9\u5b83\u8fdb\u884c\u5206\u7247\u5904\u7406\u3002\u8fd9\u53ef\u4ee5\u5c06\u76ee\u5f55\u7684\u5143\u6570\u636e\u62c6\u5206\u5230\u5143\u6570\u636e\u6c60\u4e2d\u7684\u591a\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u8ba9\u4e00\u4e2a\u76ee\u5f55\u7531\u591a\u4e2a MDS \u7ba1\u7406\u3002</p> <p>\u5728\u6b63\u5e38\u7684\u64cd\u4f5c\u4e2d\uff0c\u76ee\u5f55\u5206\u7247\u5bf9\u7528\u6237\u548c\u7ba1\u7406\u5458\u662f\u65e0\u611f\u7684\uff0c\u6b64\u5904\u63d0\u5230\u7684\u6240\u6709\u914d\u7f6e\u9879\u90fd\u5e94\u8be5\u4fdd\u7559\u4e3a\u9ed8\u8ba4\u503c\u3002</p> <p>\u867d\u7136\u76ee\u5f55\u5206\u7247\u673a\u5236\u4f7f\u5f97 CephFS \u53ef\u4ee5\u5904\u7406\u5355\u4e2a\u76ee\u5f55\u4e0b\u5927\u91cf\u6761\u76ee\uff0c\u4f46\u5e94\u7528\u7a0b\u5e8f\u4e5f\u5e94\u8be5\u5bf9\u521b\u5efa\u975e\u5e38\u5927\u7684\u76ee\u5f55\u4fdd\u6301\u8b66\u60d5\uff0c\u8fd9\u662f\u56e0\u4e3a CephFS \u5ba2\u6237\u7aef\u5728\u5bf9\u76ee\u5f55\u6267\u884c <code>ls</code> \u7b49\u64cd\u4f5c\u65f6\u9700\u8981\u52a0\u8f7d\u6240\u6709\u7684\u76ee\u5f55\u5206\u7247\uff0c\u8fd9\u4ecd\u9700\u8981\u6d88\u8017\u5927\u91cf\u7684\u8d44\u6e90\u3002</p> <p>Note</p> <p>\u6839\u76ee\u5f55\u4e0d\u4f1a\u88ab\u5206\u7247\u3002</p> <p>\u6240\u6709\u76ee\u5f55\u5728\u4e00\u53ef\u662f\u90fd\u53ea\u6709\u4e00\u4e2a\u5206\u7247\uff0c\u521d\u59cb\u5206\u7247\u968f\u7740\u76ee\u5f55\u548c\u8d1f\u8f7d\u7684\u589e\u957f\u4f1a\u88ab\u62c6\u5206\u5230\u66f4\u591a\u7684\u5206\u7247\u4e2d\uff0c\u8fd9\u4e9b\u5206\u7247\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5408\u5e76\u6765\u51cf\u5c11\u4e00\u4e2a\u76ee\u5f55\u7684\u5206\u7247\u6570\u91cf\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/dirfrags/#_2","title":"\u62c6\u5206\u548c\u5408\u5e76","text":"<p>\u5f53 MDS \u8bc6\u522b\u5230\u4e00\u4e2a\u76ee\u5f55\u9700\u8981\u8fdb\u884c\u62c6\u5206\u65f6\uff0c\u5b83\u4e0d\u4f1a\u7acb\u5373\u6267\u884c\u8be5\u64cd\u4f5c\uff0c\u56e0\u4e3a\u62c6\u5206\u76ee\u5f55\u4f1a\u5bfc\u81f4\u5143\u6570\u636eIO\u7684\u4e2d\u65ad\u3002\u5728\u6267\u884c\u62c6\u5206\u4e4b\u524d\uff0c\u5b58\u5728\u4e00\u4e2a\u77ed\u6682\u7684\u5ef6\u8fdf\u6765\u4fdd\u8bc1\u5ba2\u6237\u7aefIO\u7684\u5904\u7406\uff0c\u8fd9\u4e2a\u5ef6\u8fdf\u65f6\u95f4\u7684\u5927\u5c0f\u53ef\u4ee5\u7531<code>mds_bal_fragment_interval</code>\u914d\u7f6e\u9879\u6765\u63a7\u5236\uff0c\u9ed8\u8ba4\u4e3a5s\u3002</p> <p>\u62c6\u5206\u5b8c\u6210\u540e\uff0c\u65b0\u7684\u76ee\u5f55\u5206\u7247\u6570\u91cf\u662f2\u7684\u6574\u6570\u5e42\uff0c\u5177\u4f53\u5206\u7247\u6570\u4e3a2\u7684<code>mds_bal_split_bits</code>\u6b21\u65b9\uff0c\u4f8b\u5982\uff0c\u5982\u679c\u8be5\u503c\u4e3a2\uff0c\u4e00\u4e2a\u76ee\u5f55\u5206\u7247\u5c06\u88ab\u62c6\u5206\u4e3a4\u4e2a\u65b0\u7684\u76ee\u5f55\u5206\u7247\uff0c\u8be5\u503c\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a3\uff0c\u5373\u4e00\u4e2a\u76ee\u5f55\u5206\u7247\u4f1a\u88ab\u62c6\u5206\u4e3a8\u4e2a\u65b0\u7684\u76ee\u5f55\u5206\u7247\u3002</p> <p>\u4ee5\u4e0b\u5404\u7ae0\u8282\u4ecb\u7ecd\u4e86\u5f00\u59cb\u62c6\u5206\u6216\u5408\u5e76\u7684\u6761\u4ef6\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/dirfrags/#_3","title":"\u5927\u5c0f\u9608\u503c","text":"<p>\u5f53\u4e00\u4e2a\u76ee\u5f55\u5206\u7247\u5927\u5c0f\u8d85\u8fc7<code>mds_bal_split_size</code>\uff08\u9ed8\u8ba4\u4e3a10000\u4e2a\u76ee\u5f55\u6761\u76ee\uff09\uff0c\u8be5\u76ee\u5f55\u5206\u7247\u4f1a\u88ab\u62c6\u5206\u3002\u901a\u5e38\uff0c\u8be5\u62c6\u5206\u64cd\u4f5c\u4f1a\u5728<code>mds_bal_fragment_interval</code>(\u9ed8\u8ba4\u4e3a5s)\u4e4b\u540e\u5f00\u59cb\u3002\u4f46\u5982\u679c\u5206\u7247\u7684\u5927\u5c0f\u8d85\u8fc7\u62c6\u5206\u5927\u5c0f\u7684<code>mds_bal_fragment_fast_factor</code>\u500d\uff0c\u5219\u4f1a\u7acb\u5373\u5f00\u59cb\u62c6\u5206\u3002\uff08\u5c06\u6302\u8d77\u6240\u6709\u5ba2\u6237\u7aef\u4e0a\u7684\u5143\u6570\u636eIO\uff09\u3002</p> <p><code>mds_bal_fragment_size_max</code> \u662f\u76ee\u5f55\u5206\u7247\u5927\u5c0f\u7684\u786c\u6027\u9650\u5236\uff0c\u5f53\u8fbe\u5230\u6b64\u9650\u5236\u540e\uff0c\u5ba2\u6237\u7aef\u7684\u65b0\u5efa\u6587\u4ef6\u64cd\u4f5c\u5c06\u8fd4\u56de<code>ENOSPC</code>\u9519\u8bef\u3002\u5728\u5408\u7406\u7684\u914d\u7f6e\u4e0b\uff0c\u666e\u901a\u7684\u76ee\u5f55\u6c38\u8fdc\u4e0d\u5e94\u8be5\u8fbe\u5230\u6b21\u9650\u5236\uff0c\u56e0\u4e3a\u65e9\u5728\u6b64\u4e4b\u524d\u8be5\u76ee\u5f55\u5206\u7247\u5c31\u4f1a\u88ab\u62c6\u5206\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8be5\u503c\u88ab\u8bbe\u7f6e\u4e3a<code>mds_bal_split_size</code>\u768410\u500d\uff0c\u5373100000\u4e2a\u76ee\u5f55\u6761\u76ee\u3002\u589e\u52a0\u8be5\u503c\u53ef\u80fd\u4f1a\u5bfc\u81f4\u5143\u6570\u636e\u6c60\u7684\u76ee\u5f55\u5206\u7247\u5bf9\u8c61\u8fc7\u5927\uff0c\u4ece\u800c\u5bfc\u81f4OSD\u65e0\u6cd5\u5904\u7406\u8fd9\u4e9b\u5bf9\u8c61\u3002</p> <p>\u5f53\u4e00\u4e2a\u76ee\u5f55\u5206\u7247\u5927\u5c0f\u5c0f\u4e8e<code>mds_bal_merge_size</code>\uff08\u9ed8\u8ba4\u4e3a1000\u4e2a\u76ee\u5f55\u6761\u76ee\uff09\uff0c\u8be5\u76ee\u5f55\u5206\u7247\u4f1a\u88ab\u5408\u5e76\u3002\u5408\u5e76\u64cd\u4f5c\u6ca1\u6709\u4e0e\u4e0a\u8ff0\u62c6\u5206\u4e2d\u5bf9\u5e94\u7684\u5feb\u901f\u62c6\u5206\u8fc7\u7a0b\uff1a\u5feb\u901f\u62c6\u5206\u7528\u4e8e\u907f\u514d\u8fc7\u5927\u7684\u76ee\u5f55\u5206\u7247\uff0c\u5408\u5e76\u64cd\u4f5c\u5e76\u4e0d\u4f1a\u9762\u4e34\u8fd9\u4e2a\u95ee\u9898\u3002\u9ed8\u8ba4\u7684\u5408\u5e76\u5927\u5c0f\u4e3a50\u4e2a\u76ee\u5f55\u6761\u76ee\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/dirfrags/#_4","title":"\u8bbf\u95ee\u9608\u503c","text":"<p>\u9664\u4e86\u6839\u636e\u76ee\u5f55\u5206\u7247\u7684\u5927\u5c0f\u62c6\u5206\u4e4b\u5916\uff0c\u5982\u679c\u76ee\u5f55\u5206\u7247\u7684\u8bbf\u95ee\u8ba1\u6570\u503c\u8d85\u8fc7\u9608\u503c\uff0cMDS \u4e5f\u4f1a\u62c6\u5206\u8be5\u76ee\u5f55\u5206\u7247\u3002</p> <p>MDS \u5206\u522b\u4e3a\u76ee\u5f55\u5206\u7247\u7684\u8bfb\u53d6\u548c\u5199\u5165\u64cd\u4f5c\u7ef4\u62a4\u968f\u65f6\u95f4\u8870\u51cf\u7684\u8d1f\u8f7d\u8ba1\u6570\u5668\u3002\u8d1f\u8f7d\u8ba1\u6570\u5668\u4f1a\u57fa\u4e8e <code>mds_decay_halflife</code> \u914d\u7f6e\u9879\u6307\u6570\u8870\u51cf\u3002</p> <p>\u5728\u8fdb\u884c\u5199\u5165\u64cd\u4f5c\u65f6\uff0c\u5199\u5165\u8d1f\u8f7d\u8ba1\u6570\u5668\u4f1a\u589e\u52a0\uff0c\u5e76\u4e0e <code>mds_bal_split_wr</code> \u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u8d85\u8fc7\u9608\u503c\uff0c\u5c31\u4f1a\u89e6\u53d1\u62c6\u5206\u3002\u5199\u5165\u64cd\u4f5c\u5305\u62ec\u91cd\u547d\u540d\u3001\u53d6\u6d88\u94fe\u63a5\u548c\u521b\u5efa\u8fd9\u4e9b\u5143\u6570\u636eIO\u3002</p> <p>\u76f8\u5e94\u7684 <code>mds_bal_split_rd</code> \u9608\u503c\u7528\u4e8e\u4e0e\u8ddf\u8e2a <code>readdir</code> \u5143\u6570\u636e\u64cd\u4f5c\u7684\u8bfb\u53d6\u8d1f\u8f7d\u8ba1\u6570\u5668\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p><code>mds_bal_split_rd</code> \u548c <code>mds_bal_split_wr</code> \u914d\u7f6e\u9879\u8868\u793a\u76ee\u5f55\u5206\u914d\u88ab\u8bbf\u95ee\u7684\u70ed\u5ea6\u9608\u503c\uff0c\u5728 MDS \u4e2d\u88ab\u5ea6\u91cf\u4e3a \u201c\u8bfb/\u5199\u70ed\u5ea6\u201d\uff0c\u4e0e\u76f8\u5e94\u7684\u5143\u6570\u636e\u8bfb/\u5199\u64cd\u4f5c\u7684\u6570\u91cf\u5bc6\u5207\u76f8\u5173\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8bfb\u53d6\u9608\u503c\u4e3a 25000 \u6b21\u64cd\u4f5c\uff0c\u5199\u5165\u9608\u503c\u4e3a 10000 \u6b21\u64cd\u4f5c\uff0c\u5373\u89e6\u53d1\u62c6\u5206\u6240\u9700\u5199\u5165\u6b21\u6570\u4e3a\u8bfb\u53d6\u6b21\u6570\u7684 2.5 \u500d\u3002</p> <p>\u76ee\u5f55\u5206\u914d\u7531\u4e8e\u8fbe\u5230\u8bbf\u95ee\u9608\u503c\u88ab\u62c6\u5206\u540e\uff0c\u53ea\u4f1a\u5728\u8fbe\u5230\u5927\u5c0f\u9608\u503c (<code>mds_bal_merge_size</code>) \u540e\u624d\u4f1a\u8fdb\u884c\u5408\u5e76\uff0c\u56e0\u6b64\u4e00\u4e2a\u7a81\u53d1\u7684\u8bbf\u95ee\u70ed\u70b9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u76ee\u5f55\u6c38\u8fdc\u4fdd\u6301\u788e\u7247\u72b6\u6001\uff0c\u9664\u975e\u5bf9\u67d0\u4e9b\u76ee\u5f55\u6761\u76ee\u7684\u8fdb\u884c<code>unlink</code>\u64cd\u4f5c\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/dynamic-metadata-mangement/","title":"CEPHFS\u52a8\u6001\u5143\u6570\u636e\u7ba1\u7406","text":"<p>\u5143\u6570\u636e\u64cd\u4f5c\u901a\u5e38\u5360\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u768450%\u4ee5\u4e0a\uff0c\u6b64\u5916\uff0c\u4e0e\u6269\u5c55\u5b58\u50a8\uff08\u53cd\u8fc7\u6765\u53c8\u7ebf\u6027\u6269\u5c55 I/O \u541e\u5410\u91cf\uff09\u76f8\u6bd4\uff0c\u5143\u6570\u636e\u7684\u6269\u5c55\u65b9\u5f0f\u66f4\u52a0\u590d\u6742\u3002\u8fd9\u662f\u7531\u4e8e\u6587\u4ef6\u7cfb\u7edf\u5143\u6570\u636e\u7684\u5206\u5c42\u548c\u76f8\u4e92\u4f9d\u8d56\u6027\u8d28\u3002\u56e0\u6b64\uff0c\u5728 CephFS \u4e2d\uff0c\u5143\u6570\u636e\u5de5\u4f5c\u8d1f\u8f7d\u4e0e\u6570\u636e\u5de5\u4f5c\u8d1f\u8f7d\u5206\u79bb\uff0c\u4ee5\u907f\u514d\u7ed9 RADOS \u96c6\u7fa4\u5e26\u6765\u4e0d\u5fc5\u8981\u7684\u538b\u529b\u3002\u5143\u6570\u636e\u7531\u5143\u6570\u636e\u670d\u52a1\u5668 \uff08MDS\uff09\u96c6\u7fa4\u5904\u7406\u3002CephFS \u901a\u8fc7\u52a8\u6001\u5b50\u6811\u5206\u533a\u5728 MDS \u4e4b\u95f4\u5206\u53d1\u5143\u6570\u636e\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/dynamic-metadata-mangement/#_1","title":"\u52a8\u6001\u5b50\u6811\u5206\u533a","text":"<p>\u5728\u4f20\u7edf\u7684\u5b50\u6811\u5206\u533a\u4e2d\uff0c\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u7684\u5b50\u6811\u88ab\u5206\u914d\u7ed9\u5404\u4e2a MDS\u3002\u8fd9\u79cd\u5143\u6570\u636e\u5206\u53d1\u7b56\u7565\u63d0\u4f9b\u4e86\u826f\u597d\u7684\u5c42\u6b21\u5c40\u90e8\u6027\u3001\u7f13\u5b58\u7684\u7ebf\u6027\u589e\u957f\u548c\u8de8 MDS \u7684\u6c34\u5e73\u6269\u5c55\uff0c\u4ee5\u53ca\u8de8 MDS \u7684\u5143\u6570\u636e\u76f8\u5f53\u597d\u7684\u5206\u5e03\u3002</p> <p></p> <p>\u4f20\u7edf\u5b50\u6811\u5206\u533a\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5f53\u5de5\u4f5c\u8d1f\u8f7d\u6309\u7167\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21\u7ed3\u6784\u7684\u6df1\u5ea6\u589e\u957f\u65f6\uff08\u5728\u5355\u4e2aMDS\u4e0a\uff09\uff0c\u4f1a\u5bfc\u81f4\u5143\u6570\u636e\u70ed\u70b9\u95ee\u9898\u3002\u8fd9\u4f1a\u5bfc\u81f4MDS\u7f3a\u4e4f\u5782\u76f4\u6269\u5c55\u80fd\u529b\u4ee5\u53ca\u6d6a\u8d39\u975e\u7e41\u5fd9\u7684MDS\u8d44\u6e90\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0cCephFS\u5f15\u5165\u4e86\u52a8\u6001\u5b50\u6811\u5206\u533a\u3002\u5728\u52a8\u6001\u5b50\u6811\u5206\u533a\u4e2d\uff0c\u5c06\u76ee\u5f55\u6811\u4e2d\u8d1f\u8f7d\u6bd4\u8f83\u5bc6\u96c6\u7684\u90e8\u5206\u4ece\u538b\u529b\u5927\u7684MDS\u8fc1\u79fb\u5230\u538b\u529b\u8f83\u5c0f\u7684MDS\u3002</p> <p>\u8fd9\u79cd\u7b56\u7565\u53ef\u4ee5\u786e\u4fdd\u5728\u51fa\u73b0\u8bbf\u95ee\u70ed\u70b9\u76ee\u5f55\u65f6MDS\u7684\u538b\u529b\u5f97\u5230\u7f13\u89e3\uff0c\u4f7f\u5143\u6570\u636e\u5de5\u4f5c\u8d1f\u8f7d\u83b7\u5f97\u5782\u76f4\u6269\u5c55\u7684\u80fd\u529b\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/dynamic-metadata-mangement/#_2","title":"\u5b50\u6811\u8fc1\u79fb\u671f\u95f4\u7684\u5bfc\u51fa\u8fc7\u7a0b","text":"<p>Once the exporter verifies that the subtree is permissible to be exported (Non degraded cluster, non-frozen subtree root), the subtree root directory is temporarily auth pinned, the subtree freeze is initiated, and the exporter is committed to the subtree migration, barring an intervening failure of the importer or itself. \u4e00\u65e6\u5bfc\u51fa\u5668\u9a8c\u8bc1\u4e86\u5141\u8bb8\u5bfc\u51fa\u5b50\u6811\uff08\u975e\u964d\u7ea7\u96c6\u7fa4\u3001\u975e\u51bb\u7ed3\u5b50\u6811\u6839\uff09\uff0c\u5b50\u6811\u6839\u76ee\u5f55\u5c06\u88ab\u4e34\u65f6\u8eab\u4efd\u9a8c\u8bc1\u56fa\u5b9a\uff0c\u5b50\u6811\u51bb\u7ed3\u5c06\u542f\u52a8\uff0c\u5e76\u4e14\u5bfc\u51fa\u5668\u5c06\u63d0\u4ea4\u5230\u5b50\u6811\u8fc1\u79fb\uff0c\u9664\u975e\u5bfc\u5165\u5668\u6216\u81ea\u8eab\u53d1\u751f\u5e72\u9884\u6545\u969c\u3002</p> <p>The MExportDiscover message is exchanged to ensure that the inode for the base directory being exported is open on the destination node. It is auth pinned by the importer to prevent it from being trimmed. This occurs before the exporter completes the freeze of the subtree to ensure that the importer is able to replicate the necessary metadata. When the exporter receives the MDiscoverAck, it allows the freeze to proceed by removing its temporary auth pin. \u4ea4\u6362 MExportDiscover \u6d88\u606f\u4ee5\u786e\u4fdd\u8981\u5bfc\u51fa\u7684\u57fa\u76ee\u5f55\u7684 inode \u5728\u76ee\u6807\u8282\u70b9\u4e0a\u5904\u4e8e\u6253\u5f00\u72b6\u6001\u3002\u5b83\u7531\u5bfc\u5165\u5668\u8fdb\u884c\u8eab\u4efd\u9a8c\u8bc1\u56fa\u5b9a\uff0c\u4ee5\u9632\u6b62\u5176\u88ab\u4fee\u526a\u3002\u8fd9\u53d1\u751f\u5728\u5bfc\u51fa\u5668\u5b8c\u6210\u5b50\u6811\u7684\u51bb\u7ed3\u4e4b\u524d\uff0c\u4ee5\u786e\u4fdd\u5bfc\u5165\u5668\u80fd\u591f\u590d\u5236\u5fc5\u8981\u7684\u5143\u6570\u636e\u3002\u5f53\u5bfc\u51fa\u5668\u6536\u5230 MDiscoverAck \u65f6\uff0c\u5b83\u5141\u8bb8\u901a\u8fc7\u5220\u9664\u5176\u4e34\u65f6\u8eab\u4efd\u9a8c\u8bc1 pin \u6765\u7ee7\u7eed\u51bb\u7ed3\u3002</p> <p>A warning stage occurs only if the base subtree directory is open by nodes other than the importer and exporter. If it is not, then this implies that no metadata within or nested beneath the subtree is replicated by any node other than the importer and exporter. If it is, then an MExportWarning message informs any bystanders that the authority for the region is temporarily ambiguous, and lists both the exporter and importer as authoritative MDS nodes. In particular, bystanders who are trimming items from their cache must send MCacheExpire messages to both the old and new authorities. This is necessary to ensure that the surviving authority reliably receives all expirations even if the importer or exporter fails. While the subtree is frozen (on both the importer and exporter), expirations will not be immediately processed; instead, they will be queued until the region is unfrozen and it can be determined that the node is or is not authoritative. \u4ec5\u5f53 base subtree \u76ee\u5f55\u7531 importer \u548c exporter \u4ee5\u5916\u7684\u8282\u70b9\u6253\u5f00\u65f6\uff0c\u624d\u4f1a\u51fa\u73b0\u8b66\u544a\u9636\u6bb5\u3002\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8fd9\u610f\u5473\u7740\u9664\u5bfc\u5165\u5668\u548c\u5bfc\u51fa\u5668\u4e4b\u5916\u7684\u4efb\u4f55\u8282\u70b9\u90fd\u4e0d\u4f1a\u590d\u5236\u5b50\u6811\u4e2d\u6216\u5d4c\u5957\u5728\u5b50\u6811\u4e0b\u7684\u5143\u6570\u636e\u3002\u5982\u679c\u662f\uff0c\u5219 MExportWarning \u6d88\u606f\u4f1a\u901a\u77e5\u4efb\u4f55\u65c1\u89c2\u8005\u8be5\u533a\u57df\u7684\u9881\u53d1\u673a\u6784\u6682\u65f6\u4e0d\u660e\u786e\uff0c\u5e76\u5c06\u5bfc\u51fa\u7a0b\u5e8f\u548c\u5bfc\u5165\u7a0b\u5e8f\u5217\u4e3a\u6743\u5a01 MDS \u8282\u70b9\u3002\u7279\u522b\u662f\uff0c\u4ece\u7f13\u5b58\u4e2d\u4fee\u526a\u9879\u76ee\u7684\u65c1\u89c2\u8005\u5fc5\u987b\u5411\u65b0\u65e7\u673a\u6784\u53d1\u9001 MCacheExpire \u6d88\u606f\u3002\u8fd9\u662f\u5fc5\u8981\u7684\uff0c\u4ee5\u786e\u4fdd\u5373\u4f7f\u8fdb\u53e3\u5546\u6216\u51fa\u53e3\u5546\u5931\u8d25\uff0c\u4ecd\u7136\u5b58\u5728\u7684\u5f53\u5c40\u4e5f\u80fd\u53ef\u9760\u5730\u6536\u5230\u6240\u6709\u5230\u671f\u65e5\u3002\u5f53\u5b50\u6811\u88ab\u51bb\u7ed3\u65f6\uff08\u5728 importer \u548c exporter \u4e0a\uff09\uff0c\u4e0d\u4f1a\u7acb\u5373\u5904\u7406\u8fc7\u671f;\u76f8\u53cd\uff0c\u5b83\u4eec\u5c06\u6392\u961f\uff0c\u76f4\u5230\u533a\u57df\u89e3\u51bb\uff0c\u5e76\u4e14\u53ef\u4ee5\u786e\u5b9a\u8be5\u8282\u70b9\u662f\u5426\u5177\u6709\u6743\u5a01\u6027\u3002</p> <p>The exporter then packages an MExport message containing all metadata of the subtree and flags the objects as non-authoritative. The MExport message sends the actual subtree metadata to the importer. Upon receipt, the importer inserts the data into its cache, marks all objects as authoritative, and logs a copy of all metadata in an EImportStart journal message. Once that has safely flushed, it replies with an MExportAck. The exporter can now log an EExport journal entry, which ultimately specifies that the export was a success. In the presence of failures, it is the existence of the EExport entry only that disambiguates authority during recovery. \u7136\u540e\uff0c\u5bfc\u51fa\u5668\u6253\u5305\u5305\u542b\u5b50\u6811\u7684\u6240\u6709\u5143\u6570\u636e\u7684 MExport \u6d88\u606f\uff0c\u5e76\u5c06\u5bf9\u8c61\u6807\u8bb0\u4e3a\u975e\u6743\u5a01\u5bf9\u8c61\u3002MExport \u6d88\u606f\u5c06\u5b9e\u9645\u7684\u5b50\u6811\u5143\u6570\u636e\u53d1\u9001\u5230\u5bfc\u5165\u5668\u3002\u6536\u5230\u540e\uff0c\u5bfc\u5165\u7a0b\u5e8f\u5c06\u6570\u636e\u63d2\u5165\u5176\u7f13\u5b58\u4e2d\uff0c\u5c06\u6240\u6709\u5bf9\u8c61\u6807\u8bb0\u4e3a\u6743\u5a01\u5bf9\u8c61\uff0c\u5e76\u5728 EImportStart \u65e5\u8bb0\u6d88\u606f\u4e2d\u8bb0\u5f55\u6240\u6709\u5143\u6570\u636e\u7684\u526f\u672c\u3002\u4e00\u65e6\u5b89\u5168\u5237\u65b0\uff0c\u5b83\u5c31\u4f1a\u56de\u590d MExportAck\u3002\u5bfc\u51fa\u5668\u73b0\u5728\u53ef\u4ee5\u8bb0\u5f55 EExport \u65e5\u5fd7\u6761\u76ee\uff0c\u8be5\u6761\u76ee\u6700\u7ec8\u6307\u5b9a\u5bfc\u51fa\u6210\u529f\u3002\u5728\u5b58\u5728\u6545\u969c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709 EExport \u6761\u76ee\u7684\u5b58\u5728\u624d\u80fd\u5728\u6062\u590d\u8fc7\u7a0b\u4e2d\u6d88\u9664\u6743\u9650\u7684\u6b67\u4e49\u3002</p> <p>Once logged, the exporter will send an MExportNotify to any bystanders, informing them that the authority is no longer ambiguous and cache expirations should be sent only to the new authority (the importer). Once these are acknowledged back to the exporter, implicitly flushing the bystander to exporter message streams of any stray expiration notices, the exporter unfreezes the subtree, cleans up its migration-related state, and sends a final MExportFinish to the importer. Upon receipt, the importer logs an EImportFinish(true) (noting locally that the export was indeed a success), unfreezes its subtree, processes any queued cache expirations, and cleans up its state. \u8bb0\u5f55\u540e\uff0c\u5bfc\u51fa\u5668\u5c06\u5411\u4efb\u4f55\u65c1\u89c2\u8005\u53d1\u9001 MExportNotify\uff0c\u901a\u77e5\u4ed6\u4eec\u6743\u9650\u4e0d\u518d\u6a21\u68f1\u4e24\u53ef\uff0c\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\u5e94\u4ec5\u53d1\u9001\u7ed9\u65b0\u6743\u9650\uff08\u5bfc\u5165\u5668\uff09\u3002\u4e00\u65e6\u8fd9\u4e9b\u88ab\u786e\u8ba4\u56de\u5bfc\u51fa\u5668\uff0c\u9690\u5f0f\u5730\u5c06\u65c1\u89c2\u8005\u5237\u65b0\u5230\u5bfc\u51fa\u5668\u6d88\u606f\u6d41\u4e2d\u4efb\u4f55\u6742\u6563\u7684\u8fc7\u671f\u901a\u77e5\uff0c\u5bfc\u51fa\u5668\u5c31\u4f1a\u89e3\u51bb\u5b50\u6811\uff0c\u6e05\u7406\u5176\u4e0e\u8fc1\u79fb\u76f8\u5173\u7684\u72b6\u6001\uff0c\u5e76\u5c06\u6700\u7ec8\u7684 MExportFinish \u53d1\u9001\u5230\u5bfc\u5165\u5668\u3002\u6536\u5230\u540e\uff0c\u5bfc\u5165\u7a0b\u5e8f\u4f1a\u8bb0\u5f55 EImportFinish\uff08true\uff09\uff08\u5728\u672c\u5730\u6ce8\u610f\u5bfc\u51fa\u786e\u5b9e\u6210\u529f\uff09\uff0c\u89e3\u51bb\u5176\u5b50\u6811\uff0c\u5904\u7406\u4efb\u4f55\u6392\u961f\u7684\u7f13\u5b58\u8fc7\u671f\u65f6\u95f4\uff0c\u5e76\u6e05\u7406\u5176\u72b6\u6001\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/file-layouts/","title":"\u6587\u4ef6\u5e03\u5c40(Layout)","text":"<p>\u4e00\u4e2a\u6587\u4ef6\u7684 Layout \u662f\u6307\u6587\u4ef6\u7684\u5185\u5bb9\u4e0eCeph Rados\u5bf9\u8c61\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002\u60a8\u53ef\u4ee5\u901a\u8fc7\u865a\u62df\u6269\u5c55\u5c5e\u6027\u6216\u8005xattrs\u6765\u67e5\u770b\u6587\u4ef6\u7684 Layout\u3002</p> <p>\u5ba2\u6237\u7aef\u5728\u5199\u5165\u6587\u4ef6Layout\u65f6\uff0c\u5fc5\u987b\u4f7f\u7528 <code>p</code> \u9009\u9879\u3002 \u8bf7\u53c2\u9605 Layout\u548cQuota\u9650\u5236</p> <p>Layout\u7684xattr\u5c5e\u6027\u540d\u6839\u636e\u6587\u4ef6\u7684\u7c7b\u578b\u800c\u4e0d\u540c\uff1a</p> <ul> <li>\u666e\u901a\u6587\u4ef6\uff1a<code>ceph.file.layout</code></li> <li>\u76ee\u5f55\uff1a<code>ceph.dir.layout</code></li> </ul> <p>\u4e0b\u6587\u4e2d\u7684\u4f8b\u5b50\u90fd\u662f\u57fa\u4e8e\u666e\u901a\u6587\u4ef6\u7684\uff0c\u5f53\u60a8\u5728\u76ee\u5f55\u4e0a\u6267\u884c\u793a\u4f8b\u4e2d\u7684\u64cd\u4f5c\u65f6\uff0c\u60a8\u9700\u8981\u5c06 <code>ceph.dir.layout</code> \u66ff\u6362\u4e3a<code>ceph.file.layout</code>\u3002</p> <p>Tip</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u60a8\u7684Linux\u53d1\u884c\u7248\u53ef\u80fd\u6ca1\u6709\u9644\u5e26\u7528\u6765\u64cd\u4f5c <code>xattr</code> \u7684\u547d\u4ee4\uff0c\u60a8\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5 <code>attr</code> \u5305\u6765\u89e3\u51b3\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/file-layouts/#layout_1","title":"Layout\u5b57\u6bb5","text":"<p>Layout\u5305\u542b\u4ee5\u4e0b\u5b57\u6bb5\uff1a</p> <ul> <li>pool\uff1a     \u5305\u542bID\u6216\u8005\u540d\u79f0\u7684\u5b57\u7b26\u4e32\uff0c\u53ea\u80fd\u5305\u542b <code>[a-zA-Z0-9\\_-.]</code> \u4e2d\u7684\u5b57\u7b26\u3002\u8be5\u5b57\u6bb5\u6807\u8bc6\u7528\u4e8e\u5b58\u50a8\u6587\u4ef6\u6570\u636e\u5bf9\u8c61\u7684Rados\u5b58\u50a8\u6c60\u3002</li> <li>pool_id\uff1a     \u7531\u6570\u5b57\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff0c\u8868\u793aCeph\u5728\u521b\u5efaRados\u5b58\u50a8\u6c60\u65f6\u5206\u914d\u7684ID\u3002</li> <li>pool_name:     \u5b57\u7b26\u4e32\uff0c\u8868\u793a\u7528\u6237\u5728\u521b\u5efaRados\u5b58\u50a8\u6c60\u65f6\u6307\u5b9a\u7684\u540d\u79f0\u3002</li> <li>pool_namespace:     \u5b57\u7b26\u4e32\uff0c\u53ea\u80fd\u5305\u542b <code>[a-zA-Z0-9\\_-.]</code> \u4e2d\u7684\u5b57\u7b26\u3002\u8be5\u5b57\u6bb5\u51b3\u5b9a\u4e86\u6587\u4ef6\u6570\u636e\u7684Rados\u5bf9\u8c61\u5199\u5165\u6570\u636e\u6c60\u7684\u90a3\u4e2a\u547d\u540d\u7a7a\u95f4\u3002\u9ed8\u8ba4\u4e3a\u7a7a\uff08\u5373\u9ed8\u8ba4\u7684\u547d\u540d\u7a7a\u95f4\uff09\u3002</li> <li>stripe_unit:     \u6574\u6570\u3002\u7528\u4e8e\u5206\u53d1\u6587\u4ef6\u7684\u6570\u636e\u5757\u7684\u5927\u5c0f \uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\u6587\u4ef6\u7684\u6240\u6709\u6761\u5e26\u5355\u4f4d\u5927\u5c0f\u76f8\u540c\u3002\u6700\u540e\u4e00\u4e2a\u6761\u5e26\u5355\u5143\u901a\u5e38\u53ea\u6709\u90e8\u5206\u6570\u636e\uff1a\u5b83\u4f1a\u4fdd\u7559\u6587\u4ef6\u6570\u636e\u76f4\u81f3\u6587\u4ef6\u7ed3\u675f\u7b26\uff08EOF\uff09\uff0c\u540c\u65f6\u8fd8\u4f1a\u4fdd\u7559\u7528\u4e8e\u586b\u5145\u56fa\u5b9a\u6761\u5e26\u5355\u5143\u5927\u5c0f\u5269\u4f59\u90e8\u5206\u7684\u586b\u5145\u6570\u636e\u3002</li> <li>stripe_count:     \u6574\u6570\u3002\u8868\u793a\u6587\u4ef6 RAID 0\u6761\u5e26\u5316\u7684\u6761\u5e26\u6570\u91cf\u3002</li> <li>object_size:     \u6574\u6570\u3002\u8868\u793a\u6587\u4ef6\u6570\u636e\u5bf9\u8c61\u7684\u5927\u5c0f\uff08\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff09\u3002\u6587\u4ef6\u6570\u636e\u88ab\u5206\u5272\u4e3a\u591a\u4e2a\u6b64\u5927\u5c0f\u7684Rados\u5bf9\u8c61\u4e2d\u3002</li> </ul> <p>Tip</p> <p>RADOS \u5bf9\u8c61\u5927\u5c0f\u53ef\u914d\u7f6e\uff0c\u4f46\u5b58\u5728\u9650\u5236\uff1a\u5982\u679c\u5c06 CephFS \u5bf9\u8c61\u5927\u5c0f\u589e\u52a0\u5230\u8d85\u8fc7\u8be5\u9650\u5236\uff0c\u5219\u5199\u5165\u53ef\u80fd\u4e0d\u4f1a\u6210\u529f\u3002OSD \u5bf9\u5e94\u7684\u9009\u9879\u4e3a <code>osd_max_object_size</code>\uff0c\u9ed8\u8ba4\u4e3a 128MB\u3002\u975e\u5e38\u5927\u7684 RADOS \u5bf9\u8c61\u53ef\u80fd\u4f1a\u5f71\u54cd\u96c6\u7fa4\u7684\u6b63\u5e38\u8fd0\u884c\uff0c\u56e0\u6b64\u4e0d\u5efa\u8bae\u5c06\u5bf9\u8c61\u5927\u5c0f\u9650\u5236\u8bbe\u7f6e\u8d85\u8fc7\u9ed8\u8ba4\u503c\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/file-layouts/#getfattrlayout","title":"\u4f7f\u7528GETFATTR\u8bfb\u53d6Layout","text":"<p>\u5c06Layout\u4fe1\u606f\u4f5c\u4e3a\u4e00\u4e2a\u5b57\u7b26\u4e32\u8fd4\u56de\u3002</p> <pre><code>$ touch file\n$ getfattr -n ceph.file.layout file\n# file: file\nceph.file.layout=\"stripe_unit=4194304 stripe_count=1 object_size=4194304 pool=cephfs_data\"\n</code></pre> <p>\u8bfb\u53d6Layout\u4e2d\u7684\u5355\u4e2a\u5b57\u6bb5\uff1a</p> <pre><code>$ getfattr -n ceph.file.layout.pool_name file\n# file: file\nceph.file.layout.pool_name=\"cephfs_data\"\n$ getfattr -n ceph.file.layout.pool_id file\n# file: file\nceph.file.layout.pool_id=\"5\"\n$ getfattr -n ceph.file.layout.pool file\n# file: file\nceph.file.layout.pool=\"cephfs_data\"\n$ getfattr -n ceph.file.layout.stripe_unit file\n# file: file\nceph.file.layout.stripe_unit=\"4194304\"\n$ getfattr -n ceph.file.layout.stripe_count file\n# file: file\nceph.file.layout.stripe_count=\"1\"\n$ getfattr -n ceph.file.layout.object_size file\n# file: file\nceph.file.layout.object_size=\"4194304\"\n</code></pre> <p>Note</p> <p>\u8bfb\u53d6Layout\u65f6\uff0c<code>pool</code> \u5b57\u6bb5\u901a\u5e38\u8f93\u51fa\u4e3a name \u3002\u4f46\u662f\uff0c\u5728\u6781\u5c11\u6570\u60c5\u51b5\u4e0b\uff0c\u5f53\u521a\u521a\u521b\u5efa\u5b58\u50a8\u6c60\u65f6\uff0c\u53ef\u80fd\u4f1a\u6539\u4e3a\u8f93\u51fa ID\u3002</p> <p>\u76ee\u5f55\u9ed8\u8ba4\u6ca1\u6709Layout\uff0c\u53ea\u6709\u5728\u81ea\u5b9a\u4e49\u8bbe\u7f6e\u4e4b\u540e\u624d\u4f1a\u4ea7\u751fLayout\u3002\u5982\u679c\u4ece\u672a\u4fee\u6539\u8fc7\u76ee\u5f55\u7684Layout\uff0c\u5219\u5c1d\u8bd5\u8bfb\u53d6\u76ee\u5f55\u7684Layout\u4f1a\u8fd4\u56de\u9519\u8bef\uff1a\u8fd9\u610f\u5473\u7740\u5c06\u4f1a\u4f7f\u7528\u4e0b\u4e00\u4e2a\u5177\u6709\u663e\u5f0fLayout\u7684\u7956\u5148\u76ee\u5f55\u7684Layout\u3002</p> <pre><code>$ mkdir dir\n$ getfattr -n ceph.dir.layout dir\ndir: ceph.dir.layout: No such attribute\n$ setfattr -n ceph.dir.layout.stripe_count -v 2 dir\n$ getfattr -n ceph.dir.layout dir\n# file: dir\nceph.dir.layout=\"stripe_unit=4194304 stripe_count=2 object_size=4194304 pool=cephfs_data\"\n</code></pre> <p>\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u4ee5JSON\u683c\u5f0f\u8f93\u51faLayout\u4fe1\u606f\uff1a</p> <pre><code>$ getfattr -n ceph.dir.layout.json --only-values /mnt/mycephs/accounts\n{\"stripe_unit\": 4194304, \"stripe_count\": 1, \"object_size\": 4194304, \"pool_name\": \"cephfs.a.data\", \"pool_id\": 3, \"pool_namespace\": \"\", \"inheritance\": \"@default\"}\n</code></pre> <p>\u5982\u679c\u6ca1\u6709\u4e3a\u6307\u5b9a\u7684 inode \u8bbe\u7f6eLayout\uff0c\u7cfb\u7edf\u4f1a\u5411\u540e\u904d\u5386\u76ee\u5f55\u8def\u5f84\uff0c\u4f7f\u7528\u6700\u8fd1\u7684\u7956\u5148\u76ee\u5f55\u7684 Layout \u4ee5 json \u683c\u5f0f\u8fd4\u56de\u3002\u6587\u4ef6\u7684Layout\u53ef\u4ee5\u901a\u8fc7\u540d\u4e3a <code>ceph.file.layout.json</code> \u7684 xattr \u67e5\u8be2 json \u683c\u5f0f\u7684\u6587\u4ef6Layout\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/file-layouts/#setfattrlayout","title":"\u4f7f\u7528SETFATTR\u8bbe\u7f6eLayout","text":"<p>\u4f7f\u7528<code>setfattr</code>\u547d\u4ee4\u8bbe\u7f6eLayout\u5b57\u6bb5\uff1a</p> <pre><code>$ ceph osd lspools\n0 rbd\n1 cephfs_data\n2 cephfs_metadata\n\n$ setfattr -n ceph.file.layout.stripe_unit -v 1048576 file2\n$ setfattr -n ceph.file.layout.stripe_count -v 8 file2\n$ setfattr -n ceph.file.layout.object_size -v 10485760 file2\n$ setfattr -n ceph.file.layout.pool -v 1 file2  # Setting pool by ID\n$ setfattr -n ceph.file.layout.pool -v cephfs_data file2  # Setting pool by name\n$ setfattr -n ceph.file.layout.pool_id -v 1 file2  # Setting pool by ID\n$ setfattr -n ceph.file.layout.pool_name -v cephfs_data file2  # Setting pool by name\n</code></pre> <p>Note</p> <p>\u4f7f\u7528<code>setfattr</code>\u547d\u4ee4\u4fee\u6539\u6587\u4ef6Layout\u65f6\uff0c\u6b64\u6587\u4ef6\u5fc5\u987b\u4e3a\u7a7a\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002 </p> <pre><code># touch an empty file\n$ touch file1\n# modify layout field successfully\n$ setfattr -n ceph.file.layout.stripe_count -v 3 file1\n\n# write something to file1\n$ echo \"hello world\" &gt; file1\n$ setfattr -n ceph.file.layout.stripe_count -v 4 file1\nsetfattr: file1: Directory not empty\n</code></pre> <p>\u540c\u6837\u53ef\u4ee5\u901a\u8fc7JSON\u683c\u5f0f\u8bbe\u7f6e\u6587\u4ef6\u548c\u76ee\u5f55\u7684 Layout\u3002\u8bbe\u7f6eLayout\u65f6\uff0c\u5c06\u5ffd\u7565 <code>inheritance</code>\u5b57\u6bb5\u3002\u6b64\u5916\uff0c\u5982\u679c\u540c\u65f6\u6307\u5b9a\u4e86 <code>pool_name</code> \u548c <code>pool_id</code>\uff0c\u5219 <code>pool_name</code> \u5177\u6709\u8f83\u9ad8\u7684\u4f18\u5148\u7ea7\u3002</p> <pre><code>$ setfattr -n ceph.file.layout.json -v '{\"stripe_unit\": 4194304, \"stripe_count\": 1, \"object_size\": 4194304, \"pool_name\": \"cephfs.a.data\", \"pool_id\": 3, \"pool_namespace\": \"\", \"inheritance\": \"@default\"}' file1\n</code></pre>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/file-layouts/#layout_2","title":"\u6e05\u9664Layout","text":"<p>\u5982\u679c\u60a8\u5e0c\u671b\u5220\u9664\u4e00\u4e2a\u76ee\u5f55\u7684\u663e\u5f0fLayout\uff0c\u6062\u590d\u4e3a\u7ee7\u627f\u81ea\u5176\u7956\u5148\u76ee\u5f55\u7684Layout\uff0c\u60a8\u53ef\u4ee5\u8fd9\u6837\u505a\uff1a</p> <pre><code>setfattr -x ceph.dir.layout mydir\n</code></pre> <p>\u540c\u6837\uff0c\u5982\u679c\u4f60\u5df2\u7ecf\u8bbe\u7f6e\u4e86 <code>pool_namespace</code> \u5c5e\u6027\uff0c\u5e76\u5e0c\u671b\u4fee\u6539Layout\u4ee5\u6539\u7528 <code>default</code> \u547d\u540d\u7a7a\u95f4\uff1a</p> <pre><code># Create a dir and set a namespace on it\nmkdir mydir\nsetfattr -n ceph.dir.layout.pool_namespace -v foons mydir\ngetfattr -n ceph.dir.layout mydir\nceph.dir.layout=\"stripe_unit=4194304 stripe_count=1 object_size=4194304 pool=cephfs_data_a pool_namespace=foons\"\n\n# Clear the namespace from the directory's layout\nsetfattr -x ceph.dir.layout.pool_namespace mydir\ngetfattr -n ceph.dir.layout mydir\nceph.dir.layout=\"stripe_unit=4194304 stripe_count=1 object_size=4194304 pool=cephfs_data_a\"\n</code></pre>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/file-layouts/#layout_3","title":"Layout\u7684\u7ee7\u627f","text":"<p>\u6587\u4ef6\u5728\u521b\u5efa\u65f6\u7ee7\u627f\u5176\u7236\u76ee\u5f55\u7684\u5e03\u5c40\u3002\u4f46\u662f\uff0c\u5bf9\u7236\u76ee\u5f55\u5e03\u5c40\u7684\u540e\u7eed\u66f4\u6539\u4e0d\u4f1a\u5f71\u54cd\u76ee\u5f55\u4e2d\u5df2\u5b58\u5728\u7684\u540e\u4ee3\u3002 <pre><code>$ getfattr -n ceph.dir.layout dir\n# file: dir\nceph.dir.layout=\"stripe_unit=4194304 stripe_count=2 object_size=4194304 pool=cephfs_data\"\n\n# Demonstrate file1 inheriting its parent's layout\n$ touch dir/file1\n$ getfattr -n ceph.file.layout dir/file1\n# file: dir/file1\nceph.file.layout=\"stripe_unit=4194304 stripe_count=2 object_size=4194304 pool=cephfs_data\"\n\n# Now update the layout of the directory before creating a second file\n$ setfattr -n ceph.dir.layout.stripe_count -v 4 dir\n$ touch dir/file2\n\n# Demonstrate that file1's layout is unchanged\n$ getfattr -n ceph.file.layout dir/file1\n# file: dir/file1\nceph.file.layout=\"stripe_unit=4194304 stripe_count=2 object_size=4194304 pool=cephfs_data\"\n\n# ...while file2 has the parent directory's new layout\n$ getfattr -n ceph.file.layout dir/file2\n# file: dir/file2\nceph.file.layout=\"stripe_unit=4194304 stripe_count=4 object_size=4194304 pool=cephfs_data\"\n</code></pre></p> <p>\u5bf9\u4e8e\u591a\u7ea7\u76ee\u5f55\u7ed3\u6784\uff0c\u521b\u5efa\u6587\u4ef6\u65f6\uff0c\u5982\u679c\u4e2d\u95f4\u76ee\u5f55\u6ca1\u6709\u8bbe\u7f6e\u5e03\u5c40\uff0c\u5219\u4f1a\u5411\u4e0a\u627e\u5230\u6700\u8fd1\u7684\u7956\u5148\u76ee\u5f55\uff0c\u5e76\u7ee7\u627f\u5176\u5e03\u5c40\u3002</p> <pre><code>$ getfattr -n ceph.dir.layout dir\n# file: dir\nceph.dir.layout=\"stripe_unit=4194304 stripe_count=4 object_size=4194304 pool=cephfs_data\"\n$ mkdir dir/childdir\n$ getfattr -n ceph.dir.layout dir/childdir\ndir/childdir: ceph.dir.layout: No such attribute\n$ touch dir/childdir/grandchild\n$ getfattr -n ceph.file.layout dir/childdir/grandchild\n# file: dir/childdir/grandchild\nceph.file.layout=\"stripe_unit=4194304 stripe_count=4 object_size=4194304 pool=cephfs_data\"\n</code></pre>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/file-layouts/#_1","title":"\u5411\u6587\u4ef6\u7cfb\u7edf\u6dfb\u52a0\u6570\u636e\u6c60","text":"<p>\u5728\u5c06\u5b58\u50a8\u6c60\u4e0e CephFS \u4e00\u8d77\u4f7f\u7528\u4e4b\u524d\uff0c\u5fc5\u987b\u5c06\u5176\u6dfb\u52a0\u5230\u5143\u6570\u636e\u670d\u52a1\u5668\u3002</p> <p><pre><code>$ ceph fs add_data_pool cephfs cephfs_data_ssd\n$ ceph fs ls  # Pool should now show up\n.... data pools: [cephfs_data cephfs_data_ssd ]\n</code></pre> \u786e\u4fdd\u60a8\u7684 cephx \u5bc6\u94a5\u5141\u8bb8\u5ba2\u6237\u7aef\u8bbf\u95ee\u6b64\u65b0\u6c60\u3002</p> <p>\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u66f4\u65b0 CephFS \u4e2d\u76ee\u5f55\u4e0a\u7684\u5e03\u5c40\uff0c\u4ee5\u4f7f\u7528\u60a8\u6dfb\u52a0\u7684\u5b58\u50a8\u6c60\uff1a</p> <pre><code>$ mkdir /mnt/cephfs/myssddir\n$ setfattr -n ceph.dir.layout.pool -v cephfs_data_ssd /mnt/cephfs/myssddir\n</code></pre> <p>\u5728\u8be5\u76ee\u5f55\u4e2d\u521b\u5efa\u7684\u6240\u6709\u65b0\u6587\u4ef6\u73b0\u5728\u90fd\u5c06\u7ee7\u627f\u5176\u5e03\u5c40\u5e76\u5c06\u5176\u6570\u636e\u653e\u5165\u65b0\u6dfb\u52a0\u7684\u6c60\u4e2d\u3002</p> <p>\u60a8\u53ef\u80fd\u4f1a\u6ce8\u610f\u5230\uff0c\u4e3b\u6570\u636e\u6c60\uff08\u4f20\u9012\u7ed9 fs new \u7684\u6570\u636e\u6c60\uff09\u4e2d\u7684\u5bf9\u8c61\u8ba1\u6570\u7ee7\u7eed\u589e\u52a0\uff0c\u5373\u4f7f\u60a8\u6dfb\u52a0\u7684\u6c60\u4e2d\u6b63\u5728\u521b\u5efa\u6587\u4ef6\u4e5f\u662f\u5982\u6b64\u3002\u8fd9\u662f\u6b63\u5e38\u7684\uff1a\u6587\u4ef6\u6570\u636e\u5b58\u50a8\u5728\u5e03\u5c40\u6307\u5b9a\u7684\u6c60\u4e2d\uff0c\u4f46\u6240\u6709\u6587\u4ef6\u90fd\u5728\u4e3b\u6570\u636e\u6c60\u4e2d\u90fd\u4fdd\u7559\u4e86\u5c11\u91cf\u5143\u6570\u636e\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/lazyio/","title":"\u60f0\u6027 IO","text":"<p>LazyIO \u653e\u5bbd\u4e86 POSIX \u8bed\u4e49\u3002\u5373\u4f7f\u6587\u4ef6\u7531\u591a\u4e2a\u5ba2\u6237\u7aef\u4e0a\u7684\u591a\u4e2a\u5e94\u7528\u7a0b\u5e8f\u6253\u5f00\uff0c\u4e5f\u5141\u8bb8\u7f13\u51b2\u8bfb/\u5199\u3002\u5e94\u7528\u7a0b\u5e8f\u8d1f\u8d23\u7ba1\u7406\u7f13\u5b58\u4e00\u81f4\u6027\u672c\u8eab\u3002</p> <p>Libcephfs \u4ece nautilus \u7248\u672c\u5f00\u59cb\u652f\u6301 LazyIO\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/lazyio/#lazyio","title":"\u542f\u7528 LazyIO","text":"<p>LazyIO \u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u542f\u7528\uff1a</p> <ul> <li> <p><code>client_force_lazyio</code> \u9009\u9879\u4e3a libcephfs \u548c ceph-fuse \u6302\u8f7d\u542f\u7528\u5168\u5c40 LAZY_IO\u3002</p> </li> <li> <p><code>ceph_lazyio(...)</code> \u4ee5\u53ca <code>ceph_ll_lazyio(...)</code> \u4e3a libcephfs \u4e2d\u7684\u6587\u4ef6\u53e5\u67c4\u542f\u7528 LAZY_IO\u3002</p> </li> </ul>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/lazyio/#_1","title":"\u4f7f\u7528","text":"<p>LazyIO \u5305\u62ec\u4e24\u4e2a\u65b9\u6cd5 <code>lazyio_propagate()</code> \u548c <code>lazyio_synchronize()</code>\u3002 \u542f\u7528 LazyIO \u540e\uff0c\u5176\u4ed6\u5ba2\u6237\u7aef\u53ef\u80fd\u65e0\u6cd5\u770b\u5230\u5199\u5165\u64cd\u4f5c\uff0c\u76f4\u5230\u8c03\u7528 <code>lazyio_propagate()</code> \u3002\u8bfb\u64cd\u4f5c\u53ef\u80fd\u6765\u81ea\u672c\u5730\u7f13\u5b58\uff08\u65e0\u8bba\u5176\u4ed6\u5ba2\u6237\u7aef\u5982\u4f55\u66f4\u6539\u6587\u4ef6\uff09\uff0c\u76f4\u5230\u8c03\u7528 <code>lazyio_synchronize()</code>\u3002</p> <ul> <li> <p><code>lazyio_propagate(int fd, loff_t offset, size_t count)</code>     \u786e\u4fdd\u7279\u5b9a\u533a\u57df\uff08\u504f\u79fb\u91cf\u5230 offset+count\uff09\u4e2d\u5ba2\u6237\u7aef\u7684\u4efb\u4f55\u7f13\u51b2\u5199\u5165\u90fd\u5df2\u4f20\u64ad\u5230\u5171\u4eab\u6587\u4ef6\u3002\u5982\u679coffset \u548c count \u5747\u4e3a 0\uff0c\u5219\u5bf9\u6574\u4e2a\u6587\u4ef6\u6267\u884c\u8be5\u64cd\u4f5c\u3002\u76ee\u524d\u4ec5\u652f\u6301\u6b64\u529f\u80fd\u3002</p> </li> <li> <p><code>lazyio_synchronize(int fd, loff_t offset, size_t count)</code>     \u786e\u4fdd\u5ba2\u6237\u7aef\u5728\u540e\u7eed\u8bfb\u53d6\u8c03\u7528\u4e2d\u80fd\u591f\u8bfb\u53d6\u66f4\u65b0\u7684\u6587\u4ef6\u4ee5\u53ca\u5176\u4ed6\u5ba2\u6237\u7aef\u7684\u6240\u6709\u4f20\u64ad\u5199\u5165\u3002\u5728 CephFS \u4e2d\uff0c\u8fd9\u662f\u901a\u8fc7\u4f7f\u4e0e inode \u76f8\u5173\u7684\u6587\u4ef6\u7f13\u5b58\u65e0\u6548\u6765\u5b9e\u73b0\u7684\uff0c\u56e0\u6b64\u4f1a\u5f3a\u5236\u5ba2\u6237\u7aef\u4ece\u66f4\u65b0\u7684\u6587\u4ef6\u4e2d\u91cd\u65b0\u83b7\u53d6/\u91cd\u65b0\u7f13\u5b58\u6570\u636e\u3002\u6b64\u5916\uff0c\u5982\u679c\u8c03\u7528\u5ba2\u6237\u7aef\u7684\u5199\u7f13\u5b58\u662f\u810f\u7684\uff08\u672a\u4f20\u64ad\uff09\uff0c<code>lazyio_synchronize()</code> \u4e5f\u4f1a\u5237\u65b0\u5b83\u3002</p> </li> </ul> <p>\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u793a\u4f8b\u7528\u6cd5\uff08\u4f7f\u7528 <code>libcephfs</code>\uff09\u3002\u8fd9\u662f\u5e76\u884c\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7279\u5b9a\u5ba2\u6237\u7aef/\u6587\u4ef6\u63cf\u8ff0\u7b26\u7684\u793a\u4f8b I/O \u5faa\u73af\uff1a</p> <pre><code>/* Client a (ca) opens the shared file file.txt */\nint fda = ceph_open(ca, \"shared_file.txt\", O_CREAT|O_RDWR, 0644);\n\n/* Enable LazyIO for fda */\nceph_lazyio(ca, fda, 1));\n\nfor(i = 0; i &lt; num_iters; i++) {\n    char out_buf[] = \"fooooooooo\";\n\n    ceph_write(ca, fda, out_buf, sizeof(out_buf), i);\n    /* Propagate the writes associated with fda to the backing storage*/\n    ceph_propagate(ca, fda, 0, 0);\n\n    /* The barrier makes sure changes associated with all file descriptors\n    are propagated so that there is certainty that the backing file\n    is up to date */\n    application_specific_barrier();\n\n    char in_buf[40];\n    /* Calling ceph_lazyio_synchronize here will ascertain that ca will\n    read the updated file with the propagated changes and not read\n    stale cached data */\n    ceph_lazyio_synchronize(ca, fda, 0, 0);\n    ceph_read(ca, fda, in_buf, sizeof(in_buf), 0);\n\n    /* A barrier is required here before returning to the next write\n    phase so as to avoid overwriting the portion of the shared file still\n    being read by another file descriptor */\n    application_specific_barrier();\n}\n</code></pre>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mdcache/","title":"CEPHFS\uff1a\u5206\u5e03\u5f0f\u5143\u6570\u636e\u7f13\u5b58","text":"<p>\u867d\u7136\u5728CephFS\u4e2d\uff0cinode\u5173\u8054\u7684\u6587\u4ef6\u6570\u636e\u4ee5Rados\u5bf9\u8c61\u7684\u5f62\u5f0f\u4fdd\u5b58\u5728RADOS\u5e95\u5ea7\u4e2d\uff0c\u5ba2\u6237\u7aef\u53ef\u76f4\u63a5\u8bbf\u95eeosd\u83b7\u53d6\u6570\u636e\uff0c\u4f46inode\u5bf9\u5e94\u7684\u5143\u6570\u636e\u548c\u76ee\u5f55\u4fe1\u606f\u7531MDS\u7ba1\u7406,MDS\u5145\u5f53\u6240\u6709\u5143\u6570\u636e\u76f8\u5173\u64cd\u4f5c\u7684\u5a92\u4ecb\u3002MDS \u5c06\u5143\u6570\u636e\u4e0e\u6587\u4ef6\u6570\u636e\u5206\u79bb\u5b58\u50a8\u5728\u5355\u72ec\u7684RADOS\u6c60\u4e2d\u3002</p> <p>CephFS\u5ba2\u6237\u7aef\u53ef\u4ee5\u4e3b\u52a8\u5411MDS\u8bf7\u6c42\u6743\u9650\u6765\u83b7\u53d6\u6216\u66f4\u6539inode\u5143\u6570\u636e\uff0cMDS\u4e5f\u53ef\u4ee5\u5c06inode\u7684\u6743\u9650\u4e3b\u52a8\u6388\u6743\u7ed9\u5ba2\u6237\u7aef\uff0c\u8fd9\u91cc\u7684\u6743\u9650\u5728MDS\u4e2d\u4ee5Caps\u7684\u5f62\u5f0f\u8868\u793a\uff0c\u5b83\u662f\u4e00\u79cd\u66f4\u4e3a\u7cbe\u7ec6\u548c\u590d\u6742\u7684\u6743\u9650\u7ba1\u7406\u673a\u5236\u3002</p> <p>\u83b7\u53d6Caps\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u7f13\u5b58\u6216\u4fee\u6539\u5bf9\u5e94inode\u7684\u6570\u636e\u6216\u5143\u6570\u636e\uff0c\u5f53\u53e6\u4e00\u4e2a\u5ba2\u6237\u7aef\u9700\u8981\u8bbf\u95ee\u76f8\u540c\u7684\u4fe1\u606f\u65f6\uff0cMDS\u4f1a\u5411\u5ba2\u6237\u7aef\u6536\u56deCaps\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u5f52\u8fd8Caps\u5e76\u5c06\u4ed6\u5728\u6301\u6709Caps\u671f\u95f4\u7684\u4fee\u6539\u63d0\u4ea4\u7ed9MDS\u3002</p> <p>\u5ba2\u6237\u7aef\u5bf9\u4e8eCaps\u7684\u8bf7\u6c42\u901a\u5e38\u4f1a\u6210\u529f\uff0c\u4f46\u5728\u5b58\u5728\u8bbf\u95ee\u7ade\u4e89\u6216\u8005MDS\u7684\u5185\u5b58\u538b\u529b\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u8bf7\u6c42\u53ef\u80fd\u4f1a\u88ab\u62d2\u7edd\u6216\u56de\u6536\u3002\u5f53MDS\u5411\u5ba2\u6237\u7aef\u53d1\u9001Caps\u6536\u56de\u8bf7\u6c42\u65f6\uff0c\u5ba2\u6237\u7aef\u9700\u8981\u5c3d\u5feb\u5f52\u8fd8Caps\uff0c\u5426\u5219\u5c06\u4f1a\u88ab\u52a0\u5165blacklist\uff0c\u5728\u4e00\u5b9a\u65f6\u95f4\u5185\u65e0\u6cd5\u4e0eCephFS\u96c6\u7fa4\u901a\u4fe1\u3002</p> <p>\u7531\u4e8e\u5143\u6570\u636e\u7684\u7f13\u5b58\u662f\u5206\u5e03\u5f0f\u7684\uff0cMDS\u5fc5\u987b\u975e\u5e38\u8c28\u614e\u7684\u786e\u4fdd\u5ba2\u6237\u7aef\u4e4b\u95f4\u4e0d\u4f1a\u5b58\u5728\u51b2\u7a81\u3002\u8fd9\u4f7f\u5f97CephFS\u5ba2\u6237\u7aef\u80fd\u591f\u4f9d\u8d56\u4e0e\u6bd4NFS\u66f4\u9ad8\u7684\u7f13\u5b58\u4e00\u81f4\u6027\uff0c\u5728NFS\u4e2d\uff0c\u5ba2\u6237\u7aef\u53ef\u80fd\u4f1a\u7f13\u5b58\u5728\u670d\u52a1\u7aef\u5df2\u7ecf\u88ab\u4fee\u6539\u7684\u6570\u636e\u548c\u5143\u6570\u636e\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mdcache/#_1","title":"\u5ba2\u6237\u7aef\u5143\u6570\u636e\u8bf7\u6c42","text":"<p>\u5f53\u4e00\u4e2a\u5ba2\u6237\u7aef\u9700\u8981\u67e5\u8be2\u548c\u4fee\u6539inode\u7684\u5143\u6570\u636e\u6216\u8005\u64cd\u4f5c\u4e00\u4e2a\u76ee\u5f55\u65f6\uff0c\u5b83\u6709\u5982\u4e0b\u4e24\u79cd\u65b9\u5f0f\u8fbe\u5230\u76ee\u7684\uff1a</p> <ul> <li>\u5411MDS\u76f4\u63a5\u53d1\u8d77\u8bf7\u6c42\u3002</li> <li>\u6839\u636e\u81ea\u8eab\u7684\u7f13\u5b58\u76f4\u63a5\u5904\u7406\u3002</li> </ul> <p>\u5728CephFS\u4e2d\uff0c\u7b2c\u4e8c\u79cd\u65b9\u5f0f\u53ea\u5728\u5ba2\u6237\u7aef\u6301\u6709\u5bf9\u5e94\u7684Caps\u65f6\u624d\u53ef\u80fd\u53d1\u751f\u3002</p> <p>\u5ba2\u6237\u7aef\u53ef\u4ee5\u5411 MDS \u53d1\u9001\u7b80\u5355\u7684\u8bf7\u6c42\uff0c\u4ee5\u67e5\u8be2\u6216\u66f4\u6539\u67d0\u4e9b\u5143\u6570\u636e\u3002MDS\u5bf9\u8fd9\u4e9b\u8bf7\u6c42\u7684\u56de\u590d\u8fd8\u53ef\u4ee5\u5411\u5ba2\u6237\u7aef\u6388\u4e88 inode \u7684\u7279\u5b9a\u7684Caps\uff0c\u4ece\u800c\u5141\u8bb8\u5b83\u6267\u884c\u540e\u7eed\u8bf7\u6c42\u800c\u65e0\u9700\u8bbf\u95ee MDS\u3002</p> <p>\u5ba2\u6237\u7aef\u8fd8\u53ef\u4ee5\u76f4\u63a5\u4ece MDS \u8bf7\u6c42Caps\uff0c\u8fd9\u5bf9\u4e8e\u8bfb\u53d6\u6216\u5199\u5165\u6587\u4ef6\u6570\u636e\u662f\u5fc5\u9700\u7684\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mdcache/#mds","title":"MDS\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u9501","text":"<p>\u5f53 MDS \u60f3\u8981\u8bfb\u53d6\u6216\u66f4\u6539\u6709\u5173 inode \u7684\u4fe1\u606f\u65f6\uff0c\u5b83\u5fc5\u987b\u4e3a\u5176\u6536\u96c6\u9002\u5f53\u7684\u9501\u3002MDS \u7fa4\u96c6\u5728\u7ed9\u5b9a inode \u4e0a\u53ef\u80fd\u5177\u6709\u4e00\u7cfb\u5217\u4e0d\u540c\u7c7b\u578b\u7684\u9501\uff0c\u5e76\u4e14\u6bcf\u4e2a MDS \u53ef\u80fd\u5177\u6709\u4e0d\u76f8\u4ea4\u7684\u9501\u96c6\u3002</p> <p>\u5982\u679c\u5b58\u5728\u4e0e\u8fd9\u4e9b\u9501\u51b2\u7a81\u7684\u672a\u56de\u6536\u7684 Caps\uff0c\u5219MDS\u5fc5\u987b\u5148\u64a4\u9500\u8fd9\u4e9b Caps\uff0c\u7136\u540e\u624d\u80fd\u83b7\u53d6\u9501\u3002\u4e00\u65e6\u5b58\u5728\u51b2\u7a81\u7684 Caps \u8fd4\u56de\u7ed9 MDS\uff0c\u5b83\u5c31\u53ef\u4ee5\u83b7\u53d6\u9501\u5e76\u6267\u884c\u540e\u7eed\u8bf7\u6c42\u3002</p> <p>\u5728\u7531\u591a\u4e2a MDS \u63d0\u4f9b\u670d\u52a1\u7684\u6587\u4ef6\u7cfb\u7edf\u4e0a\uff0c\u5143\u6570\u636e\u7f13\u5b58\u4e5f\u5206\u5e03\u5728\u96c6\u7fa4\u4e2d\u7684 MDS \u4e4b\u95f4\u3002\u5bf9\u4e8e\u6bcf\u4e2a inode\uff0c\u5728\u4efb\u4f55\u7ed9\u5b9a\u65f6\u95f4\uff0c\u96c6\u7fa4\u4e2d\u53ea\u6709\u4e00\u4e2a MDS \u88ab\u89c6\u4e3a\u6743\u5a01 MDS\u3002\u66f4\u6539\u8be5 inode \u7684\u4efb\u4f55\u8bf7\u6c42\u90fd\u5fc5\u987b\u7531\u6743\u5a01 MDS \u5b8c\u6210\uff0c\u4f46\u975e\u6743\u5a01 MDS \u53ef\u4ee5\u5c06\u8bf7\u6c42\u8f6c\u53d1\u5230\u6743\u5a01 MDS\u3002</p> <p>\u975e\u6743\u5a01 MDS \u8fd8\u53ef\u4ee5\u83b7\u53d6\u8bfb\u53d6\u9501\uff0c\u4ee5\u9632\u6b62\u6743\u5a01 MDS \u5728\u9501\u88ab\u5220\u9664\u4e4b\u524d\u66f4\u6539\u6570\u636e\uff0c\u4ee5\u4fbf\u5b83\u4eec\u53ef\u4ee5\u5411\u5ba2\u6237\u7aef\u63d0\u4f9b inode \u4fe1\u606f\u3002</p> <p>inode \u7684\u6743\u5a01 MDS \u4e5f\u4f1a\u968f\u65f6\u95f4\u800c\u53d8\u5316\u3002MDS\u96c6\u7fa4\u4f1a\u4e3b\u52a8\u5e73\u8861\u5bf9 inode \u7f13\u5b58\u7684\u8d23\u4efb\u3002\u8be5\u884c\u4e3a\u53ef\u4ee5\u901a\u8fc7\u5c06\u67d0\u4e9b\u5b50\u6811\u56fa\u5b9a\u5230\u5355\u4e2a MDS \u6765\u8986\u76d6\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-journaling/","title":"MDS Journal","text":""},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-journaling/#cephfs","title":"CEPHFS\u5143\u6570\u636e\u6c60","text":"<p>CephFS\u4f7f\u7528\u4e00\u4e2a\u4e0e\u6570\u636e\u6c60\u9694\u79bb\u7684\u5b58\u50a8\u6c60\u6765\u7ba1\u7406\u6587\u4ef6\u7cfb\u7edf\u7684\u5143\u6570\u636e\uff08inodes\u548cdentries\uff09\uff0c\u8be5\u5143\u6570\u636e\u6c60\u5305\u542b\u6587\u4ef6\u7cfb\u7edf\u5c42\u7ea7\u5173\u7cfb\u5728\u5185\u7684\u6240\u6709\u6587\u4ef6\u5143\u4fe1\u606f\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u8fd8\u4fdd\u5b58\u4e00\u4e9b\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5176\u4ed6\u90e8\u5206\u76f8\u5173\u8054\u7684\u5143\u6570\u636e\uff0c\u4f8b\u5982\u5bf9\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c\u7684\u65e5\u5fd7\u8bb0\u5f55\u3001\u6253\u5f00\u6587\u4ef6\u53e5\u67c4\u8868\u3001\u5ba2\u6237\u7aef\u94fe\u63a5session\u8868\u7b49\u5185\u5bb9\u3002</p> <p>\u672c\u6587\u6863\u63cf\u8ff0\u4e86MDS\u5982\u4f55\u4f7f\u7528\u548c\u56de\u653e\u5143\u6570\u636e\u7684Journal\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-journaling/#journal","title":"Journal\u8bb0\u5f55","text":"<p>MDS\u5728\u6267\u884c\u6587\u4ef6\u5143\u6570\u636e\u64cd\u4f5c\u4e4b\u524d\uff0c\u4f1a\u5c06\u5bf9\u5e94\u7684\u5143\u6570\u636e\u64cd\u4f5c\u4e8b\u4ef6\u4ee5RADOS\u5bf9\u8c61\u7684\u5f62\u5f0f\u6d41\u5f0f\u4f20\u8f93\u5230\u5143\u6570\u636e\u6c60\u4e2d\u3002CephFS\u4e2d\uff0c\u7531\u5904\u4e8eActive\u72b6\u6001\u7684MDS\u8fdb\u7a0b\u7ba1\u7406\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5143\u6570\u636e\u3002</p> <p>CephFS\u4f7f\u7528Journal\u529f\u80fd\u57fa\u4e8e\u4ee5\u4e0b\u7406\u7531\uff1a</p> <ol> <li> <p>\u4e00\u81f4\u6027\uff1a \u5728MDS\u6545\u969c\u8f6c\u79fb\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u91cd\u653eJournal\u4e2d\u7684\u64cd\u4f5c\u4e8b\u4ef6\u6765\u4f7f\u6587\u4ef6\u7cfb\u7edf\u7684\u72b6\u6001\u8fbe\u5230\u4e00\u81f4\u3002\u53e6\u5916\uff0c\u8bb0\u5f55\u5bf9\u5143\u6570\u636e\u5b58\u50a8\u8fdb\u884c\u591a\u6b21\u66f4\u65b0\u7684\u590d\u6742\u64cd\u4f5c\u7684\u64cd\u4f5c\u4e8b\u4ef6\uff0c\u4ee5\u4fdd\u8bc1\u5d29\u6e83\u4e00\u81f4\u6027\uff08\u4ee5\u53ca\u5176\u4ed6\u4e00\u81f4\u6027\uff0c\u4f8b\u5982\u9501\u7b49\uff09\u3002</p> </li> <li> <p>\u6027\u80fd\uff1aJournal\u7684\u5199\u5165\u662f\u987a\u5e8f\u7684\uff0c\u56e0\u6b64\u8be5\u64cd\u4f5c\u7684\u901f\u5ea6\u5f88\u5feb\u3002\u53e6\u5916\uff0c\u53ef\u4ee5\u5c06\u66f4\u65b0\u4e8b\u4ef6\u5408\u5e76\u5230\u4e00\u6b21\u65e5\u5fd7\u5199\u5165\u4e2d,\u4ece\u800c\u8282\u7701\u66f4\u65b0\u6587\u4ef6\u4e0d\u540c\u90e8\u5206\u6240\u6d89\u53ca\u7684\u78c1\u76d8\u67e5\u627e\u4e8b\u4ef6\u3002Journal\u540c\u6837\u6709\u5229\u4e8e\u5907\u7528MDS\u8fdb\u884c\u7f13\u5b58\u7684\u9884\u70ed\uff0c\u8fd9\u5728MDS\u6545\u969c\u8f6c\u79fb\u5feb\u901f\u6062\u590d\u65f6\u63d0\u4f9b\u4e00\u5b9a\u7684\u5e2e\u52a9\u3002</p> </li> </ol> <p>\u6bcf\u4e2aActive\u7684MDS\u5728\u5143\u6570\u636e\u6c60\u4e2d\u7ef4\u62a4\u81ea\u8eab\u7684Journal\u65e5\u5fd7\u3002Journal\u65e5\u5fd7\u88ab\u6761\u5e26\u5316\u4e3a\u591a\u4e2aRados\u5bf9\u8c61\u3002\u8fc7\u671f\u7684Journal\u6761\u76ee\u5c06\u4f1a\u5728\u5408\u9002\u7684\u65f6\u673a\u88ab\u5220\u9664\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-journaling/#journal_1","title":"Journal \u4e8b\u4ef6","text":"<p>\u9664\u4e86\u8bb0\u5f55\u6587\u4ef6\u7cfb\u7edf\u5143\u6570\u636e\u66f4\u65b0\uff0cCephFS Journal \u8fd8\u8bb0\u5f55\u4e86\u5176\u5b83\u5404\u79cd\u4e8b\u4ef6\uff0c\u4f8b\u5982\u5ba2\u6237\u7aef\u4f1a\u8bdd\u4fe1\u606f\u548c\u76ee\u5f55\u5bfc\u5165\u3001\u5bfc\u51fa\u72b6\u6001\u7b49\u3002\u8fd9\u4e9b\u4e8b\u4ef6\u88ab MDS \u7528\u6765\u6839\u636e\u9700\u8981\u91cd\u65b0\u5efa\u7acb\u6b63\u786e\u7684\u72b6\u6001\uff0c\u4f8b\u5982\uff0c\u901a\u8fc7\u91cd\u653eJournal\u4e8b\u4ef6\uff0c\u5982\u679c\u5b58\u5728\u7279\u5b9a\u4e8b\u4ef6\u7c7b\u578b\u6307\u5b9a\u4e86\u4e00\u4e2a\u5ba2\u6237\u7aef\u5728MDS \u91cd\u542f\u4e4b\u524d\u4e0e\u5176\u5efa\u7acb\u4e86\u4f1a\u8bdd\uff0c\u5219 MDS \u5728\u91cd\u542f\u65f6\u4f1a\u5c1d\u8bd5\u91cd\u65b0\u8fde\u63a5\u8be5\u5ba2\u6237\u7aef,</p> <p>\u4e3a\u4e86\u68c0\u67e5\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u7684\u6b64\u7c7b\u4e8b\u4ef6\u7684\u5217\u8868\uff0cCephFS \u63d0\u4f9b\u4e86\u4e00\u4e2a\u547d\u4ee4\u884c\u5b9e\u7528\u7a0b\u5e8f cephfs-journal-tool\uff0c\u5176\u4f7f\u7528\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <p><pre><code>cephfs-journal-tool --rank=&lt;fs&gt;:&lt;rank&gt; event get list\n</code></pre> cephfs-journal-tool \u8fd8\u7528\u4e8e\u53d1\u73b0\u548c\u4fee\u590d\u635f\u574f\u7684 Ceph \u6587\u4ef6\u7cfb\u7edf\u3002\uff08\u6709\u5173\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\uff0c\u8bf7\u53c2\u9605  cephfs-journal-tool\uff09</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-journaling/#journal_2","title":"Journal \u4e8b\u4ef6\u7c7b\u578b","text":"<p>\u4ee5\u4e0b\u662fMDS\u8bb0\u5f55\u7684\u5404\u7c7b\u64cd\u4f5c\u4e8b\u4ef6\u7c7b\u578b\uff1a</p> <ol> <li>EVENT_COMMITTED: \u5c06\u8bf7\u6c42(id)\u6807\u8bb0\u4e3a\u5df2\u63d0\u4ea4\u3002</li> <li>EVENT_EXPORT\uff1a\u5c06\u76ee\u5f55\u6620\u5c04\u5230 MDS Rank\u3002</li> <li>EVENT_FRAGMENT\uff1a\u8ddf\u8e2a\u76ee\u5f55\u5206\u7247\uff08\u62c6\u5206/\u5408\u5e76\uff09\u7684\u5404\u4e2a\u9636\u6bb5</li> <li>EVENT_IMPORTSTART\uff1a\u5f53 MDS Rank\u5f00\u59cb\u5bfc\u5165\u76ee\u5f55\u5206\u7247\u65f6\u8bb0\u5f55\u3002</li> <li>EVENT_IMPORTFINISH\uff1a\u5f53 MDS Rank\u5b8c\u6210\u5bfc\u5165\u76ee\u5f55\u5206\u7247\u65f6\u8bb0\u5f55\u3002</li> <li>EVENT_NOOP\uff1a\u7528\u4e8e\u8df3\u8fc7\u65e5\u5fd7\u533a\u57df\u7684\u7a7a\u64cd\u4f5c\u4e8b\u4ef6\u7c7b\u578b\u3002</li> <li>EVENT_OPEN\uff1a\u8ddf\u8e2a\u54ea\u4e9b inode \u5177\u6709\u6253\u5f00\u7684\u6587\u4ef6\u53e5\u67c4\u3002</li> <li>EVENT_RESETJOURNAL\uff1aUsed to mark a journal as reset post truncation.</li> <li>EVENT_SESSION: \u8ddf\u8e2a\u6253\u5f00\u7684\u5ba2\u6237\u7aefSession\u3002</li> <li>EVENT_SLAVEUPDATE: \u8bb0\u5f55\u5df2\u8f6c\u53d1\u5230\uff08\u4ece\u5c5e\uff09mds \u7684\u64cd\u4f5c\u7684\u5404\u4e2a\u9636\u6bb5\u3002</li> <li>EVENT_SUBTREEMAP\uff1a\u76ee\u5f55 inode \u5230\u76ee\u5f55\u5185\u5bb9\uff08\u5b50\u6811\u5206\u533a\uff09\u7684\u6620\u5c04\u3002</li> <li>EVENT_TABLECLIENT: Log transition states of MDSs view of client tables (snap/anchor).</li> <li>EVENT_TABLESERVER: Log transition states of MDSs view of server tables (snap/anchor).</li> <li>EVENT_UPDATE\uff1a\u5bf9 inode \u6267\u884c\u64cd\u4f5c\u65e5\u5fd7\u6587\u4ef6\u3002</li> <li>EVENT_SEGMENT\uff1a\u8bb0\u5f55\u65b0\u7684Journal\u6bb5\u8fb9\u754c\u3002</li> <li>EVENT_LID\uff1a\u6807\u8bb0\u6ca1\u6709\u903b\u8f91\u5b50\u6811\u6620\u5c04\u7684\u65e5\u5fd7\u7684\u5f00\u5934\u3002</li> </ol>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-journaling/#journal_3","title":"Journal\u6bb5","text":"<p>MDS\u7684Journal\u6709\u591a\u4e2a\u903b\u8f91\u6bb5\u7ec4\u6210\uff0c\u5728\u4ee3\u7801\u4e2d\u88ab\u79f0\u4e3aLogSegment\u3002\u8fd9\u4e9b\u6bb5\u7528\u4e8e\u5c06\u5143\u6570\u636e\u66f4\u65b0\u7684\u591a\u4e2a\u4e8b\u4ef6\u7ec4\u5408\u6210\u4e00\u4e2a\u903b\u8f91\u5355\u5143\uff0cJournal\u4fee\u526a\u4ee5\u8fd9\u6837\u7684\u4e00\u4e2a\u903b\u8f91\u5355\u5143\u8fdb\u884c\u3002\u6bcf\u5f53MDS\u5c1d\u8bd5\u63d0\u4ea4\u5143\u6570\u636e\u64cd\u4f5c\uff08\u4f8b\u5982\u5c06\u6587\u4ef6\u521b\u5efa\u4f5c\u4e3aomap\u66f4\u65b0\u5230dirfrag\u5bf9\u8c61\uff09\u65f6\uff0c\u5b83\u4f1a\u5728\u4e00\u7cfb\u5217\u66f4\u65b0\u5143\u6570\u636e\u5bf9\u8c61\u7684\u8fc7\u7a0b\u4e2d\u4ee5\u53ef\u56de\u653e\u7684\u6279\u91cf\u66f4\u65b0\u65b9\u5f0f\u6267\u884c\u8fd9\u4e9b\u66f4\u65b0\u3002\u66f4\u65b0\u5fc5\u987b\u662f\u53ef\u56de\u653e\u7684\uff0c\u4ee5\u9632MDS\u5728\u5bf9\u4e0d\u540c\u7684\u5143\u6570\u636e\u5bf9\u8c61\u7684\u4e00\u7cfb\u5217\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u5d29\u6e83\u3002\u901a\u8fc7\u6279\u91cf\u66f4\u65b0\u7684\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5c06\u5bf9\u540c\u4e00\u4e2a\u5143\u6570\u636e\u5bf9\u8c61\u7684\u591a\u4e2a\u66f4\u65b0\u5408\u5e76\u5230\u4e00\u4e2a\u66f4\u65b0\u4e2d\uff08dirfrag\uff09\uff0c\u5176\u4e2d\u591a\u4e2aomap\u6761\u76ee\u53ef\u80fd\u5728\u540c\u4e00\u65f6\u95f4\u6bb5\u5185\u88ab\u66f4\u65b0\u3002</p> <p>\u5f53\u4e00\u4e2aJournal\u903b\u8f91\u6bb5\u88abtrim\u540e\uff0c\u5b83\u88ab\u6807\u8bb0\u4e3a\"\u8fc7\u671f\u7684\"\u3002\u8fc7\u671f\u7684Journal\u6bb5\u53ef\u4ee5\u88abjournaler\u5b89\u5168\u7684\u5220\u9664\uff0c\u56e0\u4e3a\u5176\u6240\u6709\u5143\u6570\u636e\u66f4\u65b0\u64cd\u4f5c\u90fd\u5df2\u7ecf\u88ab\u6301\u4e45\u5316\u5230\u5bf9\u5e94\u7684RADOS\u5bf9\u8c61\u4e2d\u3002\u901a\u8fc7\u66f4\u65b0journaler\u7684\"expire position\"\u6765\u5c06\u5bf9\u5e94\u7684\u8fc7\u671fJournal\u6bb5\u6807\u8bb0\u4e3a\u8fc7\u671f\u3002\u4e00\u4e9b\u8fc7\u671f\u7684Journal\u6bb5\u53ef\u80fd\u4f1a\u88ab\u4fdd\u7559\uff0c\u4ee5\u63d0\u9ad8MDS\u5728\u91cd\u542f\u65f6\u7684\u7f13\u5b58\u5c40\u90e8\u6027\u3002</p> <p>\u5728 CephFS \u7684\u5927\u90e8\u5206\u5386\u53f2\u4e2d\uff08\u76f4\u5230 2023 \u5e74\uff09\uff0cJournal Segment\u7531\u5b50\u6811\u6620\u5c04\uff08ESubtreeMap \u4e8b\u4ef6\uff09\u4e3a\u5206\u754c\u70b9\u3002\u8fd9\u6837\u505a\u7684\u4e3b\u8981\u539f\u56e0\u662f\uff0c\u5728\u91cd\u64ad\u4efb\u4f55\u5176\u4ed6\u4e8b\u4ef6\u4e4b\u524d\uff0cJournal\u6062\u590d\u5fc5\u987b\u4ece\u5b50\u6811 map \u7684\u526f\u672c\u5f00\u59cb\u3002</p> <p>\u73b0\u5728\uff0cJournal Segment\u53ef\u4ee5\u4ee5 <code>SegmentBoundary</code> \u7c7b\u7684\u4e8b\u4ef6\u4f5c\u4e3a\u8fb9\u754c\u70b9\u3002\u5305\u62ec <code>ESubtreeMap</code>\u3001<code>EResetJournal</code>\u3001<code>ESegment</code> \uff082023\uff09 \u6216 <code>ELid</code> \uff082023 \u5e74\uff09\u3002\u5bf9\u4e8e <code>ESegment</code>\uff0c\u8fd9\u79cd\u8f7b\u91cf\u7ea7\u7684 segment \u8fb9\u754c\u5141\u8bb8 MDS \u964d\u4f4e\u8bb0\u5f55\u5b50\u6811\u6620\u5c04\u7684\u9891\u7387\uff0c\u540c\u65f6\u4fdd\u6301\u65e5\u5fd7 segment \u8f83\u5c0f\u4ee5\u4fdd\u6301\u4fee\u526a\u4e8b\u4ef6\u7b80\u77ed\u3002\u4e3a\u4e86\u4fdd\u8bc1 journal \u91cd\u653e\u770b\u5230\u7684\u7b2c\u4e00\u4e2a\u4e8b\u4ef6\u662f <code>ESubtreeMap</code>\uff0c\u90a3\u4e9b\u4ee5\u8be5\u4e8b\u4ef6\u5f00\u5934\u7684 segment \u88ab\u8ba4\u4e3a\u662f \u201cmajor segments\u201d\uff0c\u5e76\u4e14\u4e3a\u5220\u9664\u8fc7\u671f\u7684 segment \u589e\u52a0\u4e86\u4e00\u4e2a\u9650\u5236\uff1aJournal\u7684\u7b2c\u4e00\u4e2a segment \u5fc5\u987b\u59cb\u7ec8\u662f major segment\u3002</p> <p><code>ELid</code> \u4e8b\u4ef6\u7684\u5b58\u5728\u662f\u4e3a\u4e86\u5c06 MDS \u65e5\u5fd7\u6807\u8bb0\u4e3a \u201cnew\u201d\uff0c\u5176\u4ed6\u64cd\u4f5c\u9700\u8981 LogSegment \u548c\u65e5\u5fd7\u5e8f\u5217\u53f7\u624d\u80fd\u7ee7\u7eed\uff0c\u5c24\u5176\u662f MDSTable \u64cd\u4f5c\u3002MDS \u5728\u521b\u5efa\u6392\u540d\u6216\u5173\u95edRank\u65f6\u4f7f\u7528\u6b64\u4e8b\u4ef6\u3002\u4ece\u6b64\u521d\u59cb\u72b6\u6001\u91cd\u653eRank\u65f6\uff0c\u4e0d\u9700\u8981\u5b50\u6811\u6620\u5c04\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-journaling/#_1","title":"\u914d\u7f6e","text":"<p>Journal\u5206\u6bb5\u7684\u5927\u5c0f\uff08\u4ee5\u4e8b\u4ef6\u6570\u91cf\u800c\u8a00\uff09\u7531\u4ee5\u4e0b\u53c2\u6570\u63a7\u5236\uff1a</p> <p><pre><code>mds_log_events_per_segment \n</code></pre>     MDS \u65e5\u5fd7\u6bb5\u4e2d\u7684\u6700\u5927\u4e8b\u4ef6\u6570</p> <pre><code>\u7c7b\u578b : uint\n\n\u9ed8\u8ba4\u503c : 1024\n\n\u6700\u5c0f\u503c : 1\n</code></pre> <p>\u81ea\u4e0a\u4e00\u4e2aMajor Segment \u4ee5\u6765\u7684 Minor mds \u65e5\u5fd7 Segment \u7684\u6570\u91cf\u7531\u4ee5\u4e0b\u53c2\u6570\u63a7\u5236\uff1a</p> <p><pre><code>mds_log_minor_segments_per_major_segment\n</code></pre>     The number of minor mds log segments since last major segment after which a major segment is started/logged.     \u81ea\u4e0a\u4e00\u4e2a\u4e3b\u8981\u5206\u6bb5\u4ee5\u6765\u7684\u6b21\u8981 mds \u65e5\u5fd7\u5206\u6bb5\u6570\uff0c\u5728\u6b64\u4e4b\u540e\u542f\u52a8/\u8bb0\u5f55\u4e3b\u8981\u5206\u6bb5\u3002</p> <pre><code>\u7c7b\u578b : uint\n\n\u9ed8\u8ba4\u503c : 16\n\n\u6700\u5c0f\u503c : 4\n</code></pre> <p>\u8be5\u53c2\u6570\u63a7\u5236 MDS \u4fee\u526a\u8fc7\u671f\u65e5\u5fd7\u6bb5\u7684\u9891\u7387\uff08\u503c\u8d8a\u9ad8\uff0cMDS \u66f4\u65b0\u65e5\u5fd7\u8fc7\u671f\u4f4d\u7f6e\u4ee5\u8fdb\u884c\u4fee\u526a\u7684\u9891\u7387\u8d8a\u4f4e\uff09\u3002</p> <p>\u6700\u5927Segment\u6570\u7531\u4ee5\u4e0b\u53c2\u6570\u63a7\u5236\uff1a</p> <p><pre><code>mds_log_max_segments\n</code></pre>     \u5f00\u59cb\u4fee\u526a\u4e4b\u524d\uff0c\u65e5\u5fd7\u4e2d\u7684\u6700\u5927\u6bb5 \uff08\u5bf9\u8c61\uff09 \u6570\u3002\u8bbe\u7f6e\u4e3a -1 \u53ef\u7981\u7528\u9650\u5236\u3002</p> <pre><code>\u7c7b\u578b : uint\n\n\u9ed8\u8ba4\u503c : 128\n\n\u6700\u5c0f\u503c : 8\n</code></pre> <p>The MDS will often sit a little above this number due to non-major segments  awaiting trimming up to the next major segment.</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/","title":"MDS \u72b6\u6001","text":"<p>\u5143\u6570\u636e\u670d\u52a1\u5668 \uff08MDS\uff09 \u5728 CephFS \u4e2d\u7684\u6b63\u5e38\u5de5\u4f5c\u671f\u95f4\u4f1a\u7ecf\u5386\u591a\u79cd\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u72b6\u6001\u6807\u8bc6 MDS \u6b63\u5728\u4eceMDS \u7684\u4e0a\u4e00\u4e2a\u5b9e\u4f8b\u7684\u6545\u969c\u8f6c\u79fb\u4e2d\u6062\u590d\u3002\u672c\u6587\u5c06\u8bb0\u5f55\u6240\u6709\u8fd9\u4e9b\u72b6\u6001\uff0c\u5e76\u901a\u8fc7\u4e00\u4e2a\u72b6\u6001\u56fe\u6765\u8bf4\u660e\u5404\u79cd\u72b6\u6001\u4e4b\u95f4\u7684\u8f6c\u6362\u5173\u7cfb\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_1","title":"\u72b6\u6001\u63cf\u8ff0","text":""},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_2","title":"\u5e38\u89c1\u72b6\u6001","text":"<pre><code>up:active\n</code></pre> <p>\u8fd9\u662fMDS\u7684\u6b63\u5e38\u8fd0\u884c\u72b6\u6001\uff0c\u8868\u793a MDS \u670d\u52a1\u53ca\u5176\u5728\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684 rank (1) \u53ef\u7528\u3002</p> <ol> <li>\u6bcf\u4e2a CephFS \u90fd\u6709\u51e0\u4e2a rank \uff0c\u9ed8\u8ba4\u662f\u4e00\u4e2a\uff0c\u4ece 0 \u8d77\u3002\u4e00\u4e2a rank \u53ef\u770b\u4f5c\u662f\u4e00\u4e2a\u5143\u6570\u636e\u5206\u7247\u3002\u6587\u4ef6\u7cfb\u7edf rank \u6570\u91cf\u7684\u63a7\u5236\u5728 \u591a\u6d3b MDS \u5b88\u62a4\u8fdb\u7a0b\u7684\u914d\u7f6e \u91cc\u8be6\u8ff0\u3002</li> </ol> <p><pre><code>up:standby\n</code></pre> \u5904\u4e8e\u8be5\u72b6\u6001\u7684 MDS \u53ef\u4ee5\u63a5\u7ba1\u5931\u8d25\u7684 Rank\u3002Mon \u4f1a\u81ea\u52a8\u5c06\u5931\u8d25\u7684 Rank \u5206\u914d\u7ed9\u5904\u4e8e\u8be5\u72b6\u6001\u7684MDS\u3002</p> <p><pre><code>up:standby_replay\n</code></pre> \u5904\u4e8e\u8be5\u72b6\u6001\u7684 MDS \u6b63\u5728\u8ddf\u8e2a\u53e6\u4e00\u4e2a\u5904\u4e8e <code>up:active</code> \u72b6\u6001\u7684MDS\u7684Journal\uff0c\u5982\u679c\u8ddf\u8e2a\u7684 MDS \u53d1\u751f\u6545\u969c\uff0c\u5219\u8be5 MDS \u53ef\u4ee5\u66f4\u5feb\u7684\u63a5\u7ba1\u670d\u52a1\u3002\u4f46\u4e5f\u5b58\u5728\u4e00\u5b9a\u7684\u7f3a\u70b9\uff1a\u5b83\u4eec\u4e0d\u80fd\u63a5\u7ba1\u9664\u8ddf\u8e2a\u7684 MDS \u4e4b\u5916\u7684\u6545\u969c MDS \u8fdb\u7a0b\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_3","title":"\u4e0d\u592a\u5e38\u89c1\u7684\u6216\u6682\u65f6\u7684\u72b6\u6001","text":"<p><pre><code>up:boot\n</code></pre> \u8be5\u72b6\u6001\u5728 MDS \u542f\u52a8\u671f\u95f4\u5e7f\u64ad\u5230 MON\u3002\u6b64\u72b6\u6001\u6c38\u8fdc\u4e0d\u4f1a\u5bf9\u5916\u53ef\u89c1\uff0c\u56e0\u4e3a MON \u4f1a\u7acb\u5373\u5c06 MDS \u5206\u914d\u7ed9\u53ef\u7528 Rank \u6216\u547d\u4ee4 MDS \u52a0\u5165 <code>standby</code> \u961f\u5217\u8fd0\u884c\u3002\u4f46\u4e3a\u4e86\u5b8c\u6574\u8d77\u89c1\uff0c\u6b64\u5904\u8bb0\u5f55\u4e86\u8be5\u72b6\u6001\u3002</p> <p><pre><code>up:creating\n</code></pre> \u8be5\u72b6\u6001\u8868\u793a MDS \u6b63\u5728\u4e3a\u4e00\u4e2a\u65b0\u7684 Rank\uff08\u53ef\u80fd\u662fRank0\uff09 \u521b\u5efa\u5143\u6570\u636e\uff08\u4f8b\u5982Journal\uff09\uff0c\u5e76\u52a0\u5165\u5230 MDS \u96c6\u7fa4\u3002 </p> <p><pre><code>up:starting\n</code></pre> \u8be5\u72b6\u6001\u8868\u793a MDS \u6b63\u5728\u91cd\u65b0\u542f\u52a8\u5df2\u505c\u6b62\u7684 Rank ,\u5b83\u5c06\u6253\u5f00 Rank \u5173\u8054\u7684\u5143\u6570\u636e\u5e76\u52a0\u5165MDS\u96c6\u7fa4\u3002</p> <p><pre><code>up:stopping\n</code></pre> \u5f53 Rank \u505c\u6b62\u65f6\uff0cMON \u547d\u4ee4\u5bf9\u4e8e\u7684Active MDS \u8fdb\u5165\u8be5\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0cMDS \u4e0d\u63a5\u53d7\u65b0\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u5c06\u6240\u6709\u8be5Rank\u5bf9\u4e8e\u7684\u5b50\u6811\u8fc1\u79fb\u5230\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u5176\u4ed6Rank\uff0c\u5237\u65b0\u5176\u5143\u6570\u636e\u65e5\u5fd7\uff0c\u5982\u679c\u662f\u6700\u540e\u4e00\u4e2a Rank (0)\uff0c\u5219\u5c06\u9a71\u9010\u6240\u6709\u5ba2\u6237\u7aef\u5e76\u5173\u95ed\uff08\u53e6\u8bf7\u53c2\u9605 CephFS \u7ba1\u7406\u547d\u4ee4\uff09\u3002</p> <p><pre><code>up:replay\n</code></pre> MDS \u63a5\u7ba1\u5931\u8d25\u7684Rank\u3002\u6b64\u72b6\u6001\u8868\u793a MDS \u6b63\u5728\u6062\u590d\u5176\u65e5\u5fd7\u548c\u5176\u4ed6\u5143\u6570\u636e\u3002</p> <p><pre><code>up:resolve\n</code></pre> \u5982\u679c Ceph \u6587\u4ef6\u7cfb\u7edf\u6709\u591a\u4e2a Rank\uff08\u5305\u62ec\u8fd9\u4e2aRank\uff09\uff0c\u5373\u5b83\u4e0d\u662f\u5355\u6d3b MDS \u96c6\u7fa4\uff0c\u5219 MDS \u4f1a\u4ece <code>up:replay</code> \u8fdb\u5165\u6b64\u72b6\u6001\u3002\u8868\u793aMDS \u6b63\u5728\u89e3\u51b3\u4efb\u4f55\u672a\u63d0\u4ea4\u7684 MDS \u64cd\u4f5c\u3002\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u6240\u6709 Rank \u90fd\u5fc5\u987b\u5904\u4e8e\u6b64\u72b6\u6001\u6216\u66f4\u9ad8\u72b6\u6001\u624d\u80fd\u8fdb\u884c\uff0c\u5373\u4efb\u4f55 Rank \u90fd\u4e0d\u80fd\u5931\u8d25/\u635f\u574f\u6216 <code>up:replay</code>\u3002</p> <p><pre><code>up:reconnect\n</code></pre> MDS \u4ece <code>up:replay</code> \u6216 <code>up:resolve</code> \u8fdb\u5165\u6b64\u72b6\u6001\u3002\u6b64\u72b6\u6001\u7528\u4e8e\u8bf7\u6c42\u5ba2\u6237\u7aef\u91cd\u65b0\u8fde\u63a5\u3002\u5728\u6b64\u671f\u95f4\uff0c\u4efb\u4f55\u5177\u6709\u6b64Rank\u4f1a\u8bdd\u7684\u5ba2\u6237\u7aef\u90fd\u5fc5\u987b\u91cd\u65b0\u8fde\u63a5\uff0c\u53ef\u901a\u8fc7 <code>mds_reconnect_timeout</code> \u8fdb\u884c\u914d\u7f6e\u3002</p> <p><pre><code>up:rejoin\n</code></pre> MDS \u4ece <code>up:reconnect</code> \u8fdb\u5165\u6b64\u72b6\u6001\u3002\u5728\u6b64\u72b6\u6001\u4e0b\uff0cMDS \u6b63\u5728\u91cd\u65b0\u52a0\u5165 MDS \u96c6\u7fa4\u7f13\u5b58\u3002\u7279\u522b\u662f\uff0c\u5143\u6570\u636e\u4e0a\u7684\u6240\u6709 MDS \u95f4\u9501\u90fd\u4f1a\u91cd\u65b0\u5efa\u7acb\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u8981\u91cd\u653e\u7684\u5df2\u77e5\u5ba2\u6237\u7aef\u8bf7\u6c42\uff0c\u5219 MDS \u4f1a\u76f4\u63a5\u4ece\u6b64\u72b6\u6001\u53d8\u4e3a <code>up:active</code>\u3002</p> <p><pre><code>up:clientreplay\n</code></pre> MDS \u53ef\u4ee5\u4ece <code>up:rejoin</code> \u8fdb\u5165\u6b64\u72b6\u6001\u3002MDS \u6b63\u5728\u91cd\u653e\u5df2\u56de\u590d\u4f46\u5c1a\u672a\u6301\u4e45\uff08\u672a\u8bb0\u5f55\uff09\u7684\u4efb\u4f55\u5ba2\u6237\u7aef\u8bf7\u6c42\u3002\u5ba2\u6237\u7aef\u5728 <code>up:reconnect</code> \u671f\u95f4\u91cd\u65b0\u53d1\u9001\u8fd9\u4e9b\u8bf7\u6c42\uff0c\u5e76\u4e14\u8bf7\u6c42\u5c06\u518d\u6b21\u91cd\u653e\u3002MDS \u5728\u5b8c\u6210\u91cd\u653e\u540e\u8fdb\u5165 <code>up:active</code>\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_4","title":"\u5931\u8d25\u7684\u72b6\u6001","text":"<p><pre><code>down:failed\n</code></pre> \u6ca1\u6709 MDS \u5b9e\u9645\u4e0a\u6301\u6709\u6b64\u72b6\u6001\u3002\u76f8\u53cd\uff0c\u5b83\u5e94\u7528\u4e8e\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684 Rank\u3002\u4f8b\u5982\uff1a <pre><code>$ ceph fs dump\n...\nmax_mds 1\nin      0\nup      {}\nfailed  0\n...\n</code></pre></p> <p>Rank 0 \u662f\u5931\u8d25\u96c6\u7684\u4e00\u90e8\u5206\uff0c\u6b63\u5728\u7b49\u5f85\u7531\u5907\u7528 MDS \u63a5\u7ba1\u3002\u5982\u679c\u6b64\u72b6\u6001\u6301\u7eed\u5b58\u5728\uff0c\u5219\u8868\u793a\u672a\u627e\u5230\u5408\u9002\u7684 MDS \u5b88\u62a4\u7a0b\u5e8f\u5206\u914d\u7ed9\u6b64 Rank\u3002\u8fd9\u53ef\u80fd\u662f\u7531\u4e8e\u5907\u7528\u5b88\u62a4\u8fdb\u7a0b\u4e0d\u8db3\uff0c\u6216\u8005\u6240\u6709\u5907\u7528\u5b88\u62a4\u8fdb\u7a0b\u90fd\u4e0d\u517c\u5bb9\u7684\u517c\u5bb9\u6027\u9020\u6210\u7684(\u53e6\u8bf7\u53c2\u9605\u5347\u7ea7 MDS \u96c6\u7fa4)\u3002</p> <p><pre><code>down:damaged\n</code></pre> \u6ca1\u6709 MDS \u5b9e\u9645\u4e0a\u6301\u6709\u6b64\u72b6\u6001\u3002\u76f8\u53cd\uff0c\u5b83\u5e94\u7528\u4e8e\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684 Rank\u3002\u4f8b\u5982\uff1a <pre><code>$ ceph fs dump\n...\nmax_mds 1\nin      0\nup      {}\nfailed\ndamaged 0\n...\n</code></pre> Rank 0 \u5df2\u635f\u574f\uff08\u53e6\u8bf7\u53c2\u9605 \u707e\u96be\u6062\u590d\uff09\u5e76\u653e\u7f6e\u5728\u635f\u574f\u7684\u96c6\u5408\u4e2d\u3002\u4ee5 Rank 0 \u8fd0\u884c\u7684 MDS \u53d1\u73b0\u5143\u6570\u636e\u635f\u574f\uff0c\u65e0\u6cd5\u81ea\u52a8\u6062\u590d\u3002\u9700\u8981\u4eba\u5de5\u5e72\u9884\u3002</p> <p><pre><code>down:stopped\n</code></pre> \u6ca1\u6709 MDS \u5b9e\u9645\u4e0a\u6301\u6709\u6b64\u72b6\u6001\u3002\u76f8\u53cd\uff0c\u5b83\u5e94\u7528\u4e8e\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684 Rank\u3002\u4f8b\u5982\uff1a <pre><code>$ ceph fs dump\n...\nmax_mds 1\nin      0\nup      {}\nfailed\ndamaged\nstopped 1\n...\n</code></pre></p> <p>\u901a\u8fc7\u51cf\u5c11 <code>max_mds</code> \u6765\u505c\u6b62\u67d0\u4e00 Rank\uff08\u53e6\u8bf7\u53c2\u9605\u914d\u7f6e\u591a\u4e2a\u6d3b\u52a8\u7684 MDS \u5b88\u62a4\u7a0b\u5e8f\uff09\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_5","title":"\u72b6\u6001\u56fe","text":"<p>\u6b64\u72b6\u6001\u56fe\u663e\u793a\u4e86 MDS/rank \u7684\u53ef\u80fd\u72b6\u6001\u8f6c\u6362\u3002\u56fe\u4f8b\u5982\u4e0b\uff1a</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_6","title":"\u989c\u8272","text":"<ul> <li>\u7eff\u8272\uff1aMDS \u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\u3002</li> <li>\u6a59\u8272\uff1aMDS \u5904\u4e8e\u6682\u65f6\u72b6\u6001\uff0c\u6b63\u5728\u5c1d\u8bd5\u53d8\u4e3a\u6d3b\u52a8\u72b6\u6001\u3002</li> <li>\u7ea2\u8272\uff1aMDS \u5904\u4e8e\u8868\u793a\u5bfc\u81f4 Rank \u6807\u8bb0\u4e3a\u5931\u8d25\u7684\u72b6\u6001\u3002</li> <li>\u7d2b\u8272\uff1aMDS \u548c Rank \u6b63\u5728\u505c\u6b62\u3002</li> <li>\u9ed1\u8272\uff1aMDS \u5904\u4e8e\u8868\u793a\u5bfc\u81f4 Rank \u6807\u8bb0\u4e3a\u635f\u574f\u7684\u72b6\u6001\u3002</li> </ul>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_7","title":"\u5f62\u72b6","text":"<ul> <li>\u5706\u5708\uff1aMDS \u4fdd\u6301\u6b64\u72b6\u6001\u3002</li> <li>\u516d\u8fb9\u5f62\uff1a\u6ca1\u6709 MDS \u4fdd\u6301\u6b64\u72b6\u6001\uff08\u5b83\u5e94\u7528\u4e8e\u6392\u540d\uff09\u3002</li> </ul>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/mds-states/#_8","title":"\u7ebf","text":"<ul> <li>\u53cc\u7ebf\u5f62\u72b6\u8868\u793a\u6392\u540d\u4e3a \u201cin\u201d\u3002</li> </ul>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/","title":"\u914d\u7f6e\u591a\u4e2aActive MDS\u8fdb\u7a0b","text":"<p>\u4e5f\u88ab\u79f0\u4e3a\uff1a\u591a\u6d3bMDS\u3001active-active MDS</p> <p>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2aCephFS\u90fd\u914d\u7f6e\u4e86\u4e00\u4e2aMDS\u5b88\u62a4\u8fdb\u7a0b\u3002\u4f46\u662f\uff0c\u5728\u5927\u89c4\u6a21\u7cfb\u7edf\u4e2d\uff0c\u60a8\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2aMDS\u5b88\u62a4\u8fdb\u7a0b\uff0c\u4ee5\u63d0\u9ad8\u7cfb\u7edf\u7684\u5143\u6570\u636e\u6027\u80fd\uff0c\u8fd9\u4e9bMDS\u8fdb\u7a0b\u5c06\u5171\u540c\u5904\u7406\u5143\u6570\u636e\u5de5\u4f5c\u8d1f\u8f7d\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#mds","title":"\u4f55\u65f6\u5e94\u8be5\u4f7f\u7528\u591a\u4e2aMDS","text":"<p>\u603b\u7684\u6765\u8bf4\uff0c\u5f53\u60a8\u7684\u6587\u4ef6\u7cfb\u7edf\u5143\u6570\u636e\u6027\u80fd\u5728\u5355\u4e2aMDS\u4e0a\u9047\u5230\u4e86\u74f6\u9888\uff0c\u6b64\u65f6\u60a8\u5e94\u8be5\u8003\u8651\u4f7f\u7528\u591a\u4e2aMDS\u3002</p> <p>\u6dfb\u52a0\u66f4\u591a\u7684MDS\u5e76\u4e0d\u662f\u5728\u6240\u6709\u5de5\u4f5c\u8d1f\u8f7d\u4e0b\u90fd\u80fd\u63d0\u9ad8\u7cfb\u7edf\u6027\u80fd\uff0c\u901a\u5e38\uff0c\u5728\u5355\u4e2a\u5ba2\u6237\u7aef\u4e0a\u8fd0\u884c\u7684\u5355\u4e2a\u5e94\u7528\u7a0b\u5e8f\u7684\u5de5\u4f5c\u8d1f\u8f7d\u4e0b\uff0c\u4f7f\u7528\u591a\u4e2aMDS\u5e76\u4e0d\u4f1a\u5e26\u6765\u660e\u663e\u7684\u6027\u80fd\u63d0\u5347\uff0c\u9664\u975e\u8be5\u5e94\u7528\u7a0b\u5e8f\u6b63\u5728\u5e76\u884c\u6267\u884c\u5927\u91cf\u5143\u6570\u636e\u64cd\u4f5c\u3002</p> <p>\u901a\u8fc7\u4f7f\u7528\u591a\u6d3bMDS\u5e26\u6765\u6027\u80fd\u63d0\u5347\u7684\u573a\u666f\u901a\u5e38\u662f\u90a3\u4e9b\u5177\u6709\u8bb8\u591a\u5ba2\u6237\u7aef\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8fd9\u4e9b\u5ba2\u6237\u7aef\u53ef\u80fd\u5728\u8bb8\u591a\u72ec\u7acb\u7684\u76ee\u5f55\u4e2d\u5de5\u4f5c\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#mds-active","title":"\u589e\u52a0 MDS Active\u96c6\u7fa4\u7684\u5927\u5c0f","text":"<p>\u6bcf\u4e2a CephFS \u6587\u4ef6\u7cfb\u7edf\u90fd\u6709\u4e00\u4e2a <code>max_mds</code> \u7684\u53c2\u6570\uff0c\u7528\u4e8e\u63a7\u5236\u5c06\u521b\u5efa\u7684 Rank \u6570\u3002\u53ea\u6709\u5f53\u5907\u7528 MDS \u5b88\u62a4\u8fdb\u7a0b\u53ef\u7528\u4e8e\u627f\u62c5\u65b0\u7684 Rank \u65f6\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e2d\u7684\u5b9e\u9645 Rank \u6570\u624d\u4f1a\u589e\u52a0\u3002\u4f8b\u5982\uff0c\u5982\u679c\u53ea\u6709\u4e00\u4e2a MDS \u5b88\u62a4\u7a0b\u5e8f\u6b63\u5728\u8fd0\u884c\uff0c\u5e76\u4e14 <code>max_mds</code> \u8bbe\u7f6e\u4e3a 2\uff0c\u90a3\u4e48\uff0c\u6587\u4ef6\u7cfb\u7edf\u4e0d\u4f1a\u521b\u5efa\u7b2c\u4e8c\u4e2a Rank\u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u50cf\u8fd9\u6837\u8fdb\u884c\u914d\u7f6e\u662f\u4e0d\u5177\u5907\u9ad8\u53ef\u7528\u6027(HA)\u7684\uff0c\u56e0\u4e3a\u6ca1\u6709\u5907\u7528 MDS \u53ef\u7528\u4e8e\u63a5\u7ba1\u5931\u8d25\u7684Rank\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u914d\u7f6e\u65f6\uff0c\u96c6\u7fa4\u4f1a\u4ea7\u751f\u5065\u5eb7\u72b6\u6001\u7684\u8b66\u544a\u3002</p> <p>\u5c06 <code>max_mds</code> \u8bbe\u7f6e\u4e3a\u6240\u9700\u7684 Rank \u6570\u3002\u5728\u4ee5\u4e0b\u793a\u4f8b\u4e2d\uff0c\u901a\u8fc7 \u201cceph status\u201d \u7684 \u201cfsmap\u201d \u884c\uff0c\u6765\u8bf4\u660e\u547d\u4ee4\u7684\u9884\u671f\u7ed3\u679c\u3002</p> <pre><code># fsmap e5: 1/1/1 up {0=a=up:active}, 2 up:standby\n\nceph fs set &lt;fs_name&gt; max_mds 2\n\n# fsmap e8: 2/2/2 up {0=a=up:active,1=c=up:creating}, 1 up:standby\n# fsmap e9: 2/2/2 up {0=a=up:active,1=c=up:active}, 1 up:standby\n</code></pre> <p>\u65b0\u521b\u5efa\u7684Rank(1) \u5c06\u901a\u8fc7 'creating' \u72b6\u6001\uff0c\u8fdb\u5165 'active' \u72b6\u6001\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#standby","title":"StandBy \u8fdb\u7a0b","text":"<p>\u5373\u4f7f\u6709\u591a\u4e2aActive\u7684 MDS \u8fdb\u7a0b\uff0c\u4e3a\u4e86\u5b9e\u73b0\u7cfb\u7edf\u7684\u9ad8\u53ef\u7528\u6027\uff0c\u4ecd\u9700\u8981\u914d\u7f6e\u5907\u7528\u7684MDS\u8fdb\u7a0b\u6765\u63a5\u7ba1\u53d1\u751f\u6545\u969c\u7684\u6d3b\u8dc3MDS\u8fdb\u7a0b\u3002</p> <p>\u56e0\u6b64\uff0c\u9ad8\u53ef\u7528\u6027\u7cfb\u7edf\u7684\u5b9e\u9645\u6700\u5927 <code>max_mds</code> \u6700\u591a\u6bd4\u7cfb\u7edf\u4e2d MDS \u670d\u52a1\u5668\u7684\u603b\u6570\u5c11 1\u3002</p> <p>\u8981\u5728\u53d1\u751f\u591a\u4e2a\u670d\u52a1\u5668\u6545\u969c\u65f6\u4fdd\u6301\u53ef\u7528\uff0c\u8bf7\u589e\u52a0\u7cfb\u7edf\u4e2d\u5907\u7528 MDS \u7684\u6570\u91cf\uff0c\u4ee5\u5339\u914d\u60a8\u5e0c\u671b\u627f\u53d7\u7684\u670d\u52a1\u5668\u6545\u969c\u6570\u91cf\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#rank","title":"\u51cf\u5c11Rank\u7684\u6570\u91cf","text":"<p>\u51cf\u5c11\u7b49\u7ea7\u6570\u5c31\u50cf\u51cf\u5c11 <code>max_mds</code> \u4e00\u6837\u7b80\u5355\uff1a</p> <pre><code># fsmap e9: 2/2/2 up {0=a=up:active,1=c=up:active}, 1 up:standby\nceph fs set &lt;fs_name&gt; max_mds 1\n# fsmap e10: 2/2/1 up {0=a=up:active,1=c=up:stopping}, 1 up:standby\n# fsmap e10: 2/2/1 up {0=a=up:active,1=c=up:stopping}, 1 up:standby\n...\n# fsmap e10: 1/1/1 up {0=a=up:active}, 2 up:standby\n</code></pre> <p>\u96c6\u7fa4\u5c06\u81ea\u52a8\u9010\u6b65\u505c\u6b62\u989d\u5916\u7684Rank\uff0c\u76f4\u5230Rank\u6570\u7b49\u4e8e <code>max_mds</code>\u3002</p> <p>See CephFS Administrative commands for more details which forms  can take. <p>\u6ce8\u610f\uff1a\u5df2\u505c\u6b62\u7684\u7b49\u7ea7\u5c06\u9996\u5148\u8fdb\u5165stopping\u72b6\u6001\u4e00\u6bb5\u65f6\u95f4\uff0c\u540c\u65f6\u5c06\u5176\u7ba1\u7406\u7684\u5143\u6570\u636e\u79fb\u4ea4\u7ed9\u5269\u4f59\u7684Active MDS\u3002\u6b64\u9636\u6bb5\u53ef\u80fd\u9700\u8981\u51e0\u79d2\u949f\u5230\u51e0\u5206\u949f\u3002\u5982\u679c MDS \u5361\u5728stopping\u72b6\u6001\uff0c\u5219\u5e94\u5c06\u5176\u4f5c\u4e3a\u53ef\u80fd\u7684 bug \u8fdb\u884c\u8c03\u67e5\u3002</p> <p>If an MDS daemon crashes or is killed while in the up:stopping state, a standby will take over and the cluster monitors will against try to stop the daemon. \u5982\u679c MDS \u5b88\u62a4\u7a0b\u5e8f\u5728 <code>up\uff1astopping</code> \u72b6\u6001\u4e0b\u5d29\u6e83\u6216\u88ab\u7ec8\u6b62\uff0c\u5219\u5907\u7528MDS\u5c06\u63a5\u7ba1\u5b83\uff0cMON \u96c6\u7fa4\u5c06\u53cd\u5bf9\u5c1d\u8bd5\u505c\u6b62\u5b88\u62a4\u7a0b\u5e8f\u3002</p> <p>\u5f53 MDS \u7ed3\u675f\u4e86stopping\u72b6\u6001\u540e\uff0c\u5b83\u5c06\u6062\u590d\u4e3a\u5907\u7528MDS\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#rank_1","title":"\u624b\u52a8\u5c06\u76ee\u5f55\u6811\u56fa\u5b9a\u5230\u7279\u5b9aRank","text":"<p>In multiple active metadata server configurations, a balancer runs which works to spread metadata load evenly across the cluster. This usually works well enough for most users but sometimes it is desirable to override the dynamic balancer with explicit mappings of metadata to particular ranks. This can allow the administrator or users to evenly spread application load or limit impact of users\u2019 metadata requests on the entire cluster. \u5728\u591a\u4e2a\u6d3b\u52a8\u5143\u6570\u636e\u670d\u52a1\u5668\u914d\u7f6e\u4e2d\uff0c\u5c06\u8fd0\u884c\u4e00\u4e2a\u5e73\u8861\u5668\uff0c\u8be5\u5e73\u8861\u5668\u7528\u4e8e\u5c06\u5143\u6570\u636e\u8d1f\u8f7d\u5747\u5300\u5730\u5206\u5e03\u5728\u96c6\u7fa4\u4e2d\u3002\u5bf9\u4e8e\u5927\u591a\u6570\u7528\u6237\u6765\u8bf4\uff0c\u8fd9\u901a\u5e38\u5df2\u7ecf\u8db3\u591f\u597d\u4e86\uff0c\u4f46\u6709\u65f6\u9700\u8981\u7528\u5143\u6570\u636e\u5230\u7279\u5b9a\u7b49\u7ea7\u7684\u663e\u5f0f Map \u6765\u8986\u76d6 dynamic balancer\u3002\u8fd9\u53ef\u4ee5\u5141\u8bb8\u7ba1\u7406\u5458\u6216\u7528\u6237\u5747\u5300\u5206\u914d\u5e94\u7528\u7a0b\u5e8f\u8d1f\u8f7d\u6216\u9650\u5236\u7528\u6237\u7684\u5143\u6570\u636e\u8bf7\u6c42\u5bf9\u6574\u4e2a\u96c6\u7fa4\u7684\u5f71\u54cd\u3002</p> <p>The mechanism provided for this purpose is called an export pin, an extended attribute of directories. The name of this extended attribute is ceph.dir.pin. Users can set this attribute using standard commands: \u4e3a\u6b64\u76ee\u7684\u63d0\u4f9b\u7684\u673a\u5236\u79f0\u4e3a\u5bfc\u51fa\u5f15\u811a \uff0c\u5373 \u76ee\u5f55\u7684 extended \u5c5e\u6027\u3002\u6b64\u6269\u5c55\u5c5e\u6027\u7684\u540d\u79f0\u4e3a \u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u547d\u4ee4\u8bbe\u7f6e\u6b64\u5c5e\u6027\uff1a</p> <p>setfattr -n ceph.dir.pin -v 2 path/to/dir The value of the extended attribute is the rank to assign the directory subtree to. A default value of -1 indicates the directory is not pinned. extended \u5c5e\u6027\u7684\u503c\u662f\u8981\u5c06\u76ee\u5f55\u5b50\u6811\u5206\u914d\u5230\u7684\u6392\u540d\u3002\u9ed8\u8ba4\u503c -1 \u8868\u793a\u76ee\u5f55\u672a\u56fa\u5b9a\u3002</p> <p>A directory\u2019s export pin is inherited from its closest parent with a set export pin. In this way, setting the export pin on a directory affects all of its children. However, the parents pin can be overridden by setting the child directory\u2019s export pin. For example: \u76ee\u5f55\u7684\u5bfc\u51fa\u5f15\u811a\u7ee7\u627f\u81ea\u5176\u6700\u8fd1\u7684\u7236\u7ea7\uff0c\u5e76\u8bbe\u7f6e\u4e86\u5bfc\u51fa\u5f15\u811a\u3002\u8fd9\u6837\uff0c\u5728\u76ee\u5f55\u4e0a\u8bbe\u7f6e export pin \u4f1a\u5f71\u54cd\u5176\u6240\u6709\u5b50\u9879\u3002\u4f46\u662f\uff0c\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u5b50\u76ee\u5f55\u7684 export pin \u6765\u8986\u76d6 parents pin\u3002\u4f8b\u5982\uff1a</p> <p>mkdir -p a/b</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#a-and-ab-both-start-without-an-export-pin-set","title":"\"a\" and \"a/b\" both start without an export pin set","text":"<p>setfattr -n ceph.dir.pin -v 1 a/</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#a-and-b-are-now-pinned-to-rank-1","title":"a and b are now pinned to rank 1","text":"<p>setfattr -n ceph.dir.pin -v 0 a/b</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#ab-is-now-pinned-to-rank-0-and-a-and-the-rest-of-its-children-are-still-pinned-to-rank-1","title":"a/b is now pinned to rank 0 and a/ and the rest of its children are still pinned to rank 1","text":"<p>Setting subtree partitioning policies\uf0c1 \u8bbe\u7f6e\u5b50\u6811\u5206\u533a\u7b56\u7565 \uf0c1 It is also possible to setup automatic static partitioning of subtrees via a set of policies. In CephFS, this automatic static partitioning is referred to as ephemeral pinning. Any directory (inode) which is ephemerally pinned will be automatically assigned to a particular rank according to a consistent hash of its inode number. The set of all ephemerally pinned directories should be uniformly distributed across all ranks. \u8fd8\u53ef\u4ee5\u901a\u8fc7\u4e00\u7ec4\u7b56\u7565\u8bbe\u7f6e\u5b50\u6811\u7684\u81ea\u52a8\u9759\u6001\u5206\u533a\u3002\u5728 CephFS \u4e2d\uff0c\u8fd9\u79cd\u81ea\u52a8\u9759\u6001\u5206\u533a\u79f0\u4e3a\u4e34\u65f6\u56fa\u5b9a \u3002\u4efb\u4f55\u4e34\u65f6\u56fa\u5b9a\u7684\u76ee\u5f55 \uff08inode\uff09 \u90fd\u5c06\u6839\u636e\u5176 inode \u7f16\u53f7\u7684\u4e00\u81f4\u54c8\u5e0c\u503c\u81ea\u52a8\u5206\u914d\u7ed9\u7279\u5b9a\u6392\u540d\u3002\u6240\u6709\u4e34\u65f6\u56fa\u5b9a\u76ee\u5f55\u7684\u96c6\u5408\u5e94\u5747\u5300\u5206\u5e03\u5728\u6240\u6709\u7b49\u7ea7\u4e2d\u3002</p> <p>Ephemerally pinned directories are so named because the pin may not persist once the directory inode is dropped from cache. However, an MDS failover does not affect the ephemeral nature of the pinned directory. The MDS records what subtrees are ephemerally pinned in its journal so MDS failovers do not drop this information. \u4e34\u65f6\u56fa\u5b9a\u76ee\u5f55\u4e4b\u6240\u4ee5\u5982\u6b64\u547d\u540d\uff0c\u662f\u56e0\u4e3a\u4e00\u65e6\u4ece\u7f13\u5b58\u4e2d\u5220\u9664\u76ee\u5f55 inode\uff0c\u8be5 pin \u53ef\u80fd\u4e0d\u4f1a\u4fdd\u7559\u3002\u4f46\u662f\uff0cMDS \u6545\u969c\u8f6c\u79fb\u4e0d\u4f1a\u5f71\u54cd\u56fa\u5b9a\u76ee\u5f55\u7684\u77ed\u6682\u6027\u3002MDS \u4f1a\u8bb0\u5f55\u54ea\u4e9b\u5b50\u6811\u5728\u5176\u65e5\u5fd7\u4e2d\u77ed\u6682\u56fa\u5b9a\uff0c\u56e0\u6b64 MDS \u6545\u969c\u8f6c\u79fb\u4e0d\u4f1a\u4e22\u5f03\u6b64\u4fe1\u606f\u3002</p> <p>A directory is either ephemerally pinned or not. Which rank it is pinned to is derived from its inode number and a consistent hash. This means that ephemerally pinned directories are somewhat evenly spread across the MDS cluster. The consistent hash also minimizes redistribution when the MDS cluster grows or shrinks. So, growing an MDS cluster may automatically increase your metadata throughput with no other administrative intervention. \u76ee\u5f55\u8981\u4e48\u662f\u4e34\u65f6\u56fa\u5b9a\u7684\uff0c\u8981\u4e48\u4e0d\u662f\u3002\u5b83\u56fa\u5b9a\u5230\u54ea\u4e2a\u6392\u540d\u662f\u4ece\u5b83\u7684 inode \u7f16\u53f7\u548c\u4e00\u81f4\u7684\u54c8\u5e0c\u503c\u6d3e\u751f\u7684\u3002\u8fd9\u610f\u5473\u7740\u4e34\u65f6\u56fa\u5b9a\u76ee\u5f55\u5728 MDS \u7fa4\u96c6\u4e2d\u5206\u5e03\u5f97\u6bd4\u8f83\u5747\u5300\u3002\u5f53 MDS \u7fa4\u96c6\u589e\u957f\u6216\u6536\u7f29\u65f6\uff0c \u4e00\u81f4\u6027\u54c8\u5e0c\u8fd8\u53ef\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u51cf\u5c11\u91cd\u65b0\u5206\u914d\u3002\u56e0\u6b64\uff0c\u6269\u5927 MDS \u96c6\u7fa4\u53ef\u80fd\u4f1a\u81ea\u52a8\u589e\u52a0\u5143\u6570\u636e\u541e\u5410\u91cf\uff0c\u800c\u65e0\u9700\u5176\u4ed6\u7ba1\u7406\u5e72\u9884\u3002</p> <p>Presently, there are two types of ephemeral pinning: \u76ee\u524d\uff0c\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u77ed\u6682\u56fa\u5b9a\uff1a</p> <p>Distributed Ephemeral Pins: This policy causes a directory to fragment (even well below the normal fragmentation thresholds) and distribute its fragments as ephemerally pinned subtrees. This has the effect of distributing immediate children across a range of MDS ranks. The canonical example use-case would be the /home directory: we want every user\u2019s home directory to be spread across the entire MDS cluster. This can be set via: \u5206\u5e03\u5f0f\u4e34\u65f6 Pin\uff1a \u6b64\u7b56\u7565\u4f1a\u5bfc\u81f4\u76ee\u5f55\u788e\u7247\u5316\uff08\u751a\u81f3\u8fdc\u4f4e\u4e8e\u6b63\u5e38\u7684\u788e\u7247\u9608\u503c\uff09\u5e76\u5c06\u5176\u788e\u7247\u4f5c\u4e3a\u4e34\u65f6\u56fa\u5b9a\u7684\u5b50\u6811\u8fdb\u884c\u5206\u53d1\u3002\u8fd9\u5177\u6709\u5728\u4e00\u7cfb\u5217 MDS \u7b49\u7ea7\u4e4b\u95f4\u5206\u914d\u76f4\u7cfb\u5b50\u7ea7\u7684\u6548\u679c\u3002\u89c4\u8303\u7684\u793a\u4f8b\u7528\u4f8b\u662f /home \u76ee\u5f55\uff1a\u6211\u4eec\u5e0c\u671b\u6bcf\u4e2a\u7528\u6237\u7684\u4e3b\u76ee\u5f55\u5206\u5e03\u5728\u6574\u4e2a MDS \u96c6\u7fa4\u4e2d\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8fdb\u884c\u8bbe\u7f6e\uff1a</p> <p>setfattr -n ceph.dir.pin.distributed -v 1 /cephfs/home Random Ephemeral Pins: This policy indicates any descendent sub-directory may be ephemerally pinned. This is set through the extended attribute ceph.dir.pin.random with the value set to the percentage of directories that should be pinned. For example: Random Ephemeral Pins\uff1a\u6b64\u7b56\u7565\u6307\u793a\u4efb\u4f55\u6d3e\u751f\u5b50\u76ee\u5f55 \u53ef\u80fd\u88ab\u77ed\u6682\u56fa\u5b9a\u3002\u8fd9\u662f\u901a\u8fc7 extended \u5c5e\u6027 ceph.dir.pin.random \u7684\u76ee\u5f55\uff0c\u8be5\u503c\u8bbe\u7f6e\u4e3a\u5e94\u56fa\u5b9a\u7684\u76ee\u5f55\u7684\u767e\u5206\u6bd4\u3002\u4f8b\u5982\uff1a</p> <p>setfattr -n ceph.dir.pin.random -v 0.5 /cephfs/tmp Would cause any directory loaded into cache or created under /tmp to be ephemerally pinned 50 percent of the time. \u5c06\u5bfc\u81f4\u52a0\u8f7d\u5230\u7f13\u5b58\u4e2d\u6216\u5728 /tmp \u4e0b\u521b\u5efa\u7684\u4efb\u4f55\u76ee\u5f55\u5728 50% \u7684\u65f6\u95f4\u5185\u77ed\u6682\u56fa\u5b9a\u3002</p> <p>It is recommended to only set this to small values, like .001 or 0.1%. Having too many subtrees may degrade performance. For this reason, the config mds_export_ephemeral_random_max enforces a cap on the maximum of this percentage (default: .01). The MDS returns EINVAL when attempting to set a value beyond this config. \u5efa\u8bae\u4ec5\u5c06\u5176\u8bbe\u7f6e\u4e3a\u8f83\u5c0f\u7684\u503c\uff0c\u4f8b\u5982 .001 \u6216 0.1%\u3002 \u5b50\u6811\u8fc7\u591a\u53ef\u80fd\u4f1a\u964d\u4f4e\u6027\u80fd\u3002\u56e0\u6b64\uff0c\u914d\u7f6e mds_export_ephemeral_random_max \u5f3a\u5236\u8bbe\u7f6e\u6b64\u767e\u5206\u6bd4\u7684\u6700\u5927\u503c\u4e0a\u9650\uff08\u9ed8\u8ba4\u503c\uff1a.01\uff09\u3002MDS \u5728\u5c1d\u8bd5\u8bbe\u7f6e\u8d85\u51fa\u6b64\u914d\u7f6e\u7684\u503c\u65f6\u8fd4\u56de EINVAL\u3002</p> <p>Both random and distributed ephemeral pin policies are off by default in Octopus. The features may be enabled via the mds_export_ephemeral_random and mds_export_ephemeral_distributed configuration options. \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u968f\u673a\u548c\u5206\u5e03\u5f0f\u4e34\u65f6 pin \u7b56\u7565\u5728 \u7ae0\u9c7c\u3002\u8fd9\u4e9b\u529f\u80fd\u53ef\u4ee5\u901a\u8fc7 mds_export_ephemeral_random \u548c mds_export_ephemeral_distributed \u914d\u7f6e\u9009\u9879\u3002</p> <p>Ephemeral pins may override parent export pins and vice versa. What determines which policy is followed is the rule of the closest parent: if a closer parent directory has a conflicting policy, use that one instead. For example: \u4e34\u65f6 pin \u53ef\u80fd\u4f1a\u8986\u76d6\u7236 export pin\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\u51b3\u5b9a\u9075\u5faa\u54ea\u4e2a\u7b56\u7565\u7684\u662f\u6700\u8fd1\u7684\u7236\u76ee\u5f55\u7684\u89c4\u5219\uff1a\u5982\u679c\u8f83\u8fd1\u7684\u7236\u76ee\u5f55\u5177\u6709\u51b2\u7a81\u7684\u7b56\u7565\uff0c\u8bf7\u6539\u7528\u8be5\u7b56\u7565\u3002\u4f8b\u5982\uff1a</p> <p>mkdir -p foo/bar1/baz foo/bar2 setfattr -n ceph.dir.pin -v 0 foo setfattr -n ceph.dir.pin.distributed -v 1 foo/bar1 The foo/bar1/baz directory will be ephemerally pinned because the foo/bar1 policy overrides the export pin on foo. The foo/bar2 directory will obey the pin on foo normally. foo/bar1/baz \u76ee\u5f55\u5c06\u88ab\u4e34\u65f6\u56fa\u5b9a\uff0c\u56e0\u4e3a foo/bar1 \u7b56\u7565\u8986\u76d6 foo \u4e0a\u7684 export pin\u3002foo/bar2 \u76ee\u5f55\u5c06\u6b63\u5e38\u670d\u4ece foo \u4e0a\u7684 pin\u3002</p> <p>For the reverse situation: \u5bf9\u4e8e\u76f8\u53cd\u7684\u60c5\u51b5\uff1a</p> <p>mkdir -p home/{patrick,john} setfattr -n ceph.dir.pin.distributed -v 1 home setfattr -n ceph.dir.pin -v 2 home/patrick The home/patrick directory and its children will be pinned to rank 2 because its export pin overrides the policy on home. home/patrick \u76ee\u5f55\u53ca\u5176\u5b50\u76ee\u5f55\u5c06\u88ab\u56fa\u5b9a\u5230\u6392\u540d 2\uff0c\u56e0\u4e3a\u5b83\u7684 export pin \u8986\u76d6\u4e86 home \u4e0a\u7684\u7b56\u7565\u3002</p> <p>To remove a partitioning policy, remove the respective extended attribute or set the value to 0. \u8981\u5220\u9664\u5206\u533a\u7b56\u7565\uff0c\u8bf7\u5220\u9664\u76f8\u5e94\u7684\u6269\u5c55\u5c5e\u6027\u6216\u5c06\u503c\u8bbe\u7f6e\u4e3a 0\u3002</p> <p>$ setfattr -n ceph.dir.pin.distributed -v 0 home</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/multimds/#or","title":"or","text":"<p>$ setfattr -x ceph.dir.pin.distributed home For export pins, remove the extended attribute or set the extended attribute value to -1. \u5bf9\u4e8e\u5bfc\u51fa\u5f15\u811a\uff0c\u8bf7\u5220\u9664 extended \u5c5e\u6027\u6216\u5c06 extended \u5c5e\u6027\u503c\u8bbe\u7f6e\u4e3a -1\u3002</p> <p>$ setfattr -n ceph.dir.pin -v -1 home Dynamic Subtree Partitioning\uf0c1 \u52a8\u6001\u5b50\u6811\u5206\u533a \uf0c1 CephFS has long had a dynamic metadata balancer (sometimes called the \u201cdefault balancer\u201d) which can split or merge subtrees while placing them on \u201ccolder\u201d MDS ranks. Moving the metadata in this way improves overall file system throughput and cache size. CephFS \u957f\u671f\u4ee5\u6765\u4e00\u76f4\u6709\u4e00\u4e2a\u52a8\u6001\u5143\u6570\u636e\u5e73\u8861\u5668\uff08\u6709\u65f6\u79f0\u4e3a\u201c\u9ed8\u8ba4\u5e73\u8861\u5668\u201d\uff09\uff0c\u5b83\u53ef\u4ee5\u62c6\u5206\u6216\u5408\u5e76\u5b50\u6811\uff0c\u540c\u65f6\u5c06\u5b83\u4eec\u653e\u7f6e\u5728\u201c\u8f83\u51b7\u201d\u7684 MDS \u7b49\u7ea7\u4e2d\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u79fb\u52a8\u5143\u6570\u636e\u53ef\u4ee5\u63d0\u9ad8\u6574\u4f53\u6587\u4ef6\u7cfb\u7edf\u541e\u5410\u91cf\u548c\u7f13\u5b58\u5927\u5c0f\u3002</p> <p>However, the balancer is sometimes inefficient or slow, so by default it is turned off. This is to avoid an administrator \u201cturning on multimds\u201d by increasing the max_mds setting only to find that the balancer has made a mess of the cluster performance (reverting from this messy state of affairs is straightforward but can take time). \u4f46\u662f\uff0c\u5e73\u8861\u5668\u6709\u65f6\u6548\u7387\u4f4e\u4e0b\u6216\u901f\u5ea6\u8f83\u6162\uff0c\u56e0\u6b64\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5b83\u662f\u5173\u95ed\u7684\u3002\u8fd9\u662f\u4e3a\u4e86\u907f\u514d\u7ba1\u7406\u5458\u901a\u8fc7\u589e\u52a0 max_mds \u8bbe\u7f6e\u6765\u201c\u6253\u5f00 multimds\u201d\uff0c\u5374\u53d1\u73b0 balancer \u5668\u5df2\u7ecf\u628a\u96c6\u7fa4\u6027\u80fd\u641e\u5f97\u4e00\u56e2\u7cdf\uff08\u4ece\u8fd9\u79cd\u6df7\u4e71\u7684\u72b6\u6001\u4e2d\u6062\u590d\u8fc7\u6765\u5f88\u7b80\u5355\uff0c\u4f46\u53ef\u80fd\u9700\u8981\u65f6\u95f4\uff09\u3002</p> <p>To turn on the balancer, run a command of the following form: \u8981\u6253\u5f00\u5e73\u8861\u5668\uff0c\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u5f62\u5f0f\u7684\u547d\u4ee4\uff1a</p> <p>ceph fs set  balance_automate true Turn on the balancer only with an appropriate configuration, such as a configuration that includes the bal_rank_mask setting (described below). \u4ec5\u4f7f\u7528\u9002\u5f53\u7684\u914d\u7f6e\u6253\u5f00\u5e73\u8861\u5668\uff0c\u4f8b\u5982\u5305\u542b bal_rank_mask \u8bbe\u7f6e\uff08\u63cf\u8ff0 \uff09\u3002 <p>Careful monitoring of the file system performance and MDS is advised. \u5efa\u8bae\u4ed4\u7ec6\u76d1\u63a7\u6587\u4ef6\u7cfb\u7edf\u6027\u80fd\u548c MDS\u3002</p> <p>Dynamic subtree partitioning with Balancer on specific ranks\uf0c1 \u5728\u7279\u5b9a\u7b49\u7ea7\u4e0a\u4f7f\u7528 Balancer \u8fdb\u884c\u52a8\u6001\u5b50\u6811\u5206\u533a \uf0c1 The CephFS file system provides the bal_rank_mask option to enable the balancer to dynamically rebalance subtrees within particular active MDS ranks. This allows administrators to employ both the dynamic subtree partitioning and static pining schemes in different active MDS ranks so that metadata loads are optimized based on user demand. For instance, in realistic cloud storage environments, where a lot of subvolumes are allotted to multiple computing nodes (e.g., VMs and containers), some subvolumes that require high performance are managed by static partitioning, whereas most subvolumes that experience a moderate workload are managed by the balancer. As the balancer evenly spreads the metadata workload to all active MDS ranks, performance of static pinned subvolumes inevitably may be affected or degraded. If this option is enabled, subtrees managed by the balancer are not affected by static pinned subtrees. CephFS \u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u4e86 bal_rank_mask \u9009\u9879\uff0c\u4f7f\u5e73\u8861\u5668\u80fd\u591f\u52a8\u6001\u5730\u91cd\u65b0\u5e73\u8861\u7279\u5b9a\u6d3b\u52a8 MDS \u7b49\u7ea7\u4e2d\u7684\u5b50\u6811\u3002\u8fd9\u5141\u8bb8\u7ba1\u7406\u5458\u5728\u4e0d\u540c\u7684\u6d3b\u52a8 MDS \u7b49\u7ea7\u4e2d\u540c\u65f6\u4f7f\u7528\u52a8\u6001\u5b50\u6811\u5206\u533a\u548c\u9759\u6001\u56fa\u5b9a\u65b9\u6848\uff0c\u4ee5\u4fbf\u6839\u636e\u7528\u6237\u9700\u6c42\u4f18\u5316\u5143\u6570\u636e\u52a0\u8f7d\u3002\u4f8b\u5982\uff0c\u5728\u5b9e\u9645\u7684\u4e91\u5b58\u50a8\u73af\u5883\u4e2d\uff0c\u5927\u91cf\u5b50\u5377\u88ab\u5206\u914d\u7ed9\u591a\u4e2a\u8ba1\u7b97\u8282\u70b9\uff08\u4f8b\u5982\uff0cVM \u548c\u5bb9\u5668\uff09\uff0c\u4e00\u4e9b\u9700\u8981\u9ad8\u6027\u80fd\u7684\u5b50\u5377\u7531\u9759\u6001\u5206\u533a\u7ba1\u7406\uff0c\u800c\u5927\u591a\u6570\u5de5\u4f5c\u8d1f\u8f7d\u9002\u4e2d\u7684\u5b50\u5377\u7531 balancer \u7ba1\u7406\u3002\u7531\u4e8e\u5e73\u8861\u5668\u5c06\u5143\u6570\u636e\u5de5\u4f5c\u8d1f\u8f7d\u5747\u5300\u5730\u5206\u6563\u5230\u6240\u6709\u6d3b\u52a8\u7684 MDS \u6392\u540d\uff0c\u56e0\u6b64\u9759\u6001\u56fa\u5b9a\u5b50\u5377\u7684\u6027\u80fd\u53ef\u80fd\u4e0d\u53ef\u907f\u514d\u5730\u53d7\u5230\u5f71\u54cd\u6216\u964d\u7ea7\u3002\u5982\u679c\u542f\u7528\u6b64\u9009\u9879\uff0c\u5219 balancer \u7ba1\u7406\u7684\u5b50\u6811\u4e0d\u4f1a\u53d7\u5230\u9759\u6001\u56fa\u5b9a\u5b50\u6811\u7684\u5f71\u54cd\u3002</p> <p>This option can be configured with the ceph fs set command. For example: \u53ef\u4ee5\u4f7f\u7528 ceph fs set \u547d\u4ee4\u914d\u7f6e\u6b64\u9009\u9879\u3002\u4f8b\u5982\uff1a</p> <p>ceph fs set  bal_rank_mask  Each bitfield of the  number represents a dedicated rank. If the  is set to 0x3, the balancer runs on active 0 and 1 ranks. For example:  \u6570\u5b57\u7684\u6bcf\u4e2a\u4f4d\u57df\u4ee3\u8868\u4e00\u4e2a\u4e13\u7528 rank\u3002\u5982\u679c  \u8bbe\u7f6e\u4e3a 0x3\uff0c\u5219\u5e73\u8861\u5668\u5728\u6d3b\u52a8 0 \u548c 1 \u7b49\u7ea7\u4e0a\u8fd0\u884c\u3002\u4f8b\u5982\uff1a <p>ceph fs set  bal_rank_mask 0x3 If the bal_rank_mask is set to -1 or all, all active ranks are masked and utilized by the balancer. As an example: \u5982\u679c bal_rank_mask \u8bbe\u7f6e\u4e3a -1 \u6216 all\uff0c\u5219\u6240\u6709\u6d3b\u52a8\u6392\u540d\u90fd\u5c06\u88ab\u5c4f\u853d\u5e76\u7531 balancer \u5668\u4f7f\u7528\u3002\u4f8b\u5982\uff1a <p>ceph fs set  bal_rank_mask -1 On the other hand, if the balancer needs to be disabled, the bal_rank_mask should be set to 0x0. For example: \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u9700\u8981\u7981\u7528 balancer\uff0c\u5219\u5e94\u5c06 bal_rank_mask \u8bbe\u7f6e\u4e3a 0x0\u3002\u4f8b\u5982\uff1a <p>ceph fs set  bal_rank_mask 0x0"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/posix/","title":"\u4e0ePOSIX\u7684\u533a\u522b","text":"<p>CephFS \u65e8\u5728\u5c3d\u53ef\u80fd\u9075\u5b88 POSIX \u8bed\u4e49\u3002\u4f8b\u5982\uff0c\u4e0e NFS \u7b49\u8bb8\u591a\u5176\u4ed6\u5e38\u89c1\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\u76f8\u6bd4\uff0cCephFS \u5728\u5ba2\u6237\u7aef\u4e4b\u95f4\u4fdd\u6301\u7f13\u5b58\u7684\u5f3a\u4e00\u81f4\u6027\u3002\u76ee\u6807\u662f\u4f7f\u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u901a\u4fe1\u7684\u8fdb\u7a0b\uff0c\u8fd0\u884c\u5728\u4e0d\u540c\u4e3b\u673a\u4e0a\u65f6\u7684\u884c\u4e3a\u4e0e\u5728\u540c\u4e00\u4e3b\u673a\u4e0a\u65f6\u7684\u884c\u4e3a\u76f8\u540c\u3002</p> <p>\u4f46\u662f\uff0c\u7531\u4e8e\u5404\u79cd\u539f\u56e0\uff0cCephFS \u5728\u4e00\u4e9b\u5730\u65b9\u4e0e\u4e25\u683c\u7684 POSIX \u8bed\u4e49\u5b58\u5728\u5dee\u5f02\uff1a</p> <ul> <li> <p>\u5982\u679c\u5ba2\u6237\u7aef\u6b63\u5728\u5199\u5165\u6587\u4ef6\u5e76\u5931\u8d25\uff0c\u5219\u5176\u5199\u5165\u4e0d\u4e00\u5b9a\u662f\u539f\u5b50\u7684\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5ba2\u6237\u7aef\u53ef\u80fd\u4f1a\u5bf9\u4f7f\u7528 <code>O_SYNC</code> \u548c8 MB \u7f13\u51b2\u533a\u6253\u5f00\u7684\u6587\u4ef6\u8c03\u7528 <code>write(2)</code>\uff0c\u7136\u540e\u5d29\u6e83\uff0c\u5e76\u4e14\u5199\u5165\u53ef\u80fd\u53ea\u90e8\u5206\u5e94\u7528\u3002(\u51e0\u4e4e\u6240\u6709\u6587\u4ef6\u7cfb\u7edf\uff0c\u751a\u81f3\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\uff0c\u90fd\u6709\u8fd9\u79cd\u884c\u4e3a\u3002)</p> </li> <li> <p>\u5728\u4e0d\u540c\u5ba2\u6237\u7aef\u5e76\u53d1\u5199\u5165\u60c5\u51b5\u4e0b\uff0c\u8de8\u8d8a\u5bf9\u8c61\u8fb9\u754c\u7684\u5199\u5165\u4e0d\u4e00\u5b9a\u662f\u539f\u5b50\u7684\u3002\u8fd9\u610f\u5473\u7740\u60a8\u53ef\u4ee5\u8ba9\u5ba2\u6237\u7aef A \u5199\u5165\u201caa|aa\u201d \u7684\u540c\u65f6\uff0c\u5ba2\u6237\u7aef B \u5199\u5165 \u201cbb|bb\u201d \uff08\u5176\u4e2d | \u662f\u5bf9\u8c61\u8fb9\u754c\uff09\uff0c\u6700\u7ec8\u53ef\u80fd\u4f1a\u5f97\u5230 \u201caa|bb\u201d \uff0c\u800c\u4e0d\u662f\u9884\u671f\u7684 \u201caa|aa\u201d \u6216 \u201cbb|bb\u201d\u3002</p> </li> <li> <p>\u7a00\u758f\u6587\u4ef6(1)\u9519\u8bef\u5730\u4f20\u64ad\u5230 <code>stat(2)</code> \u7684 <code>st_blocks</code> \u5b57\u6bb5\u3002\u7531\u4e8e CephFS \u4e0d\u4f1a\u663e\u5f0f\u8ddf\u8e2a\u6587\u4ef6\u7684\u54ea\u4e9b\u90e8\u5206\u88ab\u5206\u914d/\u5199\u5165\uff0c\u56e0\u6b64 <code>st_blocks</code> \u5b57\u6bb5\u59cb\u7ec8\u7531\u6587\u4ef6\u5927\u5c0f\u9664\u4ee5\u5757\u5927\u5c0f\u6765\u586b\u5145\u3002\u8fd9\u5c06\u5bfc\u81f4\u50cf <code>du\uff081\uff09</code> \u8fd9\u6837\u7684\u5de5\u5177\u4f1a\u9ad8\u4f30\u6587\u4ef6\u5360\u7528\u7684\u7a7a\u95f4\u3002\uff08\u7531 CephFS \u7ef4\u62a4\u7684\u9012\u5f52\u5927\u5c0f\u5b57\u6bb5\u5728\u5176\u8ba1\u6570\u4e2d\u8fd8\u5305\u62ec\u6587\u4ef6 \u201c\u7a7a\u6d1e\u201d\u3002</p> <ol> <li>\u6587\u4ef6\u4e2d\u51fa\u73b0\u5927\u91cf\u76840\u6570\u636e\uff0c\u8fd9\u4e9b\u6570\u636e\u5bf9\u6211\u4eec\u7528\u5904\u4e0d\u5927\uff0c\u4f46\u662f\u5374\u4e00\u6837\u7684\u5360\u7528\u7a7a\u95f4.</li> </ol> </li> <li> <p>\u5f53\u4e00\u4e2a\u6587\u4ef6\u901a\u8fc7\u591a\u4e2a\u4e3b\u673a\u4e0a\u7684 <code>mmap(2)</code> \u6620\u5c04\u5230\u5185\u5b58\u4e2d\u65f6\uff0c\u5199\u5165\u4e0d\u4f1a\u4e00\u81f4\u5730\u4f20\u64ad\u5230\u5176\u4ed6\u5ba2\u6237\u7aef\u7684\u7f13\u5b58\u4e2d\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u4e00\u4e2a\u5185\u5b58\u9875\u5728\u4e3b\u673a A \u4e0a\u7f13\u5b58\uff0c\u7136\u540e\u5728\u4e3b\u673a B \u4e0a\u66f4\u65b0\uff0c\u5219\u4e3b\u673a A \u7684\u5185\u5b58\u9875\u4e0d\u4f1a\u4e00\u81f4\u5730\u5931\u6548\u3002(\u5171\u4eab\u7684\u53ef\u5199 mmap \u4f3c\u4e4e\u975e\u5e38\u7f55\u89c1 - \u6211\u4eec\u8fd8\u6ca1\u6709\u542c\u5230\u4efb\u4f55\u5173\u4e8e\u8fd9\u79cd\u884c\u4e3a\u7684\u62b1\u6028\uff0c\u5e76\u4e14\u6b63\u786e\u5b9e\u73b0\u7f13\u5b58\u4e00\u81f4\u6027\u5f88\u590d\u6742\u3002)</p> </li> <li> <p>CephFS \u5ba2\u6237\u7aef\u63d0\u4f9b\u4e00\u4e2a\u9690\u85cf\u7684 <code>.snap</code> \u76ee\u5f55\uff0c\u7528\u4e8e\u8bbf\u95ee\u3001\u521b\u5efa\u3001\u5220\u9664\u548c\u91cd\u547d\u540d\u5feb\u7167\u3002\u867d\u7136 <code>readdir(2)</code> \u4e2d\u6392\u9664\u4e86\u865a\u62df\u76ee\u5f55\uff0c\u4f46\u4efb\u4f55\u5c1d\u8bd5\u521b\u5efa\u540c\u540d\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u8fdb\u7a0b\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a\u9519\u8bef\u4ee3\u7801\u3002\u53ef\u4ee5\u5728\u6302\u8f7d\u65f6\u4f7f\u7528 <code>-o snapdirname=.somethingelse</code>\uff08Linux\uff09 \u6216\u914d\u7f6e\u9009\u9879 <code>client_snapdir</code> \uff08libcephfs\uff0c ceph-fuse\uff09 \u66f4\u6539\u6b64\u9690\u85cf\u76ee\u5f55\u7684\u540d\u79f0\u3002</p> </li> <li> <p>CephFS \u5f53\u524d\u4e0d\u7ef4\u62a4 <code>atime</code> \u5b57\u6bb5\u3002\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u5e76\u4e0d\u5173\u5fc3\uff0c\u5c3d\u7ba1\u8fd9\u4f1a\u5f71\u54cd\u4e00\u4e9b\u5907\u4efd\u548c\u6570\u636e\u5206\u5c42\u5e94\u7528\u7a0b\u5e8f\uff0c\u8fd9\u4e9b\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u5c06\u672a\u4f7f\u7528\u7684\u6570\u636e\u79fb\u52a8\u5230\u8f85\u52a9\u5b58\u50a8\u7cfb\u7edf\u3002\u5bf9\u4e8e\u8fd9\u4e9b\u573a\u666f\uff0c\u60a8\u53ef\u4ee5\u4ee5\u5176\u4ed6\u65b9\u5f0f\u89e3\u51b3\uff0c\u4f8b\u5982\u901a\u8fc7 <code>setattr</code> \u64cd\u4f5c\u8bbe\u7f6e <code>atime</code>\u3002</p> </li> </ul>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/posix/#_1","title":"\u6743\u8861","text":"<p>\u4eba\u4eec\u7ecf\u5e38\u8c08\u8bba \u201cPOSIX \u517c\u5bb9\u6027\u201d\uff0c\u4f46\u5b9e\u9645\u4e0a\u5927\u591a\u6570\u6587\u4ef6\u7cfb\u7edf\u5b9e\u73b0\u5e76\u4e0d\u4e25\u683c\u9075\u5b88\u89c4\u8303\uff0c\u5305\u62ec ext4 \u548c XFS \u7b49\u672c\u5730 Linux \u6587\u4ef6\u7cfb\u7edf\u3002\u4f8b\u5982\uff0c\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u8bfb\u53d6\u7684\u539f\u5b50\u6027\u8981\u6c42\u5f88\u5bbd\u677e\uff1a\u5904\u7406\u6765\u81ea\u540c\u6837\u6b63\u5728\u5199\u5165\u7684\u6587\u4ef6\u7684\u8bfb\u53d6\u53ef\u80fd\u4f1a\u770b\u5230\u88ab\u635f\u574f\u7684\u7ed3\u679c\u3002</p> <p>\u540c\u6837\uff0c\u5f53\u591a\u4e2a\u5ba2\u6237\u7aef\u4e0e\u76f8\u540c\u7684\u6587\u4ef6\u6216\u76ee\u5f55\u4ea4\u4e92\u65f6\uff0cNFS \u7684\u4e00\u81f4\u6027\u8bed\u4e49\u975e\u5e38\u5f31\uff0c\u9075\u5faa \u201cclose-to-open\u201d\u539f\u5219\u3002\u5728\u7f51\u7edc\u9644\u52a0\u5b58\u50a8\u7684\u9886\u57df\u4e2d\uff0c\u5927\u591a\u6570\u573a\u666f\u4f7f\u7528\u7684\u90fd\u662f NFS\uff0c\u670d\u52a1\u5668\u7684\u6587\u4ef6\u7cfb\u7edf\u662f\u5426\u5b8c\u5168\u7684\u201cPOSIX \u517c\u5bb9\u201d\u53ef\u80fd\u65e0\u5173\u7d27\u8981\uff0c\u5ba2\u6237\u7aef\u5e94\u7528\u7a0b\u5e8f\u662f\u5426\u6ce8\u610f\u5230\u8fd9\u4e2a\u95ee\u9898\uff0c\u53d6\u51b3\u4e8e\u6570\u636e\u662f\u5426\u5728\u5ba2\u6237\u7aef\u4e4b\u95f4\u5171\u4eab\u3002NFS \u8fd8\u53ef\u80fd\u201c\u7834\u574f\u201d\u5e76\u53d1\u5199\u5165\u7684\u7ed3\u679c\uff0c\u56e0\u4e3a\u5ba2\u6237\u7aef\u6570\u636e\u76f4\u5230\u6587\u4ef6\u5173\u95ed\u53ef\u80fd\u90fd\u4e0d\u4f1a\u88ab\u5237\u65b0\u5230\u670d\u52a1\u5668\uff08\u66f4\u666e\u904d\u5730\u8bf4\uff0c\u5728\u65f6\u5ef6\u65b9\u9762\uff0cNFS\u5199\u5165\u4f1a\u6bd4CEPHFS\u5927\u5f97\u591a\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5e76\u53d1\u5199\u5165\u7684\u7ed3\u679c\u66f4\u96be\u9884\u6d4b\uff09\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/posix/#_2","title":"\u57fa\u7ebf","text":"<p>\u5728POSIX\u517c\u5bb9\u6027\u4e0a\uff0cCephFS \u6bd4 Linux \u5185\u6838\u7684\u672c\u5730\u6587\u4ef6\u7cfb\u7edf\u66f4\u5bbd\u677e\uff08\u4f8b\u5982\uff0c\u8de8\u5bf9\u8c61\u8fb9\u754c\u7684\u5199\u5165\u53ef\u80fd\u4f1a\u88ab\u6495\u88c2\uff09\u3002\u5728\u591a\u5ba2\u6237\u7aef\u4e00\u81f4\u6027\u65b9\u9762\uff0c\u5b83\u6bd4 NFS \u4e25\u683c\u7684\u591a\uff0c\u5728\u5199\u5165\u539f\u5b50\u6027\u65b9\u9762\u4e00\u822c\u4f1a\u6bd4 NFS \u66f4\u4e25\u683c\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5f53\u6d89\u53ca\u5230POSIX\u517c\u5bb9\u6027\u65f6\uff1a <pre><code>HDFS &lt; NFS &lt; CephFS &lt; {XFS, ext4}\n</code></pre></p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/posix/#fsync","title":"<code>fsync()</code>\u548c\u9519\u8bef","text":"<p>\u5728 <code>fsync()</code> \u8fd4\u56de\u9519\u8bef\u540e\uff0cPOSIX \u5bf9 inode \u7684\u72b6\u6001\u6709\u4e9b\u6a21\u7cca\u3002\u901a\u5e38\uff0cCephFS \u5728\u5ba2\u6237\u7aef\u5185\u6838\u4e2d\u4f7f\u7528\u6807\u51c6\u9519\u8bef\u8fd4\u56de\u673a\u5236\uff0c\u56e0\u6b64\u9075\u5faa\u4e0e\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u76f8\u540c\u7684\u7ea6\u5b9a\u3002</p> <p>\u5728\u73b0\u4ee3 Linux \u5185\u6838\uff08v4.17 \u6216\u66f4\u9ad8\u7248\u672c\uff09\u4e2d\uff0c\u5c06\u5411\u9519\u8bef\u53d1\u751f\u65f6\u6253\u5f00\u7684\u6bcf\u4e2a\u6587\u4ef6\u63cf\u8ff0\u7b26\u62a5\u544a\u4e00\u6b21\u5199\u56de\u9519\u8bef\u3002\u6b64\u5916\uff0c\u5728\u6253\u5f00\u6587\u4ef6\u63cf\u8ff0\u7b26\u4e4b\u524d\u53d1\u751f\u7684\u672a\u62a5\u544a\u9519\u8bef\u4e5f\u5c06\u5728 <code>fsync()</code> \u4e0a\u8fd4\u56de\u3002</p>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/snapshots/","title":"CephFS \u5feb\u7167","text":"<p>CephFS \u5feb\u7167\u662f CephFS \u6587\u4ef6\u7cfb\u7edf\u5728\u7279\u5b9a\u65f6\u95f4\u70b9\u7684\u4e0d\u53ef\u53d8\u89c6\u56fe\u3002CephFS \u5feb\u7167\u5728\u540d\u4e3a <code>.snap</code> \u7684\u7279\u6b8a\u9690\u85cf\u5b50\u76ee\u5f55\u4e2d\u7ba1\u7406\u3002\u8981\u521b\u5efa CephFS \u5feb\u7167\uff0c\u8bf7\u5728.snap \u76ee\u5f55\u4e2d\u4f7f\u7528 <code>mkdir</code> \u547d\u4ee4\u3002</p> <p>\u5feb\u7167\u53ef\u4ee5\u901a\u8fc7\u66f4\u6539\u4ee5\u4e0b\u5ba2\u6237\u7aef\u914d\u7f6e\u6765\u66b4\u9732\u4e0d\u540c\u7684\u540d\u79f0\uff1a</p> <ul> <li><code>snapdirname</code>: \u5185\u6838\u5ba2\u6237\u7aef\u7684\u6302\u8f7d\u9009\u9879\u3002</li> <li><code>client_snapdir</code>: ceph-fuse \u7684\u6302\u8f7d\u9009\u9879\u3002</li> </ul>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/snapshots/#_1","title":"\u521b\u5efa\u5feb\u7167","text":"<p>CephFS \u5feb\u7167\u529f\u80fd\u9ed8\u8ba4\u542f\u7528\u5728\u65b0\u6587\u4ef6\u7cfb\u7edf\u4e0a\u3002\u8981\u5728\u73b0\u6709\u6587\u4ef6\u7cfb\u7edf\u4e0a\u542f\u7528 CephFS \u5feb\u7167\u529f\u80fd\uff0c\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u3002</p> <pre><code>$ ceph fs set &lt;fs_name&gt; allow_new_snaps true\n</code></pre> <p>\u5f53\u542f\u7528\u5feb\u7167\u65f6\uff0cCephFS\u4e2d\u7684\u6240\u6709\u76ee\u5f55\u90fd\u5c06\u5177\u6709\u4e00\u4e2a\u7279\u6b8a\u7684<code>.snap</code>\u76ee\u5f55(\u60a8\u53ef\u4ee5\u4f7f\u7528\u5ba2\u6237\u7aef\u7684<code>snapdir</code>\u53c2\u6570\u914d\u7f6e\u4e3a\u5176\u4ed6\u540d\u79f0\u3002)\u3002\u8981\u5728\u76ee\u5f55<code>/file1/</code>\u4e0a\u521b\u5efaCephFS\u5feb\u7167,\u8bf7\u5728.snap\u76ee\u5f55\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a<code>snapshot-name</code>\u7684\u5b50\u76ee\u5f55\u3002\u4f8b\u5982,\u8981\u5728<code>/file1/</code>\u4e0a\u521b\u5efa\u5feb\u7167,\u8bf7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4:</p> <pre><code>$ touch file1\n$ cd .snap\n$ mkdir my_snapshot\n</code></pre>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/snapshots/#_2","title":"\u4f7f\u7528\u5feb\u7167\u6062\u590d\u6570\u636e","text":"<p>\u5feb\u7167\u4e5f\u53ef\u4ee5\u7528\u4e8e\u6062\u590d\u5220\u9664\u7684\u6587\u4ef6:</p> <p>\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6file1\uff0c\u800c\u540e\u521b\u5efa\u4e00\u4e2a\u5feb\u7167snap1</p> <pre><code>$ touch /mnt/cephfs/file1\n$ cd .snap\n$ mkdir snap1\n</code></pre> <p>\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6file2\uff0c\u800c\u540e\u521b\u5efa\u4e00\u4e2a\u5feb\u7167snap2</p> <p><pre><code>$ touch /mnt/cephfs/file2\n$ cd .snap\n$ mkdir snap2\n</code></pre> \u5220\u9664\u6587\u4ef6file1\uff0c\u800c\u540e\u521b\u5efa\u4e00\u4e2a\u5feb\u7167snap3</p> <p><pre><code>$ rm /mnt/cephfs/file1\n$ cd .snap\n$ mkdir snap3\n</code></pre> \u4f7f\u7528cp\u547d\u4ee4\u6062\u590d\u6587\u4ef6file1</p> <pre><code>$ cd .snap\n$ cd snap2\n$ cp file1 /mnt/cephfs/\n</code></pre>"},{"location":"ceph_doc/ceph_file_system/cephfs_concepts/snapshots/#_3","title":"\u5220\u9664\u5feb\u7167","text":"<p>\u5feb\u7167\u53ef\u4ee5\u901a\u8fc7\u5728\u5b83\u4eec\u7684.snap\u76ee\u5f55\u4e2d\u8fd0\u884crmdir\u6765\u5220\u9664\u3002\uff08\u5c1d\u8bd5\u5220\u9664\u5feb\u7167\u7684\u6839\u76ee\u5f55\u5c06\u5931\u8d25\u3002\u60a8\u5fc5\u987b\u9996\u5148\u5220\u9664\u5feb\u7167\u3002\uff09</p> <pre><code>$ cd .snap\n$ rmdir my_snapshot\n</code></pre>"},{"location":"ceph_doc/ceph_file_system/developer-guides/capabilities/","title":"\u5ba2\u6237\u7aef\u6743\u9650\uff08Caps\uff09","text":"<p>\u5f53\u5ba2\u6237\u7aef\u60f3\u8981\u64cd\u4f5c inode \u65f6\uff0c\u5b83\u4f1a\u4ee5\u5404\u79cd\u65b9\u5f0f\u53bb\u67e5\u8be2 MDS\uff0c\u4ece\u800c\u83b7\u53d6\u4e00\u7ec4Caps\uff0c\u4ee5\u4fdd\u8bc1\u5ba2\u6237\u7aef\u5b89\u5168\u7684\u5728 inode \u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\u4e0e\u5176\u4ed6\u7f51\u7edc\u6587\u4ef6\u7cfb\u7edf\uff08\u4f8b\u5982 NFS \u6216 SMB\uff09\u76f8\u6bd4\uff0cCephFS \u4e2d\u7684\u80fd\u529b\u975e\u5e38\u7cbe\u7ec6\uff0c\u5e76\u4e14\u53ef\u80fd\u6709\u591a\u4e2a\u5ba2\u6237\u7aef\u5728\u540c\u4e00 inode \u4e0a\u6301\u6709\u4e0d\u540c\u7684Caps\u3002</p>"},{"location":"ceph_doc/ceph_file_system/developer-guides/capabilities/#caps_1","title":"Caps \u7c7b\u578b","text":"<p>\u4e0b\u9762\u662f\u4e00\u4e9b\u901a\u7528\u7684Caps\u6bd4\u7279\u4f4d\uff0c\u4ee3\u8868\u4e0d\u540cCaps\u5bf9\u5e94\u7684\u80fd\u529b\uff1a</p> <pre><code>/* generic cap bits */\n#define CEPH_CAP_GSHARED     1  /* (metadata) client can read (s) */\n#define CEPH_CAP_GEXCL       2  /* (metadata) client can read and update (x) */\n#define CEPH_CAP_GCACHE      4  /* (file) client can cache reads (c) */\n#define CEPH_CAP_GRD         8  /* (file) client can read (r) */\n#define CEPH_CAP_GWR        16  /* (file) client can write (w) */\n#define CEPH_CAP_GBUFFER    32  /* (file) client can buffer writes (b) */\n#define CEPH_CAP_GWREXTEND  64  /* (file) client can extend EOF (a) */\n#define CEPH_CAP_GLAZYIO   128  /* (file) client can perform lazy io (l) */\n</code></pre> <p>\u800c\u540e\u8fd9\u4e9b\u901a\u7528\u7684\u6bd4\u7279\u4f4d\u88ab\u79fb\u52a8\u4e86\u7279\u5b9a\u7684\u4f4d\u6570\uff0c\u4ee3\u8868\u5bf9\u5e94\u7684Caps\u80fd\u529b\u662f\u9488\u5bf9inode\u7684\u6570\u636e\u6216\u5143\u6570\u636e\u7684\u54ea\u4e9b\u90e8\u5206\u3002</p> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\u524d\u8005\u5b9a\u4e49\u4e86Caps\u7684\u6743\u9650\uff0c\u540e\u8005\u5b9a\u4e49\u4e86Caps\u7684\u6743\u9650\u4f5c\u7528\u7684\u5bf9\u8c61\u3002</p> <pre><code>/* per-lock shift */\n#define CEPH_CAP_SAUTH      2 /* A */\n#define CEPH_CAP_SLINK      4 /* L */\n#define CEPH_CAP_SXATTR     6 /* X */\n#define CEPH_CAP_SFILE      8 /* F */\n</code></pre> <p>\u6ce8\u610f\uff0c\u5bf9\u4e8e\u5176\u4e2d\u7684\u4e00\u4e9b\u79fb\u4f4d\u6570\uff0c\u53ea\u6709\u7279\u5b9a\u7684\u901a\u7528Caps\u7c7b\u578b\u624d\u4f1a\u88ab\u6388\u4e88\u3002\u4f8b\u5982\uff0c\u53ea\u6709FILE\u5bf9\u5e94\u7684Caps\u4f1a\u6709\u8d85\u8fc7\u4e24\u4e2a\u6bd4\u7279\u6765\u8868\u793a\u3002</p> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06Caps\u5206\u4e3a\u591a\u4e2a\u533a\u57df\uff0c\u6bcf\u4e2a\u533a\u57df\u7684\u4e0d\u540cbit\u4ee3\u8868\u5bf9\u5e94\u4e00\u79cd\u8d44\u6e90\u7684\u4e00\u7c7bCaps\u3002</p> <pre><code>| PIN | AUTH | LINK | XATTR | FILE\n0     2      4      6       8\n</code></pre> <p>\u901a\u8fc7\u4ee5\u4e0a\u63cf\u8ff0\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5e38\u91cf\uff0c\u8fd9\u4e9b\u5e38\u91cf\u662f\u901a\u8fc7\u5c06\u6bcf\u4e2abit\u503c\u79fb\u52a8\u5230\u6b63\u786e\u7684bit\u4f4d\u6765\u751f\u6210\u7684\uff1a</p> <pre><code>#define CEPH_CAP_AUTH_SHARED  (CEPH_CAP_GSHARED  &lt;&lt; CEPH_CAP_SAUTH)\n</code></pre> <p>\u53ef\u4ee5\u901a\u8fc7\u5c06\u8fd9\u4e9b\u5e38\u91cf\u901a\u8fc7\u6216\u8fd0\u7b97\u6765\u751f\u6210\u4e00\u4e2abitmask\uff0c\u4ee5\u8868\u793a\u4e00\u7ec4Caps\u3002</p> <p>\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5916\uff1a</p> <pre><code>#define CEPH_CAP_PIN  1  /* no specific capabilities beyond the pin */\n</code></pre> <p>\"pin\" \u53ea\u662f\u5c06inode\u56fa\u5b9a\u5230\u5185\u5b58\u4e2d\uff0c\u800c\u4e0d\u6388\u4e88\u4efb\u4f55\u5176\u4ed6Caps\u3002</p> <p>\u56fe\u5f62\u5316\u8868\u793a\u5982\u4e0b\uff1a:</p> <pre><code>+---+---+---+---+---+---+---+---+\n| p | _ |As   x |Ls   x |Xs   x |\n+---+---+---+---+---+---+---+---+\n|Fs   x   c   r   w   b   a   l |\n+---+---+---+---+---+---+---+---+\n</code></pre> <p>\u7b2c\u4e8c\u4e2abit\u76ee\u524d\u672a\u4f7f\u7528\u3002</p>"},{"location":"ceph_doc/ceph_file_system/developer-guides/capabilities/#caps_2","title":"\u6bcf\u4e2aCaps\u6388\u4e88\u7684\u80fd\u529b","text":"<p>\u4e0a\u8ff0\u63cf\u8ff0\u4e86\u5982\u4f55\u6388\u4e88Caps\uff08\u4ee5\u53ca\u8868\u8fbe\uff09\uff0c\u4f46\u66f4\u4e3a\u5173\u952e\u7684\u662f\u83b7\u53d6\u5bf9\u5e94Caps\u7684\u5ba2\u6237\u7aef\u53ef\u4ee5\u505a\u54ea\u4e9b\u64cd\u4f5c\uff1a</p> <ul> <li> <p>PIN: \u5c06inode\u56fa\u5b9a\u5230\u5185\u5b58\u4e2d\u3002\u8fd9\u5141\u8bb8\u5ba2\u6237\u7aef\u83b7\u53d6inode\u7f16\u53f7\uff0c\u4ee5\u53ca\u5176\u4ed6\u4e0d\u53ef\u53d8\u7684\u4e1c\u897f\uff0c\u5982\u8bbe\u5907inode\u4e2d\u7684major\u6216minor\u6570\u5b57\uff0c\u6216\u7b26\u53f7\u94fe\u63a5\u7684\u5185\u5bb9\u3002</p> </li> <li> <p>AUTH: \u5141\u8bb8\u5ba2\u6237\u7aef\u83b7\u53d6\u4e0e\u8eab\u4efd\u9a8c\u8bc1\u76f8\u5173\u7684\u5143\u6570\u636e\u3002\u7279\u522b\u662f\u6240\u6709\u8005\u3001\u7ec4\u548c\u6a21\u5f0f\u3002\u8bf7\u6ce8\u610f\uff0c\u6267\u884c\u5b8c\u6574\u7684\u6743\u9650\u68c0\u67e5\u53ef\u80fd\u8fd8\u9700\u8981\u8bbf\u95eeACL\uff0c\u8fd9\u4e9bACL\u5b58\u50a8\u5728xattrs\u4e2d\u3002</p> </li> </ul> <p>LINK: The link count of the inode. - LINK: \u5141\u8bb8\u5ba2\u6237\u7aef\u64cd\u4f5cinode\u7684\u94fe\u63a5\u8ba1\u6570\u3002</p> <p>XATTR: Ability to access or manipulate xattrs. Note that since ACLs are stored in xattrs, it\u2019s also sometimes necessary to access them when checking permissions. - XATTR: \u5141\u8bb8\u5ba2\u6237\u7aef\u8bbf\u95ee\u6216\u64cd\u4f5cxattrs\u3002\u8bf7\u6ce8\u610f\uff0c\u7531\u4e8eACL\u5b58\u50a8\u5728xattrs\u4e2d\uff0c\u56e0\u6b64\u5728\u68c0\u67e5\u6743\u9650\u65f6\u53ef\u80fd\u8fd8\u9700\u8981\u8bbf\u95ee\u5b83\u4eec\u3002</p> <ul> <li>FILE: \u8fd9\u4e2a\u662f\u6700\u91cd\u8981\u7684\u3002\u8fd9\u5141\u8bb8\u5ba2\u6237\u7aef\u8bbf\u95ee\u548c\u64cd\u4f5c\u6587\u4ef6\u6570\u636e\u3002\u5b83\u8fd8\u5305\u62ec\u4e0e\u6587\u4ef6\u6570\u636e\u76f8\u5173\u7684\u67d0\u4e9b\u5143\u6570\u636e\uff0c\u7279\u522b\u662f\u5927\u5c0f\u3001mtime\u3001atime\u548cctime\u3002 </li> </ul>"},{"location":"ceph_doc/ceph_file_system/developer-guides/capabilities/#_1","title":"\u7b80\u5199","text":"<p>\u5ba2\u6237\u7aef\u5728\u65e5\u5fd7\u4e2d\u53ef\u80fd\u4f1a\u5448\u73b0Caps\u7684\u7b80\u5199\u8868\u793a\u3002\u4f8b\u5982\uff1a</p> <pre><code>pAsLsXsFs\n</code></pre> <p><code>p</code> \u8868\u793aPIN\u3002 \u6bcf\u4e2a\u5927\u5199\u5b57\u6bcd\u5bf9\u5e94\u4e8e\u79fb\u4f4d\u503c\uff0c\u6bcf\u4e2a\u79fb\u4f4d\u540e\u63a5\u7684\u5c0f\u5199\u5b57\u6bcd\u8868\u793a\u6bcf\u4e2a\u79fb\u4f4d\u4e2d\u6388\u4e88\u7684\u5b9e\u9645\u80fd\u529b\u3002</p>"},{"location":"ceph_doc/ceph_file_system/developer-guides/capabilities/#caps_3","title":"\u9501\u72b6\u6001\u4e0eCaps\u7684\u5173\u7cfb","text":"<p>\u5728MDS\u4e2d\uff0c\u6bcf\u4e2ainode\u90fd\u6709\u56db\u4e2a\u4e0d\u540c\u7684\u9501\uff0c\u5b83\u4eec\u662fsimplelock\u3001scatterlock\u3001filelock\u548clocallock\u3002\u6bcf\u4e2a\u9501\u6709\u51e0\u4e2a\u4e0d\u540c\u7684\u9501\u72b6\u6001\uff0cMDS\u5c06\u6839\u636e\u9501\u72b6\u6001\u5411\u5ba2\u6237\u7aef\u6388\u4e88Caps\u3002</p> <p>\u5728 MDS Locker\u7684\u6bcf\u4e2a\u72b6\u6001\u4e0b\uff0cMDS Locker \u603b\u662f\u4f1a\u5c1d\u8bd5\u5411\u5ba2\u6237\u7aef\u6388\u4e88\u6240\u6709\u5141\u8bb8\u7684Caps\uff0c\u5373\u4f7f\u5ba2\u6237\u7aef\u4e0d\u9700\u8981\u67d0\u4e9bCaps\uff0c\u56e0\u4e3a\u9884\u5148\u6388\u4e88\u80fd\u529b\u53ef\u80fd\u4f1a\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u51cf\u5c11\u5ef6\u8fdf\u3002</p> <p>If there is only one client, usually it will be the loner client for all the inodes. While in multiple clients case, the MDS will try to calculate a loner client out for each inode depending on the capabilities the clients (needed | wanted), but usually it will fail. The loner client will always get all the capabilities.</p> <p>The filelock will control files\u2019 partial metadatas\u2019 and the file contents\u2019 access permissions. The metadatas include mtime, atime, size, etc. filelock \u63a7\u5236\u6587\u4ef6\u7684\u90e8\u5206\u5143\u6570\u636e\u548c\u6587\u4ef6\u5185\u5bb9\u7684\u8bbf\u95ee\u6743\u9650\u3002\u5143\u6570\u636e\u5305\u62ecmtime\u3001atime\u3001size\u7b49\u3002</p> <p>Fs: Once a client has it, all other clients are denied Fw. - Fs: </p> <p>Fx: Only the loner client is allowed this capability. Once the lock state transitions to LOCK_EXCL, the loner client is granted this along with all other file capabilities except the Fl.</p> <p>Fr: Once a client has it, the Fb capability will be already revoked from all the other clients.</p> <p>If clients only request to read the file, the lock state will be transferred to LOCK_SYNC stable state directly. All the clients can be granted Fscrl capabilities from the auth MDS and Fscr capabilities from the replica MDSes.</p> <p>If multiple clients read from and write to the same file, then the lock state will be transferred to LOCK_MIX stable state finally and all the clients could have the Frwl capabilities from the auth MDS, and the Fr from the replica MDSes. The Fcb capabilities won\u2019t be granted to all the clients and the clients will do sync read/write.</p> <p>Fw: If there is no loner client and once a client have this capability, the Fsxcb capabilities won\u2019t be granted to other clients.</p> <p>If multiple clients read from and write to the same file, then the lock state will be transferred to LOCK_MIX stable state finally and all the clients could have the Frwl capabilities from the auth MDS, and the Fr from the replica MDSes. The Fcb capabilities won\u2019t be granted to all the clients and the clients will do sync read/write.</p> <p>Fc: This capability means the clients could cache file read and should be issued together with Fr capability and only in this use case will it make sense.</p> <p>While actually in some stable or interim transitional states they tend to keep the Fc allowed even the Fr capability isn\u2019t granted as this can avoid forcing clients to drop full caches, for example on a simple file size extension or truncating use case.</p> <p>Fb: This capability means the clients could buffer file write and should be issued together with Fw capability and only in this use case will it make sense.</p> <p>While actually in some stable or interim transitional states they tend to keep the Fc allowed even the Fw capability isn\u2019t granted as this can avoid forcing clients to drop dirty buffers, for example on a simple file size extension or truncating use case.</p> <p>Fl: This capability means the clients could perform lazy io. LazyIO relaxes POSIX semantics. Buffered reads/writes are allowed even when a file is opened by multiple applications on multiple clients. Applications are responsible for managing cache coherency themselves.</p>"},{"location":"lc/","title":"\u5237\u9898\u8bb0\u5f55","text":""},{"location":"lc/algo/","title":"\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5","text":""},{"location":"lc/algo/array/","title":"Array","text":"<p>\u6570\u7ec4\u662f\u6700\u4e3a\u5e38\u89c1\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002\u7279\u70b9\u4e3a\uff1a</p> <ul> <li>\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5728\u5185\u5b58\u4e2d\u662f\u8fde\u7eed\u5b58\u50a8\u7684\u3002</li> <li>\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002</li> <li>\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\u3002</li> <li>\u6570\u7ec4\u7684\u8bbf\u95ee\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(1)\u3002</li> <li>\u6570\u7ec4\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002</li> </ul> <p>\u6570\u7ec4\u7684\u6839\u672c\u7279\u6027\u662f\u4e00\u6bb5\u8fde\u7eed\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u7531\u6b64\u51b3\u5b9a\u5b83\u53ef\u4ee5\u5bfb\u79e9\u8bbf\u95ee\uff0c\u5373\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u76f4\u63a5\u8bbf\u95ee\u5230\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u3002</p>"},{"location":"lc/algo/array/#_1","title":"\u6392\u5e8f\u7b97\u6cd5","text":""},{"location":"lc/algo/array/#_2","title":"\u5192\u6ce1\u6392\u5e8f","text":"<p>\u5192\u6ce1\u6392\u5e8f\u662f\u4e00\u79cd\u7b80\u5355\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u91cd\u590d\u5730\u904d\u5386\u8981\u6392\u5e8f\u7684\u6570\u5217\uff0c\u4e00\u6b21\u6bd4\u8f83\u4e24\u4e2a\u5143\u7d20\uff0c\u5982\u679c\u5b83\u4eec\u7684\u987a\u5e8f\u9519\u8bef\u5c31\u628a\u5b83\u4eec\u4ea4\u6362\u8fc7\u6765\u3002\u904d\u5386\u6570\u5217\u7684\u5de5\u4f5c\u662f\u91cd\u590d\u5730\u8fdb\u884c\u76f4\u5230\u6ca1\u6709\u518d\u9700\u8981\u4ea4\u6362\uff0c\u4e5f\u5c31\u662f\u8bf4\u8be5\u6570\u5217\u5df2\u7ecf\u6392\u5e8f\u5b8c\u6210\u3002\u8fd9\u4e2a\u7b97\u6cd5\u7684\u540d\u5b57\u7531\u6765\u662f\u56e0\u4e3a\u8d8a\u5c0f\u7684\u5143\u7d20\u4f1a\u7ecf\u7531\u4ea4\u6362\u6162\u6162\u201c\u6d6e\u201d\u5230\u6570\u5217\u7684\u9876\u7aef\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nvoid sort(vector&lt;int&gt;&amp; arr) {\n    int size = arr.size();\n    bool swap = true;\n\n    while(swap) {\n        for (int i = 1; i &lt; size; ++i) {\n            swap = false;\n            if (arr[i - 1] &gt; arr[i]) {\n                swap = true;\n                int temp = arr[i - 1];\n                arr[i - 1] = arr[i];\n                arr[i] = temp;\n            }\n        }\n    }\n}\n\nint main() {\n    vector&lt;int&gt; arr = {5, 2, 4, 6, 1, 3};\n    sort(arr);\n    for (int i = 0; i &lt; arr.size(); ++i) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"lc/algo/array/#_3","title":"\u9009\u62e9\u6392\u5e8f","text":"<p>\u9009\u62e9\u6392\u5e8f\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u6bcf\u4e00\u6b21\u4ece\u5f85\u6392\u5e8f\u7684\u6570\u636e\u5143\u7d20\u4e2d\u9009\u51fa\u6700\u5c0f\uff08\u6216\u6700\u5927\uff09\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u5b58\u653e\u5728\u5e8f\u5217\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u76f4\u5230\u5168\u90e8\u5f85\u6392\u5e8f\u7684\u6570\u636e\u5143\u7d20\u6392\u5b8c\u3002\u9009\u62e9\u6392\u5e8f\u662f\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u65b9\u6cd5\u3002\u4e0d\u7a33\u5b9a\u7684\u6392\u5e8f\u7b97\u6cd5\u662f\u6307\u90a3\u4e9b\u53ef\u80fd\u4f1a\u6539\u53d8\u76f8\u540c\u5143\u7d20\u7684\u76f8\u5bf9\u987a\u5e8f\u7684\u6392\u5e8f\u7b97\u6cd5\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nvoid sort(vector&lt;int&gt;&amp; arr) {\n    int n = arr.size();\n    for (int i = 0; i &lt; n - 1; ++i) {\n        int min_idx = i;\n        for (int j = i + 1; j &lt; n; ++j) {\n            if (arr[j] &lt; arr[min_idx]) {\n                min_idx = j;\n            }\n        }\n        swap(arr[i], arr[min_idx]);\n    }\n}\n</code></pre>"},{"location":"lc/algo/array/#_4","title":"\u63d2\u5165\u6392\u5e8f","text":"<p>\u63d2\u5165\u6392\u5e8f\u662f\u4e00\u79cd\u7b80\u5355\u76f4\u89c2\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u5b83\u7684\u5de5\u4f5c\u539f\u7406\u662f\u901a\u8fc7\u6784\u5efa\u6709\u5e8f\u5e8f\u5217\uff0c\u5bf9\u4e8e\u672a\u6392\u5e8f\u6570\u636e\uff0c\u5728\u5df2\u6392\u5e8f\u5e8f\u5217\u4e2d\u4ece\u540e\u5411\u524d\u626b\u63cf\uff0c\u627e\u5230\u76f8\u5e94\u4f4d\u7f6e\u5e76\u63d2\u5165\u3002\u63d2\u5165\u6392\u5e8f\u5728\u5b9e\u73b0\u4e0a\uff0c\u901a\u5e38\u91c7\u7528 in-place \u6392\u5e8f\uff08\u5373\u53ea\u9700\u7528\u5230 O(1)\u7684\u989d\u5916\u7a7a\u95f4\u7684\u6392\u5e8f\uff09\uff0c\u56e0\u800c\u5728\u4ece\u540e\u5411\u524d\u626b\u63cf\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u53cd\u590d\u628a\u5df2\u6392\u5e8f\u5143\u7d20\u9010\u6b65\u5411\u540e\u632a\u4f4d\uff0c\u4e3a\u6700\u65b0\u5143\u7d20\u63d0\u4f9b\u63d2\u5165\u4f4d\u7f6e\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nvoid sort(vector&lt;int&gt;&amp; arr) {\n    int n = arr.size();\n    for (int i = 1; i &lt; n; ++i) {\n        int cur = arr[i];\n        int idx = i;\n        for (int j = i-1; j &gt;= 0; --j) {\n            if (arr[j] &gt; cur) {\n                idx = j;\n                arr[j+1] = arr[j];\n            }\n        }\n        arr[idx] = cur;\n    }\n}\n</code></pre>"},{"location":"lc/algo/array/#_5","title":"\u5f52\u5e76\u6392\u5e8f","text":"<p>\u5f52\u5e76\u6392\u5e8f\u662f\u4e00\u79cd\u5206\u6cbb\u7b97\u6cd5\u3002\u5176\u601d\u60f3\u662f\u5c06\u5f85\u6392\u5e8f\u7684\u6570\u7ec4\u5206\u6210\u4e24\u4e2a\u5b50\u6570\u7ec4\uff0c\u5206\u522b\u5bf9\u4e24\u4e2a\u5b50\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u7136\u540e\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5b50\u6570\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\u3002\u5f52\u5e76\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(nlogn)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(n)\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\n\nvoid merge(vector&lt;int&gt;&amp; arr, int left, int mid, int right) {\n    int n1 = mid - left + 1;\n    int n2 = right - mid;\n    vector&lt;int&gt; L(n1);\n    vector&lt;int&gt; R(n2);\n    for (int i = 0; i &lt; n1; ++i) {\n        L[i] = arr[left + i];\n    }\n    for (int i = 0; i &lt; n2; ++i) {\n        R[i] = arr[mid + i + 1];\n    }\n    int i = 0, j = 0, k = left;\n    while (i &lt; n1 &amp;&amp; j &lt; n2) {\n        if (L[i] &lt;= R[j]) {\n            arr[k] = L[i];\n            i++;\n        } else {\n            arr[k] = R[j];\n            j++;\n        }\n        k++;\n    }\n    while (i &lt; n1) {\n        arr[k] = L[i];\n        i++;\n        k++;\n    }\n    while (j &lt; n2) {\n        arr[k] = R[j];\n        j++;\n        k++;\n    }\n}\nvoid mergeSort(vector&lt;int&gt;&amp; arr, int left, int right) {\n    if (left &lt; right) {\n        int mid = left + (right - left) / 2;\n        mergeSort(arr, left, mid);\n        mergeSort(arr, mid + 1, right);\n        merge(arr, left, mid, right);\n    }\n}\nint main() {\n    vector&lt;int&gt; arr = {5, 2, 4, 6, 1, 3};\n    mergeSort(arr, 0, arr.size() - 1);\n    for (int i = 0; i &lt; arr.size(); ++i) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"lc/algo/array/#_6","title":"\u5feb\u901f\u6392\u5e8f","text":"<p>\u5feb\u901f\u6392\u5e8f\u662f\u4e00\u79cd\u5206\u6cbb\u7b97\u6cd5\u3002\u5176\u601d\u60f3\u662f\u9009\u62e9\u4e00\u4e2a\u57fa\u51c6\u5143\u7d20\uff0c\u5c06\u6570\u7ec4\u5206\u6210\u4e24\u4e2a\u5b50\u6570\u7ec4\uff0c\u5176\u4e2d\u4e00\u4e2a\u5b50\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u90fd\u5c0f\u4e8e\u57fa\u51c6\u5143\u7d20\uff0c\u53e6\u4e00\u4e2a\u5b50\u6570\u7ec4\u7684\u6240\u6709\u5143\u7d20\u90fd\u5927\u4e8e\u57fa\u51c6\u5143\u7d20\u3002\u7136\u540e\u5bf9\u8fd9\u4e24\u4e2a\u5b50\u6570\u7ec4\u5206\u522b\u8fdb\u884c\u5feb\u901f\u6392\u5e8f\uff0c\u6700\u540e\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5b50\u6570\u7ec4\u5408\u5e76\u6210\u4e00\u4e2a\u6709\u5e8f\u7684\u6570\u7ec4\u3002\u5feb\u901f\u6392\u5e8f\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(nlogn)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a O(logn)</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\nusing namespace std;\nint partition(vector&lt;int&gt;&amp; arr, int left, int right) {\n    int pivot = arr[right];\n    int i = left - 1;\n    for (int j = left; j &lt; right; ++j) {\n        if (arr[j] &lt;= pivot) {\n            i++;\n            swap(arr[i], arr[j]);\n        }\n    }\n    swap(arr[i + 1], arr[right]);\n    return i + 1;\n}\nvoid quickSort(vector&lt;int&gt;&amp; arr, int left, int right) {\n    if (left &lt; right) {\n        int pivot = partition(arr, left, right);\n        quickSort(arr, left, pivot - 1);\n        quickSort(arr, pivot + 1, right);\n    }\n}\nint main() {\n    vector&lt;int&gt; arr = {5, 2, 4, 6, 1, 3};\n    quickSort(arr, 0, arr.size() - 1);\n    for (int i = 0; i &lt; arr.size(); ++i) {\n        cout &lt;&lt; arr[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre>"},{"location":"lc/algo/array/#_7","title":"\u5bf9\u6bd4","text":"\u6392\u5e8f\u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u7a7a\u95f4\u590d\u6742\u5ea6 \u7a33\u5b9a\u6027 \u5192\u6ce1\u6392\u5e8f O(n^2) O(1) \u7a33\u5b9a \u9009\u62e9\u6392\u5e8f O(n^2) O(1) \u4e0d\u7a33\u5b9a \u63d2\u5165\u6392\u5e8f O(n^2) O(1) \u7a33\u5b9a \u5f52\u5e76\u6392\u5e8f O(nlogn) O(n) \u7a33\u5b9a \u5feb\u901f\u6392\u5e8f O(nlogn) O(logn) \u4e0d\u7a33\u5b9a"},{"location":"lc/algo/array/#_8","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>\u5bf9\u4e8e\u6709\u5e8f\u6570\u7ec4\uff0c\u76f8\u8f83\u4e8e\u7ebf\u6027\u626b\u63cf\uff0c\u4e8c\u5206\u67e5\u627e\u53ef\u4ee5\u5c06\u590d\u6742\u5ea6\u63a7\u5236\u5728 O(lgn),\u662f\u4e00\u79cd\u51cf\u800c\u6cbb\u4e4b\u7684\u7b56\u7565\uff0c\u6bcf\u6b21\u5c06\u95ee\u9898\u7684\u89c4\u6a21\u7f29\u51cf\u4e00\u534a\u3002\u4f46\u5728\u4f7f\u7528\u4e8c\u5206\u6cd5\u89e3\u51b3\u95ee\u9898\u65f6\uff0c\u65f6\u5e38\u4f1a\u78b0\u5230\u8fb9\u754c\u6761\u4ef6\u4e0d\u660e\u786e\u7684\u95ee\u9898\uff0c\u4e0b\u9762\u4ee5\u4e09\u4e2a\u5178\u578b\u7684\u95ee\u9898\u6765\u89e3\u91ca\u5e73\u51e1\u7684\u4e8c\u5206\u6cd5\uff0c\u5e76\u4e3e\u51e0\u4e2a\u6269\u5c55\u7684\u4f8b\u5b50\u6765\u8bf4\u660e\u4e8c\u5206\u6cd5\u4f7f\u7528\u7684\u573a\u666f\u3002</p>"},{"location":"lc/algo/array/#_9","title":"\u7cbe\u786e\u67e5\u627e","text":"<p>\u4e0b\u9762\u4ee3\u7801\u4e0d\u8bc1\u81ea\u660e\uff1a</p> <pre><code>int binary_search(const vector&lt;int&gt;&amp; v,int target) {\n    int left = 0;\n    int right = v.size()-1;\n    while(left&lt;=right) {\n        int mid = left+(right - left)/2;\n        if(v[mid]&gt;target) {\n            right = mid - 1;\n        } else if(v[mid]&lt;target) {\n            left = mid+1;\n        } else {\n            return mid;\n        }\n    }\n    return -1;\n}\n</code></pre>"},{"location":"lc/algo/array/#_10","title":"\u8fb9\u754c\u67e5\u627e","text":"<ul> <li>\u6709\u5e8f\u5e8f\u5217\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6570\u7684\u5de6\u8fb9\u754c <p>\u5de6\u8fb9\u754c\u662f\u6307\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e\u7ed9\u5b9a target \u503c\u7684\u79e9\u3002</p> </li> </ul> <pre><code>int binary*search(const vector&lt;int&gt;&amp; v,int target) {\n    int left = 0;\n    int right = v.size();// \u5de6\u95ed\u53f3\u5f00\n        while(left&lt;right) {\n            int mid = left+(right - left)/2;\n            if(v[mid]&gt;=target) {\n                right = mid ; // \u5de6\u8fb9\u754c\uff0c\u5219\u6240\u6709\u5927\u4e8e\u7b49\u4e8e target \u7684\u90fd\u5e94\u8be5\u5728\u53f3\u8fb9\n            } else {\n                left = mid+1;\n            }\n    }\n    return left;\n}\n</code></pre> <p>\u6b63\u786e\u6027\u8bc1\u660e\uff1a \u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\u59cb\u7ec8\u6709\u5982\u4e0b\u4e0d\u53d8\u6027\uff1a \u521d\u59cb\u65f6\uff1a  \u8fc7\u7a0b\u4e2d\uff1a  \u5faa\u73af\u7ec8\u6b62\u65f6\uff1a  \u53ef\u4ee5\u770b\u51fa\uff0c\u8df3\u51fa\u5faa\u73af\u65f6\u5fc5\u6709 left == right \u4e14\uff0cleft \u662f\u7b2c\u4e00\u4e2a\u4f4e\u4e8e\u7b49\u4e8e target \u7684\u4e0b\u6807</p> <ul> <li>\u6709\u5e8f\u5e8f\u5217\u4e2d\u5bfb\u627e\u4e00\u4e2a\u6570\u7684\u53f3\u8fb9\u754c</li> </ul> <p>\u53f3\u8fb9\u754c\u662f\u6307\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7ed9\u5b9a target \u503c\u7684\u79e9\u3002</p> <pre><code>int binary_search(const vector&lt;int&gt;&amp; v,int target) {\n    int left = 0;\n    int right = v.size();\n    while(left&lt;right) {\n        int mid = left+(right - left)/2;\n        if(v[mid]&gt;target) {\n            right = mid ;\n        } else {\n            left = mid+1;\n        }\n    }\n    return left;\n}\n</code></pre> <p>\u8bc1\u660e\u540c\u4e0a\u3002</p>"},{"location":"lc/algo/array/#_11","title":"\u76f8\u5173\u7b97\u6cd5","text":""},{"location":"lc/algo/array/#_12","title":"\u53cc\u6307\u9488","text":""},{"location":"lc/algo/array/#_13","title":"\u6ed1\u52a8\u7a97\u53e3","text":"<p>\u6ed1\u52a8\u7a97\u53e3\u4e00\u822c\u6846\u67b6\uff0c\u4ee5\u6c42\u548c\u5927\u4e8e\u7b49\u4e8e target \u7684\u6700\u77ed\u5b50\u6570\u7ec4\u957f\u5ea6\u4e3a\u4f8b\uff1a <pre><code>int left = 0;\nint right = 0;\nint sum = 0;    // \u4e00\u4e2a\u76ee\u6807\nwhile(right&lt;s.size()) {\n    sum += s[right];\n    while(sum&gt;=target) {\n        ans = min(ans,right-left+1);\n        sum -= s[left];\n        left++; // \u79fb\u52a8\u5de6\u8fb9\u754c\n    }\n    right++; // \u53f3\u8fb9\u754c\n}\n</code></pre></p>"},{"location":"lc/algo/dp/","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u52a8\u6001\u89c4\u5212\u95ee\u9898\u7684\u4e00\u822c\u7279\u5f81\u662f\u5b58\u5728\u91cd\u590d\u5b50\u95ee\u9898\u4ee5\u53ca\u6700\u4f18\u5b50\u7ed3\u6784\u3002</p> <p>\u5bf9\u4e8e\u91cd\u590d\u5b50\u95ee\u9898\u800c\u8a00\uff0c\u6700\u7ecf\u5178\u7684\u95ee\u9898\u4fbf\u662f\u6590\u6ce2\u90a3\u5951\u6570\u5217\uff1a</p> <p>Question</p> <p>\u95ee\u9898\uff1a\u6590\u6ce2\u90a3\u5951\u6570\u5217\u6ee1\u8db3\uff1af(n) = f(n-1)+f(n-2),\u7ed9\u5b9an\u6c42f(n)\uff1f</p> <p>\u9898\u76ee\u5df2\u7ecf\u7ed9\u51fa\u4e86\u9012\u5f52\u516c\u5f0f\uff0c\u90a3\u4e48\u5f88\u5bb9\u6613\u5199\u51fa\u5982\u4e0b\u9012\u5f52\u89e3\u6cd5\uff1a <pre><code>int fibonacci(n){\n    if(n == 0){\n        return 0;\n    }\n    if(n == 1||n == 2){\n        return 1;\n    }\n    return fibonacci(n-1)+fibonacci(n-2);\n}\n</code></pre></p> <p>\u5982\u6b64\u56fa\u7136\u6b63\u786e\uff0c\u4f46\u6ce8\u610f\u5230\u6709\u8fc7\u591a\u7684\u91cd\u590d\u8ba1\u7b97\uff0c\u800c\u6bcf\u4e00\u91cd\u590d\u8ba1\u7b97\u90fd\u4f1a\u5c55\u5f00\u4e3a\u4e00\u9897\u9012\u5f52\u6811\uff0c\u56e0\u6b64\u5176\u590d\u6742\u5ea6\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u3002 \u4e0b\u9762\u7ed9\u51fa\u81ea\u5e95\u5411\u4e0a\u7684\u89e3\u6cd5\uff1a <pre><code>int fibonacci(n){\n    if(n == 1||n == 2){\n        return 1;\n    }\n    int i = 1;\n    int j = 1;\n    for(int i = 3; i&lt;=n;i++){\n        int t = i+j;\n        i = j;\n        j = t;\n    }\n    return j;\n}\n</code></pre> \u5982\u4e0a\u53ef\u4ee5\u5f97\u77e5\uff0c\u5f53\u6211\u4eec\u8ba1\u7b97f[i]\u7684\u65f6\u5019\uff0c\u5176\u6240\u9700\u8981\u7684f[i-1]\u548cf[i-2]\u5747\u5df2\u77e5\uff0c\u6545\u4e0d\u4f1a\u9020\u6210\u5b50\u95ee\u9898\u88ab\u91cd\u590d\u8ba1\u7b97\u3002</p>"},{"location":"lc/algo/dp/#_2","title":"\u89e3\u9898\u601d\u8def","text":"<p>\u4e0a\u9762\u7684\u6590\u6ce2\u90a3\u5951\u6570\u5217\u95ee\u9898\u4e25\u683c\u6765\u8bf4\u4e0d\u7b97\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff0c\u5176\u4e0d\u5b58\u5728\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u53ea\u662f\u53ef\u4ee5\u5f88\u597d\u7684\u5c55\u793a\u91cd\u590d\u5b50\u95ee\u9898 \u7684\u91cd\u590d\u8ba1\u7b97\u5bf9\u4e8e\u7b97\u6cd5\u7684\u590d\u6742\u5ea6\u6709\u5f88\u5927\u7684\u5f71\u54cd\u3002\u5bf9\u4e8e\u4e00\u822c\u7684\u52a8\u6001\u89c4\u5212\u95ee\u9898\uff0c\u5176\u89e3\u9898\u6216\u8005\u8bf4\u601d\u8003\u65b9\u6cd5\u53ef\u4ee5\u4ece\u5982\u4e0b\u51e0 \u4e2a\u65b9\u9762\u5165\u624b\uff1a</p> <ul> <li>\u5f71\u54cd\u7ed3\u679c\u7684\u56e0\u7d20\u6709\u54ea\u4e9b</li> <li>\u5982\u4f55\u5b9a\u4e49dp\u6570\u7ec4</li> <li>\u5982\u4f55\u786e\u5b9a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u5373\u5982\u4f55\u4ece\u5df2\u77e5\u63a8\u51fa\u4f4d\u7f6e</li> <li>\u5982\u4f55\u786e\u5b9a\u5e73\u51e1\u60c5\u51b5\u7684\u53d6\u503c</li> </ul>"},{"location":"lc/algo/dp/#_3","title":"\u52a8\u6001\u89c4\u5212\u5e38\u89c1\u95ee\u9898","text":""},{"location":"lc/algo/dp/#_4","title":"\u5b50\u5e8f\u5217\u95ee\u9898","text":"<p>\u5b50\u5e8f\u5217\u95ee\u9898\u5927\u591a\u662f\u5728\u4e00\u4e2a\u6216\u4e24\u4e2a\u5b57\u7b26\u4e32\u4e2d\u627e\u5230\u4e00\u4e2a\u95ee\u9898\u7684\u6700\u503c\uff0c\u4e00\u822c\u60c5\u51b5\u4e0bdp\u6570\u7ec4\u7684\u5927\u5c0f\u4f1a\u8bbe\u7f6e\u4e3a\u5b57\u7b26\u4e32\u957f \u5ea6+1\uff0c\u6765\u56ca\u62ec\u7a7a\u4e32\u7684\u60c5\u51b5\uff0c\u7b80\u5316\u8fb9\u754c\u6761\u4ef6\u7684\u5904\u7406\u3002</p>"},{"location":"lc/algo/dp/#_5","title":"\u53ea\u6d89\u4e00\u4e2a\u5b57\u7b26\u4e32","text":""},{"location":"lc/algo/dp/#_6","title":"\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217","text":"<p>Question</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u627e\u5230\u5176\u4e2d\u6700\u957f\u4e25\u683c\u9012\u589e\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\u3002</p> <p>\u89e3\u9898\u601d\u8def\uff1a</p> <ul> <li>\u786e\u5b9adp\u6570\u7ec4\u7684\u542b\u4e49\uff1adp[i]\u4e3a\u4ee5num[i]\u7ed3\u5c3e\u7684\u6700\u957f\u5b50\u5e8f\u5217\u957f\u5ea6</li> <li>\u786e\u5b9a\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a\u8f6c\u79fb\u65b9\u7a0b\u7684\u5173\u952e\u5728\u4e8e\u627e\u51fanum[i]\u4e0e[0,i-1]\u7ed3\u5c3e\u7684\u6700\u957f\u5b50\u5e8f\u5217\u6784\u6210\u7684\u66f4\u957f\u7684\u9012\u589e\u5b50\u5e8f   \u5217\u7684\u6700\u5927\u503c     <pre><code>for(int j = 0;j&lt;i;j++){\n    if(nums[i]&gt;nums[j]){\n        dp[i] = max(dp[i],dp[j]+1);\n        maxV = max(dp[i],maxV);\n    }\n}\n</code></pre></li> <li>\u786e\u5b9a\u5e73\u51e1\u60c5\u51b5\uff1adp[0] = 1; \u663e\u7136\uff0c\u5b50\u5e8f\u5217\u6700\u5c11\u4e5f\u6709\u4e00\u4e2a\u5373\u5b83\u672c\u8eab\u3002</li> </ul> <p>\u5b8c\u6574\u4ee3\u7801\uff1a</p> <pre><code>int lengthOfLIS(vector&lt;int&gt;&amp; nums) {\n    vector&lt;int&gt; dp(nums.size(),1);\n    int maxV = 1;\n    for(int i = 0; i&lt;dp.size();i++){\n        for(int j = 0;j&lt;i;j++){\n            if(nums[i]&gt;nums[j]){\n                dp[i] = max(dp[i],dp[j]+1);\n                maxV = max(dp[i],maxV);\n            }\n        }\n    }\n    return maxV;\n}\n</code></pre>"},{"location":"lc/algo/heap/","title":"Heap","text":"<p><code>Heap</code>\uff08\u5806\uff09\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u6811\u5f62\u6570\u636e\u7ed3\u6784\uff0c\u901a\u5e38\u662f\u4e00\u4e2a\u53ef\u4ee5\u88ab\u770b\u505a\u4e00\u68f5\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6570\u7ec4\u5bf9\u8c61\u3002\u5b83\u7ef4\u62a4\u4e00\u79cd\u504f\u5e8f\u5173\u7cfb\uff0c\u5373\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\uff08\u5927\u6839\u5806\uff09\uff0c\u6216\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\uff08\u5c0f\u6839\u5806\uff09\u3002\u8fd9\u79cd\u504f\u5e8f\u5173\u7cfb\u4f7f\u5f97\u5806\u7684\u6839\u8282\u70b9\u662f\u5806\u4e2d\u7684\u6700\u5927\u6216\u6700\u5c0f\u5143\u7d20\u3002</p> <p>\u5c31\u5b9e\u73b0\u800c\u8a00\uff0c\u4e00\u822c <code>Heap</code> \u7684\u5e95\u5c42\u5bb9\u5668\u4e3a\u6570\u7ec4\uff0c\u5f53\u7136\u4e5f\u53ef\u4ee5\u662f\u5176\u4ed6\u5bb9\u5668\u3002\u4ee5 Golang \u7684 <code>Heap</code> \u4e3a\u4f8b\uff0c\u8981\u6c42\u5176\u5e95\u5c42\u5bb9\u5668\u5b9e\u73b0 <code>heap.Interface</code> \u89c4\u5b9a\u7684\u6240\u6709\u63a5\u53e3\u3002</p>"},{"location":"lc/algo/heap/#_1","title":"\u57fa\u672c\u539f\u7406","text":""},{"location":"lc/algo/heap/#_2","title":"\u5b8c\u5168\u4e8c\u53c9\u6811\u7ec4\u7ec7","text":"<p>\u5b8c\u5168\u4e8c\u53c9\u6811\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u4e8c\u53c9\u6811\uff0c\u5b83\u9664\u4e86\u6700\u540e\u4e00\u5c42\u5916\uff0c\u5176\u4ed6\u5c42\u90fd\u662f\u6ee1\u7684\uff0c\u4e14\u6700\u540e\u4e00\u5c42\u7684\u8282\u70b9\u90fd\u9760\u5de6\u6392\u5217\u3002</p> <p></p> <p>\u5982\u679c\u5c06\u5b8c\u5168\u4e8c\u53c9\u6811\u7ec4\u7ec7\u4e00\u4e2a\u53ef\u4ee5\u968f\u673a\u8bbf\u95ee\u7684\u5bb9\u5668\uff0c\u6211\u4eec\u5bb9\u6613\u5f97\u51fa\uff0c\u5176\u7236\u5b50\u8282\u70b9\u6709\u4ee5\u4e0b\u5173\u7cfb\uff1a\u5bf9\u4e8e\u8282\u70b9<code>i</code>\uff0c\u5176\u5de6\u5b50\u8282\u70b9\u4e3a<code>2*i+1</code>\uff0c\u53f3\u5b50\u8282\u70b9\u4e3a<code>2*i+2</code>\uff0c\u7236\u8282\u70b9\u4e3a<code>(i-1)/2</code>\u3002</p>"},{"location":"lc/algo/heap/#_3","title":"\u504f\u5e8f\u5173\u7cfb\u7ef4\u6301","text":"<p>\u504f\u5e8f\u5173\u7cfb\u4f53\u73b0\u5728\uff1a\u5728\u5927\u6839\u5806\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5927\u4e8e\u6216\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\uff1b\u5728\u5c0f\u6839\u5806\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u7684\u503c\u90fd\u5c0f\u4e8e\u6216\u7b49\u4e8e\u5176\u5b50\u8282\u70b9\u7684\u503c\u3002  </p> <p>\u5728\u5bf9\u5b8c\u5168\u4e8c\u53c9\u6811\u8fdb\u884c\u5220\u9664\u3001\u63d2\u5165\u52a8\u4f5c\u65f6\uff0c\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\uff0c\u4fdd\u8bc1\u5176\u504f\u5e8f\u6027\u4e0d\u88ab\u7834\u574f\uff1a</p> <ol> <li>\u63d2\u5165\u8282\u70b9\uff1a\u5c06\u65b0\u8282\u70b9\u63d2\u5165\u5230\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u7136\u540e\u901a\u8fc7\u4e0e\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u82e5\u4e0d\u7b26\u5408\u504f\u5e8f\u5173\u7cfb\uff0c\u5219\u4ea4\u6362\u4f4d\u7f6e\uff0c\u76f4\u5230\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb\u3002</li> <li>\u5220\u9664\u6839\u8282\u70b9\uff1a\u5c06\u6700\u540e\u4e00\u4e2a\u8282\u70b9\u66ff\u6362\u5230\u6839\u4f4d\u7f6e\uff0c\u7136\u540e\u901a\u8fc7\u4e0e\u5b50\u8282\u70b9\u6bd4\u8f83\uff0c\u82e5\u4e0d\u7b26\u5408\u504f\u5e8f\u5173\u7cfb\uff0c\u5219\u4ea4\u6362\u4f4d\u7f6e\uff0c\u76f4\u5230\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb\u3002</li> </ol>"},{"location":"lc/algo/heap/#_4","title":"\u5b9e\u73b0","text":"<p>\u4e0b\u9762\u501f\u52a9 Go \u4e2d\u7684<code>Heap</code>\u7b80\u8981\u8bf4\u660e<code>Heap</code>\u7684\u539f\u7406\u53ca\u4f7f\u7528\u3002<code>heap</code>\u8981\u6c42\u5176\u5e95\u5c42\u5bb9\u5668\u5b9e\u73b0\u4ee5\u4e0b\u63a5\u53e3\uff0c\u5b83\u4eec\u5728\u7ef4\u6301\u5806\u7684\u504f\u5e8f\u5173\u7cfb\u65f6\u9700\u8981\u4f7f\u7528\uff1a</p> <pre><code>type Interface interface {\n    sort.Interface\n    Push(x any) // add x as element Len()\n    Pop() any   // remove and return element Len() - 1.\n}\n</code></pre> <p><code>heap</code>\u672c\u8eab\u63d0\u4f9b\u5982\u4e0b\u65b9\u6cd5\uff1a</p> <ul> <li><code>Init(h Interface)</code>\uff1a\u521d\u59cb\u5316\u5806\uff0c\u5c06\u5806\u4e2d\u7684\u5143\u7d20\u6309\u7167\u504f\u5e8f\u5173\u7cfb\u8fdb\u884c\u8c03\u6574\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(n)</code>\u3002</li> <li><code>Push(h Interface, x any)</code>\uff1a\u5c06\u5143\u7d20\u6dfb\u52a0\u5230\u5806\u4e2d\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(logn)</code>\u3002</li> <li><code>Pop(h Interface) any</code>\uff1a\u79fb\u9664\u5e76\u8fd4\u56de\u5806\u4e2d\u7684\u6700\u5c0f\u6216\u6700\u5927\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(logn)</code>\u3002</li> <li><code>Remove(h Interface, i int) any</code>\uff1a\u79fb\u9664\u5806\u4e2d\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(logn)</code>\u3002</li> <li><code>Fix(h Interface, i int)</code>\uff1a\u4fee\u590d\u5806\u4e2d\u6307\u5b9a\u7d22\u5f15\u7684\u5143\u7d20\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(logn)</code>\u3002</li> </ul> <p><code>heap</code>\u7684\u6838\u5fc3\u64cd\u4f5c\u4e3a\u5143\u7d20\u7684\u4e0a\u6d6e\u548c\u4e0b\u6c89\uff0c\u4ee5\u6b64\u7ef4\u62a4\u5806\u7684\u504f\u5e8f\u5173\u7cfb\u3002</p> <p>\u4ee5\u5143\u7d20\u5165\u5806\u4e3a\u4f8b\uff0c\u9996\u5148\u5c06\u5143\u7d20\u6dfb\u52a0\u81f3\u5806\u5e95\u5c42\u5bb9\u5668\u7684\u672b\u5c3e\uff0c\u7136\u540e\u5bf9\u4e0d\u65ad\u7684\u6267\u884c\u4e0a\u6d6e\u64cd\u4f5c\uff0c\u4fdd\u8bc1\u5143\u7d20\u5904\u4e8e\u6b63\u786e\u7684\u4f4d\u7f6e\uff0c\u76f4\u5230\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb\u3002</p> <p>\u4e0b\u9762\u8be6\u7ec6\u4ecb\u7ecd\u4e0a\u6d6e\u548c\u4e0b\u6c89\u64cd\u4f5c\u3002</p>"},{"location":"lc/algo/heap/#_5","title":"\u4e0a\u6d6e","text":"<p>\u4e0e\u7236\u8282\u70b9\u6bd4\u8f83\uff0c\u82e5\u4e0d\u7b26\u5408\u504f\u5e8f\u5173\u7cfb\uff0c\u5219\u4ea4\u6362\u4f4d\u7f6e\uff0c\u76f4\u5230\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb\u3002</p> <p></p> <pre><code>func up(h Interface, j int) {\n    for {\n        i := (j - 1) / 2 // parent\n        if i == j || !h.Less(j, i) {\n            break\n        }\n        h.Swap(i, j)\n        j = i\n    }\n}\n</code></pre>"},{"location":"lc/algo/heap/#_6","title":"\u4e0b\u6c89","text":"<p>\u4e0e\u5b50\u8282\u70b9\u6bd4\u8f83\uff0c\u82e5\u4e0d\u7b26\u5408\u504f\u5e8f\u5173\u7cfb\uff0c\u5219\u4ea4\u6362\u4f4d\u7f6e\uff0c\u76f4\u5230\u6ee1\u8db3\u504f\u5e8f\u5173\u7cfb\u3002</p> <p></p> <pre><code>func down(h Interface, i0, n int) bool {\n    i := i0\n    for {\n        j1 := 2*i + 1\n        if j1 &gt;= n || j1 &lt; 0 { // j1 &lt; 0 after int overflow\n            break\n        }\n        j := j1 // left child\n        if j2 := j1 + 1; j2 &lt; n &amp;&amp; h.Less(j2, j1) {\n            j = j2 // = 2*i + 2  // right child\n        }\n        if !h.Less(j, i) {\n            break\n        }\n        h.Swap(i, j)\n        i = j\n    }\n    return i &gt; i0\n}\n</code></pre>"},{"location":"lc/algo/stack/","title":"Stack","text":""},{"location":"lc/algo/stack/#_1","title":"\u76f8\u5173\u7b97\u6cd5","text":""},{"location":"lc/algo/stack/#_2","title":"\u5355\u8c03\u6808","text":"<p>\u5355\u8c03\u6808\uff1a\u6808\u5185\u5143\u7d20\u5355\u8c03\u9012\u589e\u6216\u9012\u51cf\uff0c\u901a\u5e38\u7528\u6765\u67e5\u627e\u5de6\u4fa7\u6216\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u6216\u66f4\u5c0f\u7684\u5143\u7d20\u3002</p>"},{"location":"lc/algo/stack/#_3","title":"\u5de6\u4fa7","text":"<p>\u7528\u5355\u8c03\u6808\u6765\u89e3\u51b3\u67e5\u627e\u5de6\u4fa7\u5143\u7d20\u95ee\u9898\u65f6\uff0c\u5173\u6ce8\u70b9\u5e94\u8be5\u5728\u6808\u9876\u5143\u7d20\u4e0e\u6b21\u9876\u5143\u7d20\u3002 - \u67e5\u627e\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a <pre><code>vector&lt;int&gt; stackAlgo(const vector&lt;int&gt;&amp; arr) {\n    stack&lt;int&gt; stk;\n    vector&lt;int&gt; res(arr.size(), -1);\n\n    for (int i = 0; i &lt; arr.size(); ++i) {\n        // \u9012\u51cf\u5355\u8c03\u6808\n        while (!stk.empty() &amp;&amp; arr[stk.top()] &lt;= arr[i]) {\n            int top = stk.top();\n            stk.pop();\n            if (stk.empty()) {\n                break;\n            }\n            int temp = stk.top();\n            // top\u7684\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u6bd4top\u5927\u7684\u5143\u7d20\n            res[top] = arr[temp];\n        }\n        stk.push(i);\n    }\n    while (!stk.empty()) {\n        int top = stk.top();\n        stk.pop();\n        if (stk.empty()) {\n            break;\n        }\n        int temp = stk.top();\n        res[top] = arr[temp];\n    }\n    return res;\n}\n</code></pre> - \u67e5\u627e\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\uff1a <pre><code>vector&lt;int&gt; stackAlgo(const vector&lt;int&gt;&amp; arr) {\n    stack&lt;int&gt; stk;\n    vector&lt;int&gt; res(arr.size(), -1);\n    print(\"init\", arr);\n\n    for (int i = 0; i &lt; arr.size(); ++i) {\n        // \u9012\u589e\u5355\u8c03\u6808, \u7b49\u53f7\u4e5f\u5e94\u8be5\u5904\u7406\uff0c\u56e0\u4e3ai\u4e00\u5b9a\u662f\u66f4\u5927\u7684\n        while (!stk.empty() &amp;&amp; arr[stk.top()] &gt;= arr[i]) {\n            int top = stk.top();\n            stk.pop();\n            if (stk.empty()) {\n                break;\n            }\n            int temp = stk.top();\n            // top\u7684\u5de6\u4fa7\u7b2c\u4e00\u4e2a\u6bd4top\u5c0f\u7684\u5143\u7d20\n            res[top] = arr[temp];\n        }\n        stk.push(i);\n    }\n    while (!stk.empty()) {\n        int top = stk.top();\n        stk.pop();\n        if (stk.empty()) {\n            break;\n        }\n        int temp = stk.top();\n        res[top] = arr[temp];\n    }\n    return res;\n}\n</code></pre></p>"},{"location":"lc/algo/stack/#_4","title":"\u53f3\u4fa7","text":"<p>\u7528\u5355\u8c03\u6808\u6765\u89e3\u51b3\u67e5\u627e\u53f3\u4fa7\u5143\u7d20\u95ee\u9898\u65f6\uff0c\u5173\u6ce8\u70b9\u5e94\u8be5\u5728\u6808\u9876\u5143\u7d20\u4e0e\u5f85\u5165\u6808\u5143\u7d20\u3002 - \u67e5\u627e\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5927\u5143\u7d20\uff1a <pre><code>vector&lt;int&gt; stackAlgo(const vector&lt;int&gt;&amp; arr) {\n    stack&lt;int&gt; stk;\n    vector&lt;int&gt; res(arr.size(), -1);\n\n    for (int i = 0; i &lt; arr.size(); ++i) {\n        // \u9012\u589e\u5355\u8c03\u6808\n        while (!stk.empty() &amp;&amp; arr[stk.top()] &lt; arr[i]) {\n            int top = stk.top();\n            stk.pop();\n            // arr[i]\u5373\u4e3aarr[top]\u7684\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\n            res[top] = arr[i]; // \u8bb0\u5f55\u7ed3\u679c\n        }\n        stk.push(i);\n    }\n    return res;\n}\n</code></pre></p> <ul> <li>\u67e5\u627e\u53f3\u4fa7\u7b2c\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\uff1a <pre><code>vector&lt;int&gt; stackAlgo(const vector&lt;int&gt;&amp; arr) {\n    stack&lt;int&gt; stk;\n    vector&lt;int&gt; res(arr.size(), -1);\n    print(\"init\", arr);\n\n    for (int i = 0; i &lt; arr.size(); ++i) {\n        // \u9012\u589e\u5355\u8c03\u6808\n        while (!stk.empty() &amp;&amp; arr[stk.top()] &gt; arr[i]) {\n            int top = stk.top();\n            stk.pop();\n            // arr[i]\u5373\u4e3aarr[top]\u7684\u4e0b\u4e00\u4e2a\u66f4\u5c0f\u5143\u7d20\n            res[top] = arr[i]; // \u8bb0\u5f55\u7ed3\u679c\n        }\n        stk.push(i);\n    }\n    return res;\n}\n</code></pre></li> </ul>"},{"location":"lc/algo/string/","title":"String","text":""},{"location":"lc/algo/string/#_1","title":"\u4e32\u5339\u914d\u7b97\u6cd5","text":""},{"location":"lc/algo/string/#_2","title":"\u66b4\u529b\u89e3\u6cd5","text":"<p>\u6bcf\u6b21\u4ea7\u751f\u5931\u914d\u4e4b\u540e\uff0c\u4ec5\u5c06\u6587\u672c\u4e32\u540e\u79fb\u4e00\u4f4d\uff0c\u7136\u540e\u5f00\u59cb\u65b0\u4e00\u8f6e\u7684\u6bd4\u5bf9\u3002</p> <pre><code>int Match(const std::string&amp; text, const std::string&amp; pattern) {\n    int m = text.size();\n    int n = pattern.size();\n\n    int i = 0;\n    int j = 0;\n\n    while (i &lt; m&amp;&amp;j &lt; n) {\n        if (text[i] == pattern[j]) {\n            ++i;\n            ++j;\n        } else {\n            j = 0;\n            i -= (j - 1);\n        }\n    }\n    return i - j;\n}\n</code></pre> <p>i-j\u7684\u503c\u53ef\u4ee5\u7b80\u660e\u7684\u6307\u51fa\u662f\u5426\u5339\u914d\u6210\u529f\uff0c\u53ca\u5339\u914d\u6210\u529f\u7684\u5b50\u4e32\u5728text\u4e32\u4e2d\u7684\u4f4d\u7f6e\u3002</p> <p></p>"},{"location":"lc/algo/string/#kmp","title":"KMP\u7b97\u6cd5","text":"<p>1.\u6539\u8fdb\u7684\u53ef\u80fd\u6027</p> <p>\u7531\u4e0a\u9762\u7684\u66b4\u529b\u89e3\u6cd5\u53ef\u4ee5\u53d1\u73b0\uff0c\u6bcf\u6b21\u79fb\u52a8\u4e00\u683c\u4ece\u5934\u5f00\u59cb\u5339\u914d\u8fc7\u4e8e\u4fdd\u5b88\uff0c\u6839\u636e\u5df2\u83b7\u5f97\u7684\u4fe1\u606f\uff0c\u53ef\u4ee5\u907f\u514d\u8fd9\u79cd\u4e0d\u5fc5\u8981\u7684\u5339\u914d\u3002</p> <p></p> <p>\u5047\u8bbe\u5982\u6b64\u79fb\u4e00\u683c\u7684\u65b9\u6cd5\u662f\u53ef\u884c\u7684\uff0c\u90a3\u4e48\u4e00\u5b9a\u6709\u4e0b\u5f0f\u6210\u7acb\uff1a s1==s2==s3 s2\u4e0es3\u7531\u6a21\u5f0f\u4e32\u672c\u8eab\u51b3\u5b9a\uff0cs1=s3\u662f\u524d\u63d0\u6761\u4ef6\uff0c\u56e0\u6b64\uff0c\u5c06\u95ee\u9898\u4e00\u822c\u5316\u53ef\u4ee5\u5f97\u51fa\uff1a \u5728\u4e0a\u4e00\u6b65\u5339\u914d\u7684\u60c5\u51b5\u4e0b\uff0c\u82e5\u6a21\u5f0f\u4e32\u4e2d\u5b58\u5728\u4e0b\u56fe\u4e2d\u7684\u7279\u5f81\uff1a</p> <p></p> <p>\u5373\uff1a         \\(pattern[0,t)==pattern[j- t,j)\\) \u6709\u4e0a\u8ff0\u5bf9\u5e94\u5173\u7cfb\uff0c\u5219\u5f53\u5339\u914d\u8fc7\u7a0b\u5728pattern[j]\u5904\u5931\u914d\u65f6\uff0c\u53ef\u4e0d\u5fc5\u53ea\u5c06\u6587\u672c\u4e32\u524d\u79fb\u4e00\u4f4d\u8fdb\u884c\u5339\u914d\uff0c\u800c\u662f\u76f4\u63a5\u524d\u79fbj-t\u8fdb\u884c\u5339\u914d\uff0c\u5e76\u5ffd\u7565[0,t)\u56e0\u4e3a\u5b83\u4eec\u4e00\u5b9a\u662f\u5339\u914d\u7684\u3002 \u5982\u4e0b\uff0c\u7d2b\u8272\u533a\u6bb5\u4e00\u5b9a\u662f\u5339\u914d\u7684\uff0c\u8fd9\u662f\u7531\u4e0a\u4e00\u6b21\u5339\u914d\u6210\u529f\u548c\u6a21\u5f0f\u4e32\u672c\u8eab\u7279\u5f81\u51b3\u5b9a\u7684\uff1a</p> <p></p> <p>2.\u5f15\u5165next[]\u8868</p> <p>\u6240\u5e78\uff0c\u4ee5\u4e0a\u7684\u4fe1\u606f\u5728\u6a21\u5f0f\u4e32pattern\u4e2d\u5b8c\u5168\u53ef\u4ee5\u83b7\u5f97\u3002\u5373\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2apattern\u4e32\u4e2d\u7684j\uff0c\u90fd\u627e\u5230\u4e00\u4e2at\u4f7f\u5f97[0,t)==[j - t,j)\uff0c\u5982\u679c\u5b58\u5728\u591a\u4e2at\u6ee1\u8db3\uff0c\u5219\u53d6t\u6700\u5927\u8005\uff0c\u5176\u4e2d\u539f\u56e0\u4e3a\uff1a\u82e5\u53d6\u5c0f\u8005\uff0c\u5219\u610f\u5473\u7740\u5728\u5339\u914d\u5931\u914d\u540e\u79fb\u52a8\u65f6\uff0cpattern\u4e32\u5411\u53f3\u79fb\u52a8\u7684\u66f4\u5927\uff0c\u800c\u6b64\u524d\u5b58\u5728\u4e00\u4e2a\u5927\u8005\u7684t\uff08\u79fb\u52a8\u7684\u66f4\u5c0f\uff09\u4e5f\u53ef\u80fd\u5339\u914d\u6210\u529f\uff0c\u6545\u53d6\u5c0f\u8005\u4f1a\u5e26\u6765\u56de\u6eaf\u7684\u95ee\u9898\u3002</p> <p></p> <p>\u5c06\u4e0a\u9762\u7684t\u503c\u5236\u8868\u5f85\u67e5\uff0c\u5373\u5f97\u5230\u4e86next[]\u8868\u3002</p> <p>3.next[]\u8868\u7684\u8ba1\u7b97</p> <p>\u5bf9\u4e8enext\u8868\uff0c\u91c7\u53d6\u9012\u63a8\u7684\u65b9\u5f0f\u8ba1\u7b97\u3002\u5728next[]\u8868\u4e2d\u5fc5\u7136\u6709\uff1a \\(next[j+1]&lt;=next[j]+1\uff1b  \u5f53\u4e14\u4ec5\u5f53p[t] = p[j]\u65f6\uff0c\u53d6\u7b49\u53f7\u3002\\) \u7b49\u53f7\u6761\u4ef6\u5f88\u597d\u53d6\u5f97\uff0c\u4e3a\u4f55\u5c0f\u4e8e\uff1f\u82e5\u4e0d\u5c0f\u4e8e\u5219\u4e0enext[j]\u662f\u6240\u6709\u5019\u9009\u7684t\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u76f8\u77db\u76fe\u3002 \u5f53p[t] != p[j]\u65f6\uff0c\u5219\u4e3a\u5bfb\u627e\u5230\u4e00\u4e2at\uff0c\u4f7f\u5f97p[t] = p[j];\u53ea\u9700\u4ee4t = next[t];\u5373\u5411\u524d\u627e\u4e00\u4e2a\u66f4\u77ed\u7684\u5339\u914d\u524d\u7f00\u3002</p> <p></p> <pre><code>int* getNext(string needle){\n    int* next = new int[needle.size()];\n    int j = 0;\n    next[j] = -1;\n    int t =next[j];\n    while(j&lt;needle.size()-1){\n        if(t&lt;0||needle[j] == needle[t]){\n            next[++j] = ++t;\n        }\n        else{\n            t = next[t];\n        }\n    }\n    return next;\n}\n</code></pre> <p>\u54e8\u5175\u8282\u70b9\u7684\u8bbe\u7f6e\uff1anext[0]\u8bbe\u7f6e\u4e3a-1\uff1b\u9700\u8981\u7528\u5230next[0]\u7684\u60c5\u51b5\uff0c\u5373pattern\u4e32\u5728j = 0\u5904\u5931\u914d\u3002\u5982\u4e0b\u56fe\uff0c\u8bbe\u7f6e\u54e8\u5175pattern[-1]\u4e0e\u4efb\u4f55\u5b57\u7b26\u901a\u914d\uff0c\u5219\u53ef\u4ee4\u7b97\u6cd5\u7edf\u4e00\u4e14\u4e0d\u81f4\u51fa\u9519\u3002</p> <p></p> <p>\u5339\u914d\u7b97\u6cd5\uff1a <pre><code>int strStr(string haystack, string needle) {\n    if(needle.size() == 0){\n        return 0;\n    }\n    int* next = getNext(needle);\n    int i = 0;\n    int j = 0;\n    int m = haystack.size();\n    int n = needle.size();\n    while(i&lt;m&amp;&amp;j&lt;n){\n        // \u5339\u914d\uff0c\u5411\u524d\n        if(j&lt;0||haystack[i]==needle[j]){\n            ++i;\n            ++j;\n        }\n        else{\n            // \u5931\u914d\uff0c\u627e\u5230\u7b49\u6548\u524d\u7f00\uff0c\u7ee7\u7eed\u5c1d\u8bd5\u5339\u914d\n            j = next[j];\n        }\n        if(j == n){\n            delete[] next;\n            return i - j;\n        }\n    }\n    delete[] next;\n    return -1;\n}\n</code></pre></p> <p>4.next[]\u8868\u518d\u6539\u8fdb next\u8868\u8bb0\u5f55\u4e86j\u4f4d\u7f6e\u4e4b\u524d\u5df2\u5339\u914d\u6210\u529f\u7684\u5b50\u4e32\u4fe1\u606f\u5e76\u5229\u7528\u4e86\u8fd9\u4e00\u4fe1\u606f\uff0c\u4f46\u662f\u5728\u4e0a\u4e00\u6b21\u5931\u8d25\u7684\u5339\u914d\u4e2d\u8fd8\u6709\u4e00\u4e2a\u5931\u8d25\u4e0ej\u5904\u7684\u4fe1\u606f\u6ca1\u6709\u88ab\u5229\u7528\uff0c\uff08\u6210\u529f\u5339\u914d\u79f0\u4e3a\u7ecf\u9a8c\uff0c\u5931\u8d25\u5339\u914d\u79f0\u4e3a\u6559\u8bad\uff09\uff0c\u4e0a\u4e00\u7248\u672c\u7684next\u8868\u53ea\u5229\u7528\u4e86\u7ecf\u9a8c\uff0c\u672a\u5229\u7528\u6559\u8bad\u3002\u6559\u8bad\u6240\u8868\u8fbe\u7684\u542b\u4e49\u4e3a\uff1a\u5728j\u5904\u7684\u5b57\u7b26\u5931\u8d25\u5339\u914d\u4e86\uff0c\u6545t\u6307\u5b9a\u7684\u4f4d\u7f6e\u9664\u4e86[0,t)\u5339\u914dj\u4e4b\u524d\u7684\u67d0\u4e00\u5b50\u4e32\uff0c\u8fd8\u8981\u81f3\u5c11p[t]!=p[j]\uff0c\u4ee5\u89c4\u907f\u73b0\u6709\u7684\u5931\u8d25\u6559\u8bad\u3002</p> <pre><code>int* next(const std::string&amp; pattern) {\n    int* next = new int[pattern.size()];\n    int m = pattern.size();\n    next[0] = -1;\n    int t = next[0];\n    int i = 0;\n    while (i &lt; m - 1) {\n        //\u7531i\u9012\u5806\u5f97\u5230i+1\n        if (t &lt; 0 || pattern[i] == pattern[t]) {\n            if(pattern[i+1] == pattern[t+1]) {\n                //\u5931\u914d\u5904\u5c06\u518d\u6b21\u5931\u914d\uff0c\u6545\u8df3\u8fc7\u8fd9\u4e00\u4e0d\u5fc5\u8981\u7684\u5339\u914d\uff0c\u627e\u5230\u4e00\u4e2a\u4e0d\u7b49\u7684\u51fa\u6765\n                //\u4ece\u524d\u5f80\u540e\u9012\u63a8\uff0c\u4fdd\u8bc1\u4e86next[t+1]\u4e00\u5b9a\u4e0d\u7b49\n                next[i+1] = next[t+1];//t+1&lt;i+1\u6052\u6210\u7acb\uff0c\u6545next[t+1]\u4e00\u5b9a\u5df2\u8d4b\u503c\n            } else {\n                next[i+1] = t + 1;\n            }\n            ++i;\n            ++t;\n        } else {\n            t = next[t];\n        }\n    }\n    return next;\n}\n</code></pre>"},{"location":"lc/algo/string/#bm","title":"BM\u7b97\u6cd5","text":"<p>\u6539\u53d8\u5339\u914d\u7b56\u7565\uff0c\u4ee5\u7ec8\u4e3a\u59cb\u3002</p>"},{"location":"lc/top-interview-150/","title":"Top150\u5237\u9898\u8bb0\u5f55","text":""},{"location":"lc/top-interview-150/10_45_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20II/","title":"45. \u8df3\u8dc3\u6e38\u620f II","text":""},{"location":"lc/top-interview-150/10_45_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20II/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4e0b\u6807\u3002\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002\u4f60\u7684\u76ee\u6807\u662f\u4f7f\u7528\u6700\u5c11\u7684\u8df3\u8dc3\u6b21\u6570\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002\u5047\u8bbe\u4f60\u603b\u662f\u53ef\u4ee5\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002</p>"},{"location":"lc/top-interview-150/10_45_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20II/#_2","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <ul> <li>\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf <code>maxPos</code> \uff0c\u8868\u793a\u80fd\u591f\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e</li> <li>\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf <code>step</code> \uff0c\u8868\u793a\u8df3\u8dc3\u7684\u6b21\u6570</li> <li>\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf <code>end</code> \uff0c\u8868\u793a\u5f53\u524d\u8f6e\u6b21\u7684\u8df3\u8dc3\u80fd\u591f\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\u7684\u4e0b\u6807\uff0c\u5373\u5982\u679c <code>idx == end</code> \uff0c\u8bf4\u660e\u672c\u8f6e\u8df3\u8dc3\u6700\u591a\u53ef\u4ee5\u5230\u8fbe\u5f53\u524d\u4f4d\u7f6e\uff0c\u7ee7\u7eed\u5411\u524d\u5219\u9700\u8981\u591a\u8df3\u4e00\u6b65\uff0c\u65b0\u4e00\u8f6e\u7684\u8df3\u8dc3\u4e2d<code>end</code>\u5e94\u8be5\u66f4\u65b0\u4e3a<code>maxPos</code> </li> </ul> <p>\u904d\u5386\u6570\u7ec4\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e <code>idx</code> \uff0c\u6211\u4eec\u8ba1\u7b97 <code>maxPos</code> \u548c <code>idx + nums[idx]</code>(\u5f53\u524d\u4f4d\u7f6e\u80fd\u591f\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\u7684\u4e0b\u6807) \u7684\u8f83\u5927\u503c\uff0c\u66f4\u65b0 <code>maxPos</code> \u3002</p> <ul> <li>\u5982\u679c <code>maxPos</code> \u5927\u4e8e\u7b49\u4e8e\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u8bf4\u660e\u6211\u4eec\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\uff0c\u8fd4\u56de <code>step</code> \u3002</li> <li>\u5982\u679c <code>maxPos</code> \u5c0f\u4e8e <code>idx</code> \uff0c\u8bf4\u660e\u6211\u4eec\u4e0d\u80fd\u5230\u8fbe\u5f53\u524d\u4f4d\u7f6e\uff0c\u8fd4\u56de <code>false</code> \u3002</li> </ul>"},{"location":"lc/top-interview-150/10_45_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%20II/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func jump(nums []int) int {\n    var step,end,maxPos,size = 0,0,0,len(nums) \n    if size &lt;= 1 {\n        return 0\n    }\n    for idx,v := range nums {\n        maxPos = max(maxPos,idx + v)\n        if idx == end {\n            end = maxPos\n            step++\n            if end &gt;= size -1 {\n                return step\n            }\n        }\n    }\n    return step\n}\n</code></pre>"},{"location":"lc/top-interview-150/11_274_H%20%E6%8C%87%E6%95%B0/","title":"274. H \u6307\u6570","text":""},{"location":"lc/top-interview-150/11_274_H%20%E6%8C%87%E6%95%B0/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 citations \uff0c\u5176\u4e2d citations[i] \u8868\u793a\u7814\u7a76\u8005\u7684\u7b2c i \u7bc7\u8bba\u6587\u88ab\u5f15\u7528\u7684\u6b21\u6570\u3002\u8ba1\u7b97\u5e76\u8fd4\u56de\u8be5\u7814\u7a76\u8005\u7684 h\u00a0\u6307\u6570\u3002</p> <p>\u6839\u636e\u7ef4\u57fa\u767e\u79d1\u4e0a\u00a0h \u6307\u6570\u7684\u5b9a\u4e49\uff1ah \u4ee3\u8868\u201c\u9ad8\u5f15\u7528\u6b21\u6570\u201d\uff0c\u4e00\u540d\u79d1\u7814\u4eba\u5458\u7684 h\u6307\u6570\u662f\u6307\u4ed6\uff08\u5979\uff09\u7684 \uff08n \u7bc7\u8bba\u6587\u4e2d\uff09\u603b\u5171\u6709 h \u7bc7\u8bba\u6587\u5206\u522b\u88ab\u5f15\u7528\u4e86\u81f3\u5c11 h \u6b21\u3002\u4e14\u5176\u4f59\u7684 n - h\u00a0\u7bc7\u8bba\u6587\u6bcf\u7bc7\u88ab\u5f15\u7528\u6b21\u6570\u00a0\u4e0d\u8d85\u8fc7 h \u6b21\u3002</p> <p>\u5982\u679c h \u6709\u591a\u79cd\u53ef\u80fd\u7684\u503c\uff0ch \u6307\u6570 \u662f\u5176\u4e2d\u6700\u5927\u7684\u90a3\u4e2a\u3002</p>"},{"location":"lc/top-interview-150/11_274_H%20%E6%8C%87%E6%95%B0/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/11_274_H%20%E6%8C%87%E6%95%B0/#_3","title":"\u65b9\u6cd5\u4e00\uff1a\u6392\u5e8f","text":"<p>\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u5c06\u521d\u59cb\u7684 H \u6307\u6570 h \u8bbe\u4e3a 0\uff0c\u7136\u540e\u5c06\u5f15\u7528\u6b21\u6570\u6392\u5e8f\uff0c\u5e76\u4e14\u5bf9\u6392\u5e8f\u540e\u7684\u6570\u7ec4\u4ece\u5927\u5230\u5c0f\u904d\u5386\u3002</p> <p>\u6839\u636e H \u6307\u6570\u7684\u5b9a\u4e49\uff0c\u5982\u679c\u5f53\u524d H \u6307\u6570\u4e3a h \u5e76\u4e14\u5728\u904d\u5386\u8fc7\u7a0b\u4e2d\u627e\u5230\u5f53\u524d\u503c citations[i]&gt;h\uff0c\u5219\u8bf4\u660e\u6211\u4eec\u627e\u5230\u4e86\u4e00\u7bc7\u88ab\u5f15\u7528\u4e86\u81f3\u5c11 h+1 \u6b21\u7684\u8bba\u6587\uff0c\u7531\u4e8e\u662f\u4ece\u5927\u5411\u5c0f\u904d\u5386\uff0c\u6240\u4ee5\u5df2\u904d\u5386\u7684\u5143\u7d20\u4e5f\u90fd\u81f3\u5c11\u88ab\u5f15\u7528\u4e86 h+1 \u6b21\uff0c\u6240\u4ee5\u5c06\u73b0\u6709\u7684 h \u503c\u52a0 1\u3002\u7ee7\u7eed\u904d\u5386\u76f4\u5230 h \u65e0\u6cd5\u7ee7\u7eed\u589e\u5927\u3002\u6700\u540e\u8fd4\u56de h \u4f5c\u4e3a\u6700\u7ec8\u7b54\u6848\u3002</p>"},{"location":"lc/top-interview-150/11_274_H%20%E6%8C%87%E6%95%B0/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func hIndex(citations []int) int {\n    var h,size = 0,len(citations)\n    sort.Ints(citations)\n    for idx := size - 1; idx &gt;= 0; idx-- {\n        if citations[idx] &gt; h {\n            h++\n        }\n    }\n    return h\n}\n</code></pre>"},{"location":"lc/top-interview-150/12_380_O%281%29%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0/","title":"380. O(1) \u65f6\u95f4\u63d2\u5165\u3001\u5220\u9664\u548c\u83b7\u53d6\u968f\u673a\u5143\u7d20","text":""},{"location":"lc/top-interview-150/12_380_O%281%29%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0/#_1","title":"\u9898\u76ee","text":"<p>\u5b9e\u73b0 <code>RandomizedSet</code> \u7c7b\uff1a</p> <ul> <li><code>RandomizedSet()</code> \u521d\u59cb\u5316 <code>RandomizedSet</code> \u5bf9\u8c61</li> <li><code>bool insert(int val)</code> \u5f53\u5143\u7d20 <code>val</code> \u4e0d\u5b58\u5728\u65f6\uff0c\u5411\u96c6\u5408\u4e2d\u63d2\u5165\u8be5\u9879\uff0c\u5e76\u8fd4\u56de <code>true</code> \uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u3002</li> <li><code>bool remove(int val)</code> \u5f53\u5143\u7d20 <code>val</code> \u5b58\u5728\u65f6\uff0c\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u8be5\u9879\uff0c\u5e76\u8fd4\u56de <code>true</code> \uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u3002</li> <li><code>int getRandom()</code> \u968f\u673a\u8fd4\u56de\u73b0\u6709\u96c6\u5408\u4e2d\u7684\u4e00\u9879\uff08\u6d4b\u8bd5\u7528\u4f8b\u4fdd\u8bc1\u8c03\u7528\u6b64\u65b9\u6cd5\u65f6\u96c6\u5408\u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5143\u7d20\uff09\u3002\u6bcf\u4e2a\u5143\u7d20\u5e94\u8be5\u6709 \u76f8\u540c\u7684\u6982\u7387 \u88ab\u8fd4\u56de\u3002</li> </ul> <p>\u4f60\u5fc5\u987b\u5b9e\u73b0\u7c7b\u7684\u6240\u6709\u51fd\u6570\uff0c\u5e76\u6ee1\u8db3\u6bcf\u4e2a\u51fd\u6570\u7684 \u5e73\u5747 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(1)</code> \u3002</p>"},{"location":"lc/top-interview-150/12_380_O%281%29%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0/#_2","title":"\u9898\u89e3","text":"<p>\u7565\uff0c\u901a\u8fc7go\u4e2dmap\u7684for range\u968f\u673a\u6027\u5b9e\u73b0\u968f\u673a\u83b7\u53d6\u3002</p>"},{"location":"lc/top-interview-150/12_380_O%281%29%E6%97%B6%E9%97%B4%E6%8F%92%E5%85%A5%E3%80%81%E5%88%A0%E9%99%A4%E5%92%8C%E8%8E%B7%E5%8F%96%E9%9A%8F%E6%9C%BA%E5%85%83%E7%B4%A0/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>type RandomizedSet struct {\n    dict map[int]struct{}\n}\n\n\nfunc Constructor() RandomizedSet {\n    d := make(map[int]struct{})\n    return RandomizedSet{\n        dict:d,\n    }\n}\n\n\nfunc (this *RandomizedSet) Insert(val int) bool {\n    if _,ok := this.dict[val];ok {\n        return false\n    }\n    this.dict[val] = struct{}{}\n    return true\n}\n\n\nfunc (this *RandomizedSet) Remove(val int) bool {\n    if _,ok := this.dict[val];!ok {\n        return false\n    }\n\n    delete(this.dict,val)\n    return true\n}\n\n\nfunc (this *RandomizedSet) GetRandom() int {\n    for k,_ := range this.dict {\n        return k\n    }\n    return 0\n}\n</code></pre>"},{"location":"lc/top-interview-150/13_238_%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF/","title":"238. \u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef","text":""},{"location":"lc/top-interview-150/13_238_%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums\uff0c\u8fd4\u56de \u6570\u7ec4 answer \uff0c\u5176\u4e2d answer[i] \u7b49\u4e8e nums \u4e2d\u9664 nums[i] \u4e4b\u5916\u5176\u4f59\u5404\u5143\u7d20\u7684\u4e58\u79ef \u3002</p> <p>\u9898\u76ee\u6570\u636e \u4fdd\u8bc1 \u6570\u7ec4 nums\u4e4b\u4e2d\u4efb\u610f\u5143\u7d20\u7684\u5168\u90e8\u524d\u7f00\u5143\u7d20\u548c\u540e\u7f00\u7684\u4e58\u79ef\u90fd\u5728  32 \u4f4d \u6574\u6570\u8303\u56f4\u5185\u3002</p> <p>\u8bf7 \u4e0d\u8981\u4f7f\u7528\u9664\u6cd5\uff0c\u4e14\u5728 O(n) \u65f6\u95f4\u590d\u6742\u5ea6\u5185\u5b8c\u6210\u6b64\u9898\u3002</p>"},{"location":"lc/top-interview-150/13_238_%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF/#_2","title":"\u9898\u89e3","text":"<p>\u901a\u8fc7\u7ef4\u62a4\u524d\u540e\u7f00\u6570\u7ec4\u8fdb\u884c\u8ba1\u7b97\uff0c\u6570\u7ec4\u5b9a\u4e49\u4e3a\uff1a</p> <ul> <li><code>prefix[i]</code> \u8868\u793a <code>nums[0]</code> \u5230 <code>nums[i-1]</code> \u7684\u4e58\u79ef</li> <li><code>suffix[i]</code> \u8868\u793a <code>nums[i+1]</code> \u5230 <code>nums[n-1]</code> \u7684\u4e58\u79ef</li> </ul> <p>\u5219\u5bf9\u4e8enums[i]\uff0c\u6211\u4eec\u8981\u6c42\u7684\u9664\u81ea\u8eab\u4ee5\u5916\u6570\u7ec4\u7684\u4e58\u79ef\u4e3a<code>prefix[i]*suffix[i]</code>\u3002</p> <p>\u5bf9\u4e8e\u4ee3\u7801\u5b9e\u73b0\u800c\u8a00\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6b63\u5411\u904d\u5386\u66f4\u65b0\u7ed3\u679c\u6570\u7ec4\uff0c\u518d\u53cd\u5411\u904d\u5386\uff0c\u539f\u5730\u66f4\u65b0\u7ed3\u679c\u6570\u7ec4\uff0c\u907f\u514d\u7533\u8bf7\u66f4\u591a\u7684\u7a7a\u95f4\u3002</p>"},{"location":"lc/top-interview-150/13_238_%E9%99%A4%E8%87%AA%E8%BA%AB%E4%BB%A5%E5%A4%96%E6%95%B0%E7%BB%84%E7%9A%84%E4%B9%98%E7%A7%AF/#_3","title":"\u4ee3\u7801","text":"Go <p>\u9664\u7ed3\u679c\u6570\u7ec4\u4e4b\u5916\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a O(n)</p> Go <p><pre><code>func productExceptSelf(nums []int) []int {\n    n := len(nums)\n    prefix := make([]int,n)\n    suffix := make([]int,n)\n    prefix[0] = 1\n    suffix[n-1] = 1\n    for i := 1;i&lt;n;i++ {\n        prefix[i] = prefix[i-1]*nums[i-1]\n    }\n    for i := n-2;i&gt;=0;i-- {\n        suffix[i] = suffix[i+1]*nums[i+1]\n    }\n    res := make([]int,n)\n    for i := 0;i&lt;n;i++ {\n        res[i] = prefix[i]*suffix[i]\n    }\n    return res\n}\n</code></pre> O(1) <pre><code>func productExceptSelf(nums []int) []int {\n    ans := make([]int, len(nums))\n    for i,_:=range ans {\n        ans[i] = 1\n    }\n\n    cur := 1\n    for idx, val := range nums {\n        ans[idx]*=cur\n        cur *= val\n    }\n\n    cur = 1\n    for i := len(nums) - 1; i &gt;= 0; i-- {\n        ans[i] *= cur\n        cur *= nums[i]\n    }\n\n    return ans\n}\n</code></pre></p>"},{"location":"lc/top-interview-150/14_134_%E5%8A%A0%E6%B2%B9%E7%AB%99/","title":"134. \u52a0\u6cb9\u7ad9","text":""},{"location":"lc/top-interview-150/14_134_%E5%8A%A0%E6%B2%B9%E7%AB%99/#_1","title":"\u9898\u76ee","text":"<p>\u5728\u4e00\u6761\u73af\u8def\u4e0a\u6709 <code>n</code> \u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5176\u4e2d\u7b2c <code>i</code> \u4e2a\u52a0\u6cb9\u7ad9\u6709\u6c7d\u6cb9 <code>gas[i]</code> \u5347\u3002</p> <p>\u4f60\u6709\u4e00\u8f86\u6cb9\u7bb1\u5bb9\u91cf\u65e0\u9650\u7684\u7684\u6c7d\u8f66\uff0c\u4ece\u7b2c <code>i</code> \u4e2a\u52a0\u6cb9\u7ad9\u5f00\u5f80\u7b2c <code>i+1</code> \u4e2a\u52a0\u6cb9\u7ad9\u9700\u8981\u6d88\u8017\u6c7d\u6cb9 <code>cost[i]</code> \u5347\u3002\u4f60\u4ece\u5176\u4e2d\u7684\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u51fa\u53d1\uff0c\u5f00\u59cb\u65f6\u6cb9\u7bb1\u4e3a\u7a7a\u3002</p> <p>\u7ed9\u5b9a\u4e24\u4e2a\u6574\u6570\u6570\u7ec4 <code>gas</code> \u548c <code>cost</code> \uff0c\u5982\u679c\u4f60\u53ef\u4ee5\u7ed5\u73af\u8def\u884c\u9a76\u4e00\u5468\uff0c\u5219\u8fd4\u56de\u51fa\u53d1\u65f6\u52a0\u6cb9\u7ad9\u7684\u7f16\u53f7\uff0c\u5426\u5219\u8fd4\u56de <code>-1</code> \u3002\u5982\u679c\u5b58\u5728\u89e3\uff0c\u5219 \u4fdd\u8bc1 \u5b83\u662f \u552f\u4e00 \u7684\u3002</p>"},{"location":"lc/top-interview-150/14_134_%E5%8A%A0%E6%B2%B9%E7%AB%99/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/14_134_%E5%8A%A0%E6%B2%B9%E7%AB%99/#_3","title":"\u66b4\u529b\u679a\u4e3e","text":"<p>\u904d\u5386\u6bcf\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5224\u65ad\u4ee5\u8be5\u52a0\u6cb9\u7ad9\u4e3a\u8d77\u70b9\uff0c\u80fd\u5426\u884c\u9a76\u4e00\u5468\u3002\u5b9a\u4e49\uff1a</p> <ul> <li><code>left</code>: \u5269\u4f59\u6cb9\u91cf\uff0c\u5219\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u4e2d\u9014\u7684\u52a0\u6cb9\u7ad9<code>left = left + gas[i] - cost[i]</code></li> <li>\u5982\u679c<code>left&lt;0</code>\uff0c\u5219\u8bc1\u660e\u65e0\u6cd5\u5230\u8fbe\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5219\u8df3\u51fa\u5faa\u73af\uff0c\u7ee7\u7eed\u904d\u5386\u8d77\u59cb\u7ad9\u3002</li> <li>\u5982\u679c<code>left&gt;=0</code>\u4e14\u4e0b\u4e00\u7ad9\u4e0e\u8d77\u59cb\u7ad9\u76f8\u540c\uff0c\u5219\u8bc1\u660e\u7ed5\u4e86\u4e00\u5708\uff0c\u8fd4\u56de\u8d77\u59cb\u7ad9\u7d22\u5f15\u3002</li> </ul>"},{"location":"lc/top-interview-150/14_134_%E5%8A%A0%E6%B2%B9%E7%AB%99/#_4","title":"\u6539\u8fdb","text":"<p>\u8003\u8651\u4ece<code>i</code>\u51fa\u53d1\uff0c\u5230\u8fbe<code>j</code>\u7ad9\u8017\u6cb9\u8d85\u8fc7<code>left</code>\uff0c\u5219<code>i</code>\u5230<code>j</code>\u4e4b\u95f4\u7684\u4efb\u4f55\u4e00\u7ad9\u51fa\u53d1\u90fd\u65e0\u6cd5\u5230\u8fbe<code>j</code>\uff08\u56e0\u4e3a\u6211\u4eec\u603b\u662f\u5e26\u7740<code>left&gt;=0</code>\u7684\u6761\u4ef6\u7ecf\u8fc7\u4e2d\u95f4\u7ad9\u7684\uff0c\u800c\u76f4\u63a5\u4ece\u4e2d\u95f4\u5f00\u59cb\u521d\u59cb\u6cb9\u91cf\u4e3a0\uff0c\u6240\u4ee5\u66f4\u52a0\u65e0\u6cd5\u5230\u8fbe\uff09\u3002\u5219\u6211\u4eec\u53ef\u4ee5\u4ece<code>j+1</code>\u7ad9\u51fa\u53d1\uff0c\u8df3\u8fc7\u4e2d\u95f4\u7684\u52a0\u6cb9\u7ad9\uff0c\u7ee7\u7eed\u5224\u65ad\u3002</p>"},{"location":"lc/top-interview-150/14_134_%E5%8A%A0%E6%B2%B9%E7%AB%99/#_5","title":"\u4ee3\u7801","text":"Go <pre><code>func canCompleteCircuit(gas []int, cost []int) int {\n    var start int\n\n    for start &lt; len(gas) {\n        skip:=1 // \u81f3\u5c11\u9700\u8981\u8df3\u8fc7\u672c\u7ad9\uff0c\u7ee7\u7eed\u5f80\u4e0b\u5c1d\u8bd5\n        cur := start\n        left:=0\n        for {\n            left += (gas[cur]-cost[cur])\n            if left &lt; 0 {\n                // \u8d70\u4e0d\u4e0b\u53bb\u4e86\n                start = start+skip\n                break\n            }\n\n            skip++\n            cur=(cur+1)%len(gas)\n            if cur == start {\n                return start\n            }\n        }\n    }\n    return -1\n}\n</code></pre>"},{"location":"lc/top-interview-150/15_135_%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/","title":"135. \u5206\u53d1\u7cd6\u679c","text":""},{"location":"lc/top-interview-150/15_135_%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/#_1","title":"\u9898\u76ee","text":"<p>n \u4e2a\u5b69\u5b50\u7ad9\u6210\u4e00\u6392\u3002\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ratings \u8868\u793a\u6bcf\u4e2a\u5b69\u5b50\u7684\u8bc4\u5206\u3002</p> <p>\u4f60\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8981\u6c42\uff0c\u7ed9\u8fd9\u4e9b\u5b69\u5b50\u5206\u53d1\u7cd6\u679c\uff1a</p> <p>\u6bcf\u4e2a\u5b69\u5b50\u81f3\u5c11\u5206\u914d\u5230 1 \u4e2a\u7cd6\u679c\u3002 \u76f8\u90bb\u4e24\u4e2a\u5b69\u5b50\u8bc4\u5206\u66f4\u9ad8\u7684\u5b69\u5b50\u4f1a\u83b7\u5f97\u66f4\u591a\u7684\u7cd6\u679c\u3002 \u8bf7\u4f60\u7ed9\u6bcf\u4e2a\u5b69\u5b50\u5206\u53d1\u7cd6\u679c\uff0c\u8ba1\u7b97\u5e76\u8fd4\u56de\u9700\u8981\u51c6\u5907\u7684 \u6700\u5c11\u7cd6\u679c\u6570\u76ee \u3002</p>"},{"location":"lc/top-interview-150/15_135_%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/15_135_%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/#_3","title":"\u8d2a\u5fc3","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5c06\u300c\u76f8\u90bb\u7684\u5b69\u5b50\u4e2d\uff0c\u8bc4\u5206\u9ad8\u7684\u5b69\u5b50\u5fc5\u987b\u83b7\u5f97\u66f4\u591a\u7684\u7cd6\u679c\u300d\u8fd9\u53e5\u8bdd\u62c6\u5206\u4e3a\u4e24\u4e2a\u89c4\u5219\uff0c\u5206\u522b\u5904\u7406\u3002</p> <ul> <li>\u5de6\u89c4\u5219\uff1a\u5f53 <code>ratings[i\u22121]&lt;ratings[i]</code> \u65f6\uff0c<code>i</code> \u53f7\u5b66\u751f\u7684\u7cd6\u679c\u6570\u91cf\u5c06\u6bd4 <code>i\u22121</code> \u53f7\u5b69\u5b50\u7684\u7cd6\u679c\u6570\u91cf\u591a\u3002</li> <li>\u53f3\u89c4\u5219\uff1a\u5f53 <code>ratings[i]&gt;ratings[i+1]</code> \u65f6\uff0c<code>i</code> \u53f7\u5b66\u751f\u7684\u7cd6\u679c\u6570\u91cf\u5c06\u6bd4 <code>i+1</code> \u53f7\u5b69\u5b50\u7684\u7cd6\u679c\u6570\u91cf\u591a\u3002 \u6211\u4eec\u904d\u5386\u8be5\u6570\u7ec4\u4e24\u6b21\uff0c\u5904\u7406\u51fa\u6bcf\u4e00\u4e2a\u5b66\u751f\u5206\u522b\u6ee1\u8db3\u5de6\u89c4\u5219\u6216\u53f3\u89c4\u5219\u65f6\uff0c\u6700\u5c11\u9700\u8981\u88ab\u5206\u5f97\u7684\u7cd6\u679c\u6570\u91cf\u3002\u6bcf\u4e2a\u4eba\u6700\u7ec8\u5206\u5f97\u7684\u7cd6\u679c\u6570\u91cf\u5373\u4e3a\u8fd9\u4e24\u4e2a\u6570\u91cf\u7684\u6700\u5927\u503c\u3002</li> </ul>"},{"location":"lc/top-interview-150/15_135_%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func candy(ratings []int) int {\n    c := make([]int,len(ratings))\n\n\n    for idx,_:=range ratings {\n        c[idx] = 1\n    }\n\n    for i:=1;i&lt;len(ratings);i++ {\n        if ratings[i] &gt; ratings[i-1] {\n            c[i] = c[i-1] + 1\n        }\n    }\n\n    for i:=len(ratings)-2;i&gt;=0;i-- {\n        if ratings[i]&gt;ratings[i+1] {\n            c[i] = max(c[i+1]+1,c[i])\n        }\n    }\n\n    ans:=0\n    for _,v:=range c {\n        ans+=v\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/16_42_%E6%8E%A5%E9%9B%A8%E6%B0%B4/","title":"42. \u63a5\u96e8\u6c34","text":""},{"location":"lc/top-interview-150/16_42_%E6%8E%A5%E9%9B%A8%E6%B0%B4/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a n \u4e2a\u975e\u8d1f\u6574\u6570\u8868\u793a\u6bcf\u4e2a\u5bbd\u5ea6\u4e3a 1 \u7684\u67f1\u5b50\u7684\u9ad8\u5ea6\u56fe\uff0c\u8ba1\u7b97\u6309\u6b64\u6392\u5217\u7684\u67f1\u5b50\uff0c\u4e0b\u96e8\u4e4b\u540e\u80fd\u63a5\u591a\u5c11\u96e8\u6c34\u3002</p> <p>\u793a\u4f8b</p> <p></p> <pre><code>\u8f93\u5165\uff1aheight = [0,1,0,2,1,0,1,3,2,1,2,1]\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u4e0a\u9762\u662f\u7531\u6570\u7ec4 [0,1,0,2,1,0,1,3,2,1,2,1] \u8868\u793a\u7684\u9ad8\u5ea6\u56fe\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u63a5 6 \u4e2a\u5355\u4f4d\u7684\u96e8\u6c34\uff08\u84dd\u8272\u90e8\u5206\u8868\u793a\u96e8\u6c34\uff09\u3002 \n</code></pre>"},{"location":"lc/top-interview-150/16_42_%E6%8E%A5%E9%9B%A8%E6%B0%B4/#_2","title":"\u9898\u89e3","text":"<p>\u5c06\u4e00\u4e2a\u51f9\u69fd\u7531\u6574\u4f53\u5207\u5206\u4e3a\u591a\u5c42\u8ba1\u7b97\uff0c\u6bcf\u4e00\u5c42\u7684\u96e8\u6c34\u9762\u79ef\u662f\u7531\u5de6\u53f3\u4e24\u4e2a\u67f1\u5b50\u4e4b\u95f4\u7684\u5bbd\u5ea6\u548c\u4e2d\u95f4\u67f1\u5b50\u7684\u9ad8\u5ea6\u51b3\u5b9a\u7684\u3002 \u7ef4\u62a4\u4e00\u4e2a\u5355\u8c03\u9012\u51cf\u6808\uff0c\u904d\u5386\u67f1\u5b50\u6570\u7ec4\uff0c\u5f53\u5f53\u524d\u67f1\u5b50\u7684\u9ad8\u5ea6\u9ad8\u4e8e\u6808\u9876\u5143\u7d20\u65f6\uff0c\u5219\u8bf4\u660e\u5f53\u524d\u5143\u7d20\u4e0e\u6808\u9876\u5143\u7d20\u4ee5\u53ca\u6b21\u9876\u5143\u7d20\u53ef\u4ee5\u5f62\u6210\u4e00\u4e2a\u51f9\u69fd\uff0c\u8ba1\u7b97\u51f9\u69fd\u7684\u9762\u79ef\u5e76\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\uff0c\u5f39\u51fa\u6808\u9876\u5143\u7d20\u3002\u5faa\u73af\u8be5\u8fc7\u7a0b\u76f4\u81f3\u6808\u4e3a\u7a7a\u6216\u8005\u5f53\u524d\u5143\u7d20\u5c0f\u4e8e\u6808\u9876\u5143\u7d20\uff0c\u6b64\u65f6\u4ee5\u5f53\u524d\u5143\u7d20\u4e3a\u53f3\u8fb9\u754c\u7684\u51f9\u69fd\u9762\u79ef\u5df2\u7ecf\u8ba1\u7b97\u5b8c\u6210\uff0c\u5c06\u5f53\u524d\u5143\u7d20\u5165\u6808\u3002</p> <p></p> <p>\u5982\u4e0a\u56fe\uff0c1\u53f7\u6c34\u69fd\u662f\u75310\u53f7\u548c2\u53f7\u67f1\u5b50\u4ee5\u53ca\u4e2d\u95f4\u76841\u53f7\u67f1\u5b50\u7ec4\u6210\u7684\uff0c\u5bbd\u5ea6\u4e3a1\uff0c\u9ad8\u5ea6\u4e3a1\uff0c\u9762\u79ef\u4e3a1\u3002</p>"},{"location":"lc/top-interview-150/16_42_%E6%8E%A5%E9%9B%A8%E6%B0%B4/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func trap(height []int) int {\n    stk := make([]int,0)\n    ans := 0\n\n    for idx,val := range height {\n        for len(stk)&gt;0 &amp;&amp; val &gt;= height[stk[len(stk) - 1]] {\n            bottom := height[stk[len(stk) - 1]]\n            stk = stk[:len(stk) - 1]\n            if len(stk) &gt; 0 {\n                left := height[stk[len(stk) - 1]]\n                h := min(val,left) - bottom\n\n                ans += ((idx - stk[len(stk) - 1] - 1)*h)\n            }\n        } \n        stk = append(stk,idx)\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/17_13_%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/","title":"13.\u7f57\u9a6c\u6570\u5b57\u8f6c\u6574\u6570","text":""},{"location":"lc/top-interview-150/17_13_%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/#_1","title":"\u9898\u76ee","text":"<p>\u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26: <code>I</code>\uff0c <code>V</code>\uff0c <code>X</code>\uff0c <code>L</code>\uff0c<code>C</code>\uff0c<code>D</code> \u548c <code>M</code>\u3002</p> <p>\u4f8b\u5982\uff0c \u7f57\u9a6c\u6570\u5b57 <code>2</code> \u5199\u505a <code>II</code> \uff0c\u5373\u4e3a\u4e24\u4e2a\u5e76\u5217\u7684 1 \u3002<code>12</code> \u5199\u505a <code>XII</code> \uff0c\u5373\u4e3a <code>X</code> + <code>II</code> \u3002 <code>27</code> \u5199\u505a <code>XXVII</code>, \u5373\u4e3a <code>XX</code> + <code>V</code> + <code>II</code> \u3002</p> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u7f57\u9a6c\u6570\u5b57\u4e2d\u5c0f\u7684\u6570\u5b57\u5728\u5927\u7684\u6570\u5b57\u7684\u53f3\u8fb9\u3002\u4f46\u4e5f\u5b58\u5728\u7279\u4f8b\uff0c\u4f8b\u5982 4 \u4e0d\u5199\u505a <code>IIII</code>\uff0c\u800c\u662f <code>IV</code>\u3002\u6570\u5b57 1 \u5728\u6570\u5b57 5 \u7684\u5de6\u8fb9\uff0c\u6240\u8868\u793a\u7684\u6570\u7b49\u4e8e\u5927\u6570 5 \u51cf\u5c0f\u6570 1 \u5f97\u5230\u7684\u6570\u503c 4 \u3002\u540c\u6837\u5730\uff0c\u6570\u5b57 9 \u8868\u793a\u4e3a <code>IX</code>\u3002\u8fd9\u4e2a\u7279\u6b8a\u7684\u89c4\u5219\u53ea\u9002\u7528\u4e8e\u4ee5\u4e0b\u516d\u79cd\u60c5\u51b5\uff1a</p> <ul> <li><code>I</code> \u53ef\u4ee5\u653e\u5728 <code>V</code> (5) \u548c <code>X</code> (10) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 4 \u548c 9\u3002</li> <li><code>X</code> \u53ef\u4ee5\u653e\u5728 <code>L</code> (50) \u548c <code>C</code> (100) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 40 \u548c 90\u3002 </li> <li><code>C</code> \u53ef\u4ee5\u653e\u5728 <code>D</code> (500) \u548c <code>M</code> (1000) \u7684\u5de6\u8fb9\uff0c\u6765\u8868\u793a 400 \u548c 900\u3002</li> </ul> <p>\u7ed9\u5b9a\u4e00\u4e2a\u7f57\u9a6c\u6570\u5b57\uff0c\u5c06\u5176\u8f6c\u6362\u6210\u6574\u6570\u3002</p>"},{"location":"lc/top-interview-150/17_13_%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/#_2","title":"\u89e3\u9898","text":"<p>\u6784\u5efa\u6240\u6709\u7f57\u9a6c\u6570\u5b57\u5230\u6574\u6570\u7684\u6620\u5c04\u8868\uff0c\u904d\u5386\u5b57\u7b26\u4e32\uff0c\u89e3\u6790\u7f57\u9a6c\u6570\u5b57token\uff0c\u5bf9\u5e94\u7684\u6574\u6570\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\uff0c\u89e3\u6790token\u8fc7\u7a0b\u4e2d\uff1a</p> <ul> <li>\u5982\u679c\u63a5\u4e0b\u6765\u4e24\u4e2a\u5b57\u7b26\u53ef\u4ee5\u6784\u6210\u6709\u6548token\uff0c\u4f18\u5148\u4f7f\u7528\u4e24\u5b57\u7b26token\u3002</li> <li>\u5982\u679c\u4e0d\u5b58\u5728\u4e24\u5b57\u7b26token\uff0c\u4f7f\u7528\u5355\u5b57\u7b26token\u3002</li> </ul>"},{"location":"lc/top-interview-150/17_13_%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97%E8%BD%AC%E6%95%B4%E6%95%B0/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>var dict = map[string]int {\n    \"I\":1,\n    \"V\":5,\n    \"X\":10,\n    \"L\":50,\n    \"C\":100,\n    \"D\":500,\n    \"M\":1000,\n    \"IV\":4,\n    \"IX\":9,\n    \"XL\":40,\n    \"XC\":90,\n    \"CD\":400,\n    \"CM\":900,\n}\n\nfunc romanToInt(s string) int {\n    idx := 0\n    ans :=0\n\n    for idx &lt; len(s){\n        var v int\n        v,idx = next(s,idx)\n        ans+=v \n    }\n    return ans\n}\n\nfunc next(s string, idx int) (int,int) {\n    if idx &gt;= len(s) {\n        panic(\"range overflow\")\n    }\n    if idx+1 &lt; len(s) {\n        token := s[idx:idx+2]\n        if v,ok := dict[token];ok {\n            idx+=2\n            return v,idx\n        }\n    }\n    v := dict[s[idx:idx+1]]\n    idx++\n    return v,idx\n}\n</code></pre>"},{"location":"lc/top-interview-150/18_12_%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/","title":"12. \u6574\u6570\u8f6c\u7f57\u9a6c\u6570\u5b57","text":""},{"location":"lc/top-interview-150/18_12_%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/#_1","title":"\u9898\u76ee","text":"<p>\u7f57\u9a6c\u6570\u5b57\u5305\u542b\u4ee5\u4e0b\u4e03\u79cd\u5b57\u7b26\uff1a I\uff0c V\uff0c X\uff0c L\uff0cC\uff0cD \u548c M\u3002</p> \u5b57\u7b26 \u6570\u503c I 1 V 5 X 10 L 50 C 100 D 500 M 1000 <p>\u7f57\u9a6c\u6570\u5b57\u662f\u901a\u8fc7\u6dfb\u52a0\u4ece\u6700\u9ad8\u5230\u6700\u4f4e\u7684\u5c0f\u6570\u4f4d\u503c\u7684\u8f6c\u6362\u800c\u5f62\u6210\u7684\u3002\u5c06\u5c0f\u6570\u4f4d\u503c\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u6709\u4ee5\u4e0b\u89c4\u5219\uff1a</p> <p>\u5982\u679c\u8be5\u503c\u4e0d\u662f\u4ee5 4 \u6216 9 \u5f00\u5934\uff0c\u8bf7\u9009\u62e9\u53ef\u4ee5\u4ece\u8f93\u5165\u4e2d\u51cf\u53bb\u7684\u6700\u5927\u503c\u7684\u7b26\u53f7\uff0c\u5c06\u8be5\u7b26\u53f7\u9644\u52a0\u5230\u7ed3\u679c\uff0c\u51cf\u53bb\u5176\u503c\uff0c\u7136\u540e\u5c06\u5176\u4f59\u90e8\u5206\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002 \u5982\u679c\u8be5\u503c\u4ee5 4 \u6216 9 \u5f00\u5934\uff0c\u4f7f\u7528 \u51cf\u6cd5\u5f62\u5f0f\uff0c\u8868\u793a\u4ece\u4ee5\u4e0b\u7b26\u53f7\u4e2d\u51cf\u53bb\u4e00\u4e2a\u7b26\u53f7\uff0c\u4f8b\u5982 4 \u662f 5 (V) \u51cf 1 (I): IV \uff0c9 \u662f 10 (X) \u51cf 1 (I)\uff1aIX\u3002\u4ec5\u4f7f\u7528\u4ee5\u4e0b\u51cf\u6cd5\u5f62\u5f0f\uff1a4 (IV)\uff0c9 (IX)\uff0c40 (XL)\uff0c90 (XC)\uff0c400 (CD) \u548c 900 (CM)\u3002 \u53ea\u6709 10 \u7684\u6b21\u65b9\uff08I, X, C, M\uff09\u6700\u591a\u53ef\u4ee5\u8fde\u7eed\u9644\u52a0 3 \u6b21\u4ee5\u4ee3\u8868 10 \u7684\u500d\u6570\u3002\u4f60\u4e0d\u80fd\u591a\u6b21\u9644\u52a0 5 (V)\uff0c50 (L) \u6216 500 (D)\u3002\u5982\u679c\u9700\u8981\u5c06\u7b26\u53f7\u9644\u52a04\u6b21\uff0c\u8bf7\u4f7f\u7528 \u51cf\u6cd5\u5f62\u5f0f\u3002 \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\u3002</p>"},{"location":"lc/top-interview-150/18_12_%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/#_2","title":"\u9898\u89e3","text":"<p>\u603b\u7ed3\u8f6c\u6362\u89c4\u5f8b\u4e3a\uff0c\u4f18\u5148\u4f7f\u7528\u5927\u7684\u6570\u5b57\uff0c\u53ea\u6709\u5728\u6570\u5b57\u65e0\u6cd5\u8868\u793a\u65f6\uff0c\u624d\u4f7f\u7528\u5c0f\u7684\u6570\u5b57\u3002</p> <p>\u6784\u5efa\u4e00\u4e2a\u7f57\u9a6c\u6570\u5b57\u6570\u7ec4\uff0c\u6309\u7167\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u6392\u5217\u3002</p> <ul> <li>\u4ece\u5927\u5230\u5c0f\u904d\u5386\u6570\u5b57\uff0c\u5224\u65ad\u6570\u5b57\u662f\u5426\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6570\u5b57\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e\u5f53\u524d\u6570\u5b57\uff0c\u5219\u5c06\u5f53\u524d\u6570\u5b57\u8f6c\u6362\u4e3a\u7f57\u9a6c\u6570\u5b57\uff0c\u5e76\u5c06\u6570\u5b57\u51cf\u53bb\u5f53\u524d\u6570\u5b57\u3002</li> <li>\u5982\u679c\u6570\u5b57\u5c0f\u4e8e\u5f53\u524d\u6570\u5b57\uff0c\u5219\u7ee7\u7eed\u904d\u5386\u4e0b\u4e00\u4e2a\u6570\u5b57\u3002</li> </ul> <p>\u91cd\u590d\u6b65\u9aa4 1 \u548c 2\uff0c\u76f4\u5230\u6570\u5b57\u4e3a 0\u3002</p>"},{"location":"lc/top-interview-150/18_12_%E6%95%B4%E6%95%B0%E8%BD%AC%E7%BD%97%E9%A9%AC%E6%95%B0%E5%AD%97/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>var dict = []struct{\n    Val int\n    Rome string\n}{\n    {1000, \"M\"},\n    {900, \"CM\"},\n    {500, \"D\"},\n    {400, \"CD\"},\n    {100, \"C\"},\n    {90, \"XC\"},\n    {50, \"L\"},\n    {40, \"XL\"},\n    {10, \"X\"},\n    {9, \"IX\"},\n    {5, \"V\"},\n    {4, \"IV\"},\n    {1, \"I\"},\n}\n\nfunc intToRoman(v int) string {\n    ans := \"\"\n    for _, item := range dict {\n        for v &gt;= item.Val {\n            ans += item.Rome\n            v -= item.Val\n        }\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/19_58_%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/","title":"58. \u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6","text":""},{"location":"lc/top-interview-150/19_58_%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s\uff0c\u7531\u82e5\u5e72\u5355\u8bcd\u7ec4\u6210\uff0c\u5355\u8bcd\u524d\u540e\u7528\u4e00\u4e9b\u7a7a\u683c\u5b57\u7b26\u9694\u5f00\u3002\u8fd4\u56de\u5b57\u7b26\u4e32\u4e2d \u6700\u540e\u4e00\u4e2a \u5355\u8bcd\u7684\u957f\u5ea6\u3002</p> <p>\u5355\u8bcd \u662f\u6307\u4ec5\u7531\u5b57\u6bcd\u7ec4\u6210\u3001\u4e0d\u5305\u542b\u4efb\u4f55\u7a7a\u683c\u5b57\u7b26\u7684\u6700\u5927\u5b50\u5b57\u7b26\u4e32\u3002</p> \u793a\u4f8b 1\u793a\u4f8b 2\u793a\u4f8b 3 <pre><code>\u8f93\u5165\uff1as = \"Hello World\"\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u662f\u201cWorld\u201d\uff0c\u957f\u5ea6\u4e3a 5\u3002\n\u793a\u4f8b 2\uff1a\n</code></pre> <pre><code>\u8f93\u5165\uff1as = \"   fly me   to   the moon  \"\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u662f\u201cmoon\u201d\uff0c\u957f\u5ea6\u4e3a 4\u3002\n\u793a\u4f8b 3\uff1a\n</code></pre> <pre><code>\u8f93\u5165\uff1as = \"luffy is still joyboy\"\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u662f\u957f\u5ea6\u4e3a 6 \u7684\u201cjoyboy\u201d\u3002\n</code></pre>"},{"location":"lc/top-interview-150/19_58_%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/#_2","title":"\u9898\u89e3","text":"<p>\u7565</p>"},{"location":"lc/top-interview-150/19_58_%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AA%E5%8D%95%E8%AF%8D%E7%9A%84%E9%95%BF%E5%BA%A6/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func lastWordLen(s string) int {\n    cursor := len(s) -1\n    for cursor &gt;=0 &amp;&amp; s[cursor] == ' ' {\n        cursor--\n    }\n\n    if cursor &lt; 0 {\n        return 0\n    }\n\n    wordLen := 0\n    for cursor &gt;= 0 &amp;&amp; s[cursor] != ' ' {\n        wordLen++\n        cursor--\n    }\n    return wordLen\n}\n</code></pre>"},{"location":"lc/top-interview-150/1_88_%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/","title":"88. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u6570\u7ec4","text":""},{"location":"lc/top-interview-150/1_88_%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e24\u4e2a\u6309 \u975e\u9012\u51cf\u987a\u5e8f \u6392\u5217\u7684\u6574\u6570\u6570\u7ec4 nums1 \u548c nums2\uff0c\u53e6\u6709\u4e24\u4e2a\u6574\u6570 m \u548c n \uff0c\u5206\u522b\u8868\u793a nums1 \u548c nums2 \u4e2d\u7684\u5143\u7d20\u6570\u76ee\u3002</p> <p>\u8bf7\u4f60 \u5408\u5e76 nums2 \u5230 nums1 \u4e2d\uff0c\u4f7f\u5408\u5e76\u540e\u7684\u6570\u7ec4\u540c\u6837\u6309 \u975e\u9012\u51cf\u987a\u5e8f \u6392\u5217\u3002</p> <p>\u6ce8\u610f\uff1a\u6700\u7ec8\uff0c\u5408\u5e76\u540e\u6570\u7ec4\u4e0d\u5e94\u7531\u51fd\u6570\u8fd4\u56de\uff0c\u800c\u662f\u5b58\u50a8\u5728\u6570\u7ec4 nums1 \u4e2d\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u79cd\u60c5\u51b5\uff0cnums1 \u7684\u521d\u59cb\u957f\u5ea6\u4e3a m + n\uff0c\u5176\u4e2d\u524d m \u4e2a\u5143\u7d20\u8868\u793a\u5e94\u5408\u5e76\u7684\u5143\u7d20\uff0c\u540e n \u4e2a\u5143\u7d20\u4e3a 0 \uff0c\u5e94\u5ffd\u7565\u3002nums2 \u7684\u957f\u5ea6\u4e3a n \u3002</p>"},{"location":"lc/top-interview-150/1_88_%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u53cc\u6307\u9488\u5b9e\u73b0\u539f\u5730\u5408\u5e76\uff0c\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488 <code>m</code> \u548c <code>n</code> \u5206\u522b\u6307\u5411 <code>nums1</code> \u548c <code>nums2</code> \u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff0c\u5b9a\u4e49\u4e00\u4e2a\u6307\u9488 <code>pos</code> \u6307\u5411 <code>nums1</code> \u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> <p>\u4ece \u540e\u5f80\u524d\u904d\u5386 \uff0c\u6bcf\u6b21\u53d6\u4e24\u8005\u4e4b\u4e2d\u7684\u8f83\u5927\u8005\u653e\u8fdb <code>nums1</code> \u7684\u6700\u540e\u9762\uff0c\u76f4\u5230\u5176\u4e2d\u4e00\u4e2a\u6570\u7ec4\u7684\u5143\u7d20\u904d\u5386\u5b8c\u3002</p>"},{"location":"lc/top-interview-150/1_88_%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func merge(nums1 []int, m int, nums2 []int, n int) {\n    pos := m + n - 1\n    m--\n    n--\n    for m &gt;= 0 &amp;&amp; n &gt;= 0 {\n        if nums1[m] &gt; nums2[n] {\n            nums1[pos] = nums1[m]\n            m--\n        } else {\n            nums1[pos] = nums2[n]\n            n--\n        }\n        pos--\n    }\n    for n &gt;= 0 {\n        nums1[pos] = nums2[n]\n        n--\n        pos--\n    }\n}\n</code></pre>"},{"location":"lc/top-interview-150/20_14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/","title":"14. \u6700\u957f\u516c\u5171\u524d\u7f00","text":""},{"location":"lc/top-interview-150/20_14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/#_1","title":"\u9898\u76ee","text":"<p>\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002</p> <p>\u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 \"\"\u3002</p> \u793a\u4f8b 1\u793a\u4f8b 2 <pre><code>\u8f93\u5165\uff1astrs = [\"flower\",\"flow\",\"flight\"]\n\u8f93\u51fa\uff1a\"fl\"\n</code></pre> <pre><code>\u8f93\u5165\uff1astrs = [\"dog\",\"racecar\",\"car\"]\n\u8f93\u51fa\uff1a\"\"\n\u89e3\u91ca\uff1a\u8f93\u5165\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\u3002\n</code></pre>"},{"location":"lc/top-interview-150/20_14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/#_2","title":"\u9898\u89e3","text":"<p>\u7ef4\u62a4\u4e00\u4e2a\u6307\u9488\u6307\u5411\u5f53\u524d\u5df2\u77e5\u7684\u516c\u5171\u524d\u7f00\u672b\u5c3e\uff0c\u5411\u524d\u79fb\u52a8\u6307\u9488\u76f4\u81f3\u6709\u5b57\u7b26\u4e32\u4e0d\u518d\u6ee1\u8db3\u3002</p>"},{"location":"lc/top-interview-150/20_14_%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func longestCommonPrefix(strs []string) string {\n    cursor := 0\n\n    for cursor &lt; len(strs[0]) {\n        cur := strs[0][cursor]\n        for _, s := range strs {\n            if cursor &gt;= len(s) || s[cursor] != cur {\n                return strs[0][:cursor]\n            }\n        }\n        cursor++\n    }\n    return strs[0][:cursor]\n}\n</code></pre>"},{"location":"lc/top-interview-150/21_%20151_%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D/","title":"151. \u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd","text":""},{"location":"lc/top-interview-150/21_%20151_%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u53cd\u8f6c\u5b57\u7b26\u4e32\u4e2d \u5355\u8bcd \u7684\u987a\u5e8f\u3002</p> <p>\u5355\u8bcd \u662f\u7531\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u3002s \u4e2d\u4f7f\u7528\u81f3\u5c11\u4e00\u4e2a\u7a7a\u683c\u5c06\u5b57\u7b26\u4e32\u4e2d\u7684 \u5355\u8bcd \u5206\u9694\u5f00\u3002</p> <p>\u8fd4\u56de \u5355\u8bcd \u987a\u5e8f\u98a0\u5012\u4e14 \u5355\u8bcd \u4e4b\u95f4\u7528\u5355\u4e2a\u7a7a\u683c\u8fde\u63a5\u7684\u7ed3\u679c\u5b57\u7b26\u4e32\u3002</p> <p>\u6ce8\u610f\uff1a\u8f93\u5165\u5b57\u7b26\u4e32 s\u4e2d\u53ef\u80fd\u4f1a\u5b58\u5728\u524d\u5bfc\u7a7a\u683c\u3001\u5c3e\u968f\u7a7a\u683c\u6216\u8005\u5355\u8bcd\u95f4\u7684\u591a\u4e2a\u7a7a\u683c\u3002\u8fd4\u56de\u7684\u7ed3\u679c\u5b57\u7b26\u4e32\u4e2d\uff0c\u5355\u8bcd\u95f4\u5e94\u5f53\u4ec5\u7528\u5355\u4e2a\u7a7a\u683c\u5206\u9694\uff0c\u4e14\u4e0d\u5305\u542b\u4efb\u4f55\u989d\u5916\u7684\u7a7a\u683c\u3002</p>"},{"location":"lc/top-interview-150/21_%20151_%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D/#_2","title":"\u9898\u89e3","text":"<p>\u89e3\u9898\u6b65\u9aa4\uff1a  </p> <ul> <li>\u89e3\u6790\u51fa\u5b57\u7b26\u4e32\u6570\u7ec4</li> <li>\u53cd\u8f6c\u6570\u7ec4</li> <li>\u7ec4\u88c5\u7ed3\u679c </li> </ul>"},{"location":"lc/top-interview-150/21_%20151_%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%8D%95%E8%AF%8D/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func reverseWords(s string) string {\n    words := make([]string, 0)\n    var word string\n    var next int\n    for {\n        word, next = parse(s, next)\n        if len(word) != 0 {\n            words = append(words, word)\n\n        }\n        if next &gt;= len(s) {\n            break\n        }\n    }\n\n    reverse(words)\n\n    return strings.Join(words, \" \")\n}\n\nfunc parse(s string, start int) (string, int) {\n    for start &lt; len(s) &amp;&amp; s[start] == ' ' {\n        start++\n    }\n\n    i := start\n\n    for start &lt; len(s) &amp;&amp; s[start] != ' ' {\n        start++\n    }\n\n    return s[i:start], start\n}\n\nfunc reverse(words []string) {\n    var i, j = 0, len(words) - 1\n\n    for i &lt; j {\n        words[i], words[j] = words[j], words[i]\n        i++\n        j--\n    }\n}\n</code></pre>"},{"location":"lc/top-interview-150/22_6_Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/","title":"6.Z \u5b57\u5f62\u53d8\u6362","text":""},{"location":"lc/top-interview-150/22_6_Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/#_1","title":"\u9898\u76ee","text":"<p>\u5c06\u4e00\u4e2a\u7ed9\u5b9a\u5b57\u7b26\u4e32 <code>s</code> \u6839\u636e\u7ed9\u5b9a\u7684\u884c\u6570 <code>numRows</code> \uff0c\u4ee5\u4ece\u4e0a\u5f80\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u8fdb\u884c Z \u5b57\u5f62\u6392\u5217\u3002</p> <p>\u6bd4\u5982\u8f93\u5165\u5b57\u7b26\u4e32\u4e3a \"PAYPALISHIRING\" \u884c\u6570\u4e3a 3 \u65f6\uff0c\u6392\u5217\u5982\u4e0b\uff1a</p> <pre><code>P   A   H   N\nA P L S I I G\nY   I   R\n</code></pre> <p>\u4e4b\u540e\uff0c\u4f60\u7684\u8f93\u51fa\u9700\u8981\u4ece\u5de6\u5f80\u53f3\u9010\u884c\u8bfb\u53d6\uff0c\u4ea7\u751f\u51fa\u4e00\u4e2a\u65b0\u7684\u5b57\u7b26\u4e32\uff0c\u6bd4\u5982\uff1a\"PAHNAPLSIIGYIR\"\u3002</p> <p>\u8bf7\u4f60\u5b9e\u73b0\u8fd9\u4e2a\u5c06\u5b57\u7b26\u4e32\u8fdb\u884c\u6307\u5b9a\u884c\u6570\u53d8\u6362\u7684\u51fd\u6570\uff1a</p> <pre><code>string convert(string s, int numRows);\n</code></pre> \u793a\u4f8b 1\u793a\u4f8b 2\u793a\u4f8b 3 <pre><code>\u8f93\u5165\uff1as = \"PAYPALISHIRING\", numRows = 3\n\u8f93\u51fa\uff1a\"PAHNAPLSIIGYIR\"\n</code></pre> <pre><code>\u8f93\u5165\uff1as = \"PAYPALISHIRING\", numRows = 4\n\u8f93\u51fa\uff1a\"PINALSIGYAHRPI\"\n\u89e3\u91ca\uff1a\nP     I    N\nA   L S  I G\nY A   H R\nP     I\n</code></pre> <pre><code>\u8f93\u5165\uff1as = \"A\", numRows = 1\n\u8f93\u51fa\uff1a\"A\"\n</code></pre>"},{"location":"lc/top-interview-150/22_6_Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/#_2","title":"\u9898\u89e3","text":"<p>\u6a21\u62df\u904d\u5386\u8fc7\u7a0b\uff0c\u51c6\u5907\u4e00\u4e2a\u957f\u5ea6\u4e3a<code>numRows</code>\u7684\u5b57\u7b26\u4e32\u6570\u7ec4<code>strs</code>\uff0c\u904d\u5386<code>s</code>\uff0c\u8bb0\u5f55\u5f53\u524d\u5b57\u7b26\u5728<code>strs</code>\u4e2d\u7684\u4f4d\u7f6e<code>row</code>\uff0c\u6bcf\u6b21\u904d\u5386<code>row</code>\u5411\u4e0a\u6216\u5411\u4e0b\u79fb\u52a8\uff0c\u5f53\uff1a</p> <ul> <li><code>row</code> == <code>numRows</code> \uff1a \u9700\u8981\u8c03\u8f6c\u65b9\u5411\u5411\u4e0a</li> <li><code>row</code> == 0\uff1a\u9700\u8981\u8c03\u8f6c\u65b9\u5411\u5411\u4e0b</li> </ul>"},{"location":"lc/top-interview-150/22_6_Z%E5%AD%97%E5%BD%A2%E5%8F%98%E6%8D%A2/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func convert(s string, numRows int) string {\n    if numRows == 1 {\n        return s\n    }\n    down := true\n    strs := make([]string, numRows)\n    row := 0\n\n    for _, val := range s {\n        strs[row] = strs[row] + string(val)\n        if down {\n            row++\n        } else {\n            row--\n        }\n        if row == numRows-1 {\n            down = false\n        } else if row == 0 {\n            down = true\n        }\n\n    }\n    ans := \"\"\n    for _, val := range strs {\n        ans += val\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/23_28_%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/","title":"28. \u627e\u51fa\u5b57\u7b26\u4e32\u4e2d\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u4e0b\u6807","text":""},{"location":"lc/top-interview-150/23_28_%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 haystack \u548c needle \uff0c\u8bf7\u4f60\u5728 haystack \u5b57\u7b26\u4e32\u4e2d\u627e\u51fa needle \u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5339\u914d\u9879\u7684\u4e0b\u6807\uff08\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff09\u3002\u5982\u679c needle \u4e0d\u662f haystack \u7684\u4e00\u90e8\u5206\uff0c\u5219\u8fd4\u56de  -1 \u3002</p>"},{"location":"lc/top-interview-150/23_28_%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/#_2","title":"\u9898\u89e3","text":"<p>KMP</p>"},{"location":"lc/top-interview-150/23_28_%E6%89%BE%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8C%B9%E9%85%8D%E9%A1%B9%E7%9A%84%E4%B8%8B%E6%A0%87/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func strStr(haystack string, needle string) int {\n    next := buildNext(needle)\n\n    var i,j = 0,0\n    for i &lt; len(haystack) &amp;&amp; j&lt; len(needle)  {\n        if j &lt; 0 || haystack[i] == needle[j] {\n            i++\n            j++\n        } else {\n            j = next[j]\n        }\n        if j == len(needle) {\n            return i - j\n        }\n    }\n    return -1\n}\n\nfunc buildNext(needle string) []int {\n    var (\n        i,j = 0,0\n        next = make([]int,len(needle))\n    )\n    next[j] = -1\n    i = next[j]\n\n    for j+1 &lt; len(needle) {\n        if i &lt; 0 || needle[j] == needle[i] {\n            next[j+1] = i+1\n            i++\n            j++\n        }else {\n            i = next[i]\n        }\n    }\n\n    return next\n}\n</code></pre>"},{"location":"lc/top-interview-150/24_68_%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90/","title":"68. \u6587\u672c\u5de6\u53f3\u5bf9\u9f50","text":""},{"location":"lc/top-interview-150/24_68_%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5355\u8bcd\u6570\u7ec4 <code>words</code> \u548c\u4e00\u4e2a\u957f\u5ea6 <code>maxWidth</code> \uff0c\u91cd\u65b0\u6392\u7248\u5355\u8bcd\uff0c\u4f7f\u5176\u6210\u4e3a\u6bcf\u884c\u6070\u597d\u6709 <code>maxWidth</code> \u4e2a\u5b57\u7b26\uff0c\u4e14\u5de6\u53f3\u4e24\u7aef\u5bf9\u9f50\u7684\u6587\u672c\u3002</p> <p>\u4f60\u5e94\u8be5\u4f7f\u7528 \u201c\u8d2a\u5fc3\u7b97\u6cd5\u201d \u6765\u653e\u7f6e\u7ed9\u5b9a\u7684\u5355\u8bcd\uff1b\u4e5f\u5c31\u662f\u8bf4\uff0c\u5c3d\u53ef\u80fd\u591a\u5730\u5f80\u6bcf\u884c\u4e2d\u653e\u7f6e\u5355\u8bcd\u3002\u5fc5\u8981\u65f6\u53ef\u7528\u7a7a\u683c ' ' \u586b\u5145\uff0c\u4f7f\u5f97\u6bcf\u884c\u6070\u597d\u6709 <code>maxWidth</code> \u4e2a\u5b57\u7b26\u3002</p> <p>\u8981\u6c42\u5c3d\u53ef\u80fd\u5747\u5300\u5206\u914d\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u6570\u91cf\u3002\u5982\u679c\u67d0\u4e00\u884c\u5355\u8bcd\u95f4\u7684\u7a7a\u683c\u4e0d\u80fd\u5747\u5300\u5206\u914d\uff0c\u5219\u5de6\u4fa7\u653e\u7f6e\u7684\u7a7a\u683c\u6570\u8981\u591a\u4e8e\u53f3\u4fa7\u7684\u7a7a\u683c\u6570\u3002</p> <p>\u6587\u672c\u7684\u6700\u540e\u4e00\u884c\u5e94\u4e3a\u5de6\u5bf9\u9f50\uff0c\u4e14\u5355\u8bcd\u4e4b\u95f4\u4e0d\u63d2\u5165\u989d\u5916\u7684\u7a7a\u683c\u3002</p> <p>\u6ce8\u610f:</p> <ul> <li>\u5355\u8bcd\u662f\u6307\u7531\u975e\u7a7a\u683c\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u5e8f\u5217\u3002</li> <li>\u6bcf\u4e2a\u5355\u8bcd\u7684\u957f\u5ea6\u5927\u4e8e 0\uff0c\u5c0f\u4e8e\u7b49\u4e8e <code>maxWidth</code>\u3002</li> <li>\u8f93\u5165\u5355\u8bcd\u6570\u7ec4 <code>words</code> \u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u5355\u8bcd\u3002</li> </ul>"},{"location":"lc/top-interview-150/24_68_%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90/#_2","title":"\u9898\u89e3","text":"<p>\u8d2a\u5fc3\uff0c\u6bcf\u884c\u5c3d\u53ef\u80fd\u591a\u7684\u5355\u8bcd\uff0c\u6bcf\u4e2a\u5355\u8bcd\u4e4b\u95f4\u6700\u5c11\u4e00\u4e2a\u7a7a\u683c\uff0c\u7a7a\u683c\u5747\u5300\u5206\u5e03\u3002\u5219\u6bcf\u884c\u6700\u77ed\u957f\u5ea6\u4e3a\u8be5\u884c\u5355\u8bcd\u957f\u5ea6\u4e4b\u548c\u52a0\u4e0a\u5355\u8bcd\u6570\u91cf\u51cf\u4e00\uff08\u7a7a\u683c\u5360\u7528\uff09\u3002</p> <p>\u95ee\u9898\u62c6\u5206\u4e3a\uff1a</p> <ul> <li> <p>\u5982\u4f55\u786e\u5b9a\u6bcf\u884c\u5355\u8bcd\u6570\u91cf</p> <p>\u904d\u5386\u7ed9\u5b9a\u6570\u7ec4\uff0c\u5c06\u6bcf\u4e2a\u5355\u8bcd\u653e\u5165\u5f53\u524d\u884c\u7684\u5355\u8bcd\u96c6\u5408\uff0c\u5982\u679c\u653e\u5165\u4e4b\u540e\u8be5\u884c\u7684**\u6700\u77ed\u957f\u5ea6**\u5927\u4e8e\u7b49\u4e8e <code>maxWidth</code>\uff0c\u5219\u5f53\u524d\u7684\u5355\u8bcd\u96c6\u5408\u5373\u4e3a\u672c\u884c\u5e94\u6392\u5217\u7684\u5355\u8bcd\u3002</p> </li> <li> <p>\u6bcf\u884c\u5355\u8bcd\u6570\u91cf\u786e\u5b9a\u540e\uff0c\u5982\u4f55\u7a7a\u683c\u5747\u5300\u5206\u5e03</p> <ul> <li>\u603b\u7a7a\u683c\u6570\uff08<code>spaceCnt</code>\uff09\u4e3a\uff1a <code>maxWidth</code> \u51cf\u53bb\u8be5\u884c\u6240\u6709\u5355\u8bcd\u957f\u5ea6\u4e4b\u548c</li> <li>\u6309\u5206\u914d\u89c4\u5219\uff1a<code>spaceCnt</code>/<code>(len(words)-1)</code>\u4e3a\u6bcf\u4e24\u4e2a\u5355\u8bcd\u4e4b\u95f4\u57fa\u7840\u7684\u7a7a\u683c\u6570\uff0c\u524d <code>spaceCnt</code> % <code>(len(words)-1)</code> \u4e2a\u95f4\u9694\u9700\u8981\u591a\u4e00\u4e2a\u7a7a\u683c</li> </ul> </li> </ul> <p>\u5bf9\u6700\u540e\u4e00\u884c\u9700\u8981\u7279\u6b8a\u5904\u7406\u3002</p>"},{"location":"lc/top-interview-150/24_68_%E6%96%87%E6%9C%AC%E5%B7%A6%E5%8F%B3%E5%AF%B9%E9%BD%90/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func fullJustify(words []string, maxWidth int) []string {\n    var res []string\n    var line []string\n\n    lineLen := 0 // \u8be5\u884c\u9664\u7a7a\u683c\u4e4b\u5916\u7684\u957f\u5ea6\n    for _, word := range words {\n        if lineLen+len(word)+minPadding(len(line)) &gt;= maxWidth {\n            res = append(res, justify(line, lineLen, maxWidth, false))\n            lineLen = 0\n            line = line[:0]\n        }\n        lineLen += len(word)\n        line = append(line, word)\n    }\n    if len(line) &gt; 0 {\n        res = append(res, justify(line, lineLen, maxWidth, true))\n    }\n\n    return res\n}\n\nfunc minPadding(lw int) int {\n    return lw - 1\n}\n\nfunc justify(line []string, lineLen, maxWidth int, last bool) string {\n    spaceCnt := maxWidth - lineLen\n\n    if last || len(line) == 1 {\n        text := strings.Join(line, \" \")\n        if spaceCnt-len(line)+1 &gt; 0 {\n            text += strings.Repeat(\" \", spaceCnt-len(line)+1)\n        }\n        return text\n    }\n\n    a := spaceCnt / (len(line) - 1)\n    b := spaceCnt % (len(line) - 1)\n\n    for i := 0; i &lt; b; i++ {\n        line[i] += \" \"\n    }\n\n    for i := 0; i &lt; len(line)-1; i++ {\n        line[i] += strings.Repeat(\" \", a)\n    }\n\n    return strings.Join(line, \"\")\n}\n</code></pre>"},{"location":"lc/top-interview-150/25_125_%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/","title":"125. \u9a8c\u8bc1\u56de\u6587\u4e32","text":""},{"location":"lc/top-interview-150/25_125_%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/#_1","title":"\u9898\u76ee","text":"<p>\u5982\u679c\u5728\u5c06\u6240\u6709\u5927\u5199\u5b57\u7b26\u8f6c\u6362\u4e3a\u5c0f\u5199\u5b57\u7b26\u3001\u5e76\u79fb\u9664\u6240\u6709\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u4e4b\u540e\uff0c\u77ed\u8bed\u6b63\u7740\u8bfb\u548c\u53cd\u7740\u8bfb\u90fd\u4e00\u6837\u3002\u5219\u53ef\u4ee5\u8ba4\u4e3a\u8be5\u77ed\u8bed\u662f\u4e00\u4e2a \u56de\u6587\u4e32 \u3002</p> <p>\u5b57\u6bcd\u548c\u6570\u5b57\u90fd\u5c5e\u4e8e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code>\uff0c\u5982\u679c\u5b83\u662f \u56de\u6587\u4e32 \uff0c\u8fd4\u56de <code>true</code> \uff1b\u5426\u5219\uff0c\u8fd4\u56de <code>false</code> \u3002</p>"},{"location":"lc/top-interview-150/25_125_%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/#_2","title":"\u89e3\u9898\u601d\u8def","text":"<p>\u53cc\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u5411\u5934\uff0c\u4e00\u4e2a\u6307\u5411\u5c3e\uff0c\u5206\u522b\u5411\u4e2d\u95f4\u79fb\u52a8\uff0c\u9047\u5230\u975e\u5b57\u6bcd\u6570\u5b57\u5b57\u7b26\u5c31\u8df3\u8fc7\uff0c\u76f4\u5230\u76f8\u9047\u3002</p>"},{"location":"lc/top-interview-150/25_125_%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func isPalindrome(s string) bool {\n    s = strings.ToLower(s)\n    left, right := 0, len(s)-1\n    for left &lt; right {\n        for left &lt; right &amp;&amp; !isalnum(s[left]) {\n            left++\n        }\n        for left &lt; right &amp;&amp; !isalnum(s[right]) {\n            right--\n        }\n        if s[left] != s[right] {\n            return false\n        }\n        left++\n        right--\n    }\n    return true\n}\n\nfunc isalnum(ch byte) bool {\n    return (ch &gt;= 'A' &amp;&amp; ch &lt;= 'Z') || (ch &gt;= 'a' &amp;&amp; ch &lt;= 'z') || (ch &gt;= '0' &amp;&amp; ch &lt;= '9')\n}\n</code></pre>"},{"location":"lc/top-interview-150/26_392_%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/","title":"392. \u5224\u65ad\u5b50\u5e8f\u5217","text":""},{"location":"lc/top-interview-150/26_392_%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u5b57\u7b26\u4e32 <code>s</code> \u548c <code>t</code> \uff0c\u5224\u65ad <code>s</code> \u662f\u5426\u4e3a <code>t</code> \u7684\u5b50\u5e8f\u5217\u3002</p> <p>\u5b57\u7b26\u4e32\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u662f\u539f\u59cb\u5b57\u7b26\u4e32\u5220\u9664\u4e00\u4e9b\uff08\u4e5f\u53ef\u4ee5\u4e0d\u5220\u9664\uff09\u5b57\u7b26\u800c\u4e0d\u6539\u53d8\u5269\u4f59\u5b57\u7b26\u76f8\u5bf9\u4f4d\u7f6e\u5f62\u6210\u7684\u65b0\u5b57\u7b26\u4e32\u3002\uff08\u4f8b\u5982\uff0c<code>\"ace\"</code>\u662f<code>\"abcde\"</code>\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\uff0c\u800c<code>\"aec\"</code>\u4e0d\u662f\uff09\u3002</p>"},{"location":"lc/top-interview-150/26_392_%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/#_2","title":"\u89e3\u9898\u601d\u8def","text":""},{"location":"lc/top-interview-150/26_392_%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/#_3","title":"\u65b9\u6cd5\u4e00:\u53cc\u6307\u9488","text":"<p>\u4e00\u4e2a\u6307\u5411 <code>s</code>\uff0c\u4e00\u4e2a\u6307\u5411 <code>t</code>\uff0c\u5206\u522b\u5411\u540e\u9762\u79fb\u52a8\uff0c\u9047\u5230\u76f8\u540c\u7684\u5b57\u7b26\u5c31\u79fb\u52a8\u6307\u9488\uff0c\u76f4\u5230 <code>s</code> \u904d\u5386\u5b8c\u3002</p>"},{"location":"lc/top-interview-150/26_392_%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func isSubsequence(s string, t string) bool {\n    i, j := 0, 0\n    for i &lt; len(s) &amp;&amp; j &lt; len(t) {\n        if s[i] == t[j] {\n            i++\n        }\n        j++\n    }\n    return i == len(s)\n}\n</code></pre>"},{"location":"lc/top-interview-150/26_392_%E5%88%A4%E6%96%AD%E5%AD%90%E5%BA%8F%E5%88%97/#kmp","title":"\u65b9\u6cd5\u4e8c:\u7c7bKMP","text":"<p>\u4e0a\u8ff0\u5728\u4e24\u4e2a\u6307\u9488(i,j)\u5931\u914d\u7684\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u7d27\u63a5\u7740\u7684\u76ee\u7684\u662f\u627e\u5230\u4e0b\u4e00\u4e2a<code>s[i]</code>\u5728<code>t</code>\u4e2d\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u8fd9\u4e2a\u4fe1\u606f\u5b8c\u5168\u53ef\u4ee5\u7531<code>t</code>\u63d0\u4f9b\uff0c\u6211\u4eec\u53ef\u4ee5\u9884\u5904\u7406 <code>t</code>\uff0c\u5f97\u5230\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4 <code>next</code>\uff0c<code>next[i][j]</code> \u8868\u793a\u5b57\u7b26 <code>i</code> \u5728 <code>t[j:]</code> \u4e2d\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002</p> Go <pre><code>func isSubsequence(s string, t string) bool {\n    var i, j = 0, 0\n\n    next := build(t)\n    fmt.Println(next)\n    for i &lt; len(s) &amp;&amp; j &lt; len(t) {\n        if s[i] == t[j] {\n            i++\n            j++\n        } else {\n            j = next[s[i]-'a'][j]\n            if j &gt;= len(t) {\n                return false\n            }\n        }\n\n    }\n    return i == len(s)\n}\n\nfunc build(t string) [26][]int {\n    ans := [26][]int{}\n    for i := 0; i &lt; 26; i++ {\n        ans[i] = make([]int, len(t))\n        ans[i][len(t)-1] = len(t)\n    }\n\n    tmp := make(map[byte]int)\n    for i := 0; i &lt; 26; i++ {\n        tmp[byte(i)+'a'] = len(t)\n    }\n\n    for i := len(t) - 1; i &gt;= 0; i-- {\n        for j := 0; j &lt; 26; j++ {\n            ans[j][i] = tmp[byte(j)+'a']\n\n            if t[i] == 'a'+byte(j) {\n                tmp[byte(j)+'a'] = i\n            }\n        }\n    }\n\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/27_167_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/","title":"27. \u4e24\u6570\u4e4b\u548c II - \u8f93\u5165\u6709\u5e8f\u6570\u7ec4","text":""},{"location":"lc/top-interview-150/27_167_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5df2\u6309\u7167 \u975e\u9012\u51cf\u987a\u5e8f\u6392\u5217 \u7684\u6574\u6570\u6570\u7ec4 <code>numbers</code> \uff0c\u8bf7\u4f60\u4ece\u6570\u7ec4\u4e2d\u627e\u51fa\u4e24\u4e2a\u6570\u6ee1\u8db3\u76f8\u52a0\u4e4b\u548c\u7b49\u4e8e\u76ee\u6807\u6570 <code>target</code> \u3002</p> <p>\u51fd\u6570\u5e94\u8be5\u4ee5\u957f\u5ea6\u4e3a <code>2</code> \u7684\u6574\u6570\u6570\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u8fd9\u4e24\u4e2a\u6570\u7684\u4e0b\u6807\u503c\u3002<code>numbers</code> \u7684\u4e0b\u6807 \u4ece 1 \u5f00\u59cb\u8ba1\u6570 \uff0c\u6240\u4ee5\u7b54\u6848\u6570\u7ec4\u5e94\u5f53\u6ee1\u8db3 <code>1 &lt;= answer[0] &lt; answer[1] &lt;= numbers.length</code> \u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6bcf\u4e2a\u8f93\u5165 \u53ea\u5bf9\u5e94\u552f\u4e00\u7684\u7b54\u6848 \uff0c\u800c\u4e14\u4f60 \u4e0d\u53ef\u4ee5 \u91cd\u590d\u4f7f\u7528\u76f8\u540c\u7684\u5143\u7d20\u3002</p>"},{"location":"lc/top-interview-150/27_167_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/27_167_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8CII-%E8%BE%93%E5%85%A5%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func twoSum(numbers []int, target int) []int {\n    left, right := 0, len(numbers)-1\n\n    for left &lt; right {\n        if numbers[left]+numbers[right] &gt; target {\n            right--\n        } else if numbers[left]+numbers[right] &lt; target {\n            left++\n        } else {\n            return []int{left + 1, right + 1}\n        }\n    }\n\n    return []int{}\n}\n</code></pre>"},{"location":"lc/top-interview-150/28_11_%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/","title":"11. \u76db\u6700\u591a\u6c34\u7684\u5bb9\u5668","text":""},{"location":"lc/top-interview-150/28_11_%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u957f\u5ea6\u4e3a n \u7684\u6574\u6570\u6570\u7ec4 height \u3002\u6709 n \u6761\u5782\u7ebf\uff0c\u7b2c i \u6761\u7ebf\u7684\u4e24\u4e2a\u7aef\u70b9\u662f (i, 0) \u548c (i, height[i]) \u3002</p> <p>\u627e\u51fa\u5176\u4e2d\u7684\u4e24\u6761\u7ebf\uff0c\u4f7f\u5f97\u5b83\u4eec\u4e0e x \u8f74\u5171\u540c\u6784\u6210\u7684\u5bb9\u5668\u53ef\u4ee5\u5bb9\u7eb3\u6700\u591a\u7684\u6c34\u3002</p> <p>\u8fd4\u56de\u5bb9\u5668\u53ef\u4ee5\u50a8\u5b58\u7684\u6700\u5927\u6c34\u91cf\u3002</p> <p>\u8bf4\u660e\uff1a\u4f60\u4e0d\u80fd\u503e\u659c\u5bb9\u5668\u3002</p> <p>\u793a\u4f8b\uff1a </p> <p>\u8f93\u5165\uff1a[1,8,6,2,5,4,8,3,7] \u8f93\u51fa\uff1a49  \u89e3\u91ca\uff1a\u56fe\u4e2d\u5782\u76f4\u7ebf\u4ee3\u8868\u8f93\u5165\u6570\u7ec4 [1,8,6,2,5,4,8,3,7]\u3002\u5728\u6b64\u60c5\u51b5\u4e0b\uff0c\u5bb9\u5668\u80fd\u591f\u5bb9\u7eb3\u6c34\uff08\u8868\u793a\u4e3a\u84dd\u8272\u90e8\u5206\uff09\u7684\u6700\u5927\u503c\u4e3a 49\u3002</p>"},{"location":"lc/top-interview-150/28_11_%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/28_11_%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/#_3","title":"\u53cc\u6307\u9488","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u53cc\u6307\u9488\uff0c\u4e00\u4e2a\u6307\u9488\u6307\u5411\u6570\u7ec4\u7684\u5934\u90e8\uff0c\u4e00\u4e2a\u6307\u9488\u6307\u5411\u6570\u7ec4\u7684\u5c3e\u90e8\uff0c\u8ba1\u7b97\u4e24\u6307\u9488\u4e4b\u95f4\u7684\u76db\u6c34\u91cf\u3002\u7531\u4e8e\u76db\u6c34\u91cf\u53d6\u51b3\u4e8e\u77ed\u677f\uff0c\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u90fd\u79fb\u52a8\u76f8\u5bf9\u8f83\u77ed\u7684\u6307\u9488\uff08\u5bf9\u4e8e\u77ed\u6307\u9488\u5bf9\u5e94\u7684\u76db\u6c34\u91cf\u800c\u8a00\uff0c\u540e\u7eed\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u5bbd\u5ea6\u53d8\u5c0f\uff0c\u9ad8\u5ea6\u6700\u591a\u4e3a\u77ed\u6307\u9488\uff0c\u56e0\u6b64\u77ed\u6307\u9488\u5bf9\u5e94\u7684\u6700\u5927\u76db\u6c34\u91cf\u4e0d\u53ef\u80fd\u51fa\u73b0\u5728\u540e\u7eed\u7684\u904d\u5386\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u5b89\u5168\u8df3\u8fc7\uff09\uff0c\u76f4\u5230\u4e24\u4e2a\u6307\u9488\u76f8\u9047\u3002</p> <p>\u8bb0\u5f55\u5e76\u66f4\u65b0\u79fb\u52a8\u8fc7\u7a0b\u4e2d\u7684\u9762\u79ef\u6700\u5927\u503c\u3002</p>"},{"location":"lc/top-interview-150/28_11_%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func maxArea(height []int) int {\n    var i,j = 0,len(height)-1\n    var ans = 0\n\n    for i &lt; j {\n        tmp := (j-i) * min(height[i],height[j])\n        ans = max(ans,tmp)\n\n        if height[i] &lt; height[j] {\n            i++\n        } else {\n            j--\n        }\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/29_15_%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/","title":"15. \u4e09\u6570\u4e4b\u548c","text":""},{"location":"lc/top-interview-150/29_15_%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u5224\u65ad\u662f\u5426\u5b58\u5728\u4e09\u5143\u7ec4 <code>[nums[i], nums[j], nums[k]]</code> \u6ee1\u8db3 <code>i != j</code>\u3001<code>i != k</code> \u4e14 <code>j != k</code> \uff0c\u540c\u65f6\u8fd8\u6ee1\u8db3 <code>nums[i] + nums[j] + nums[k] == 0</code> \u3002\u8bf7</p> <p>\u4f60\u8fd4\u56de\u6240\u6709\u548c\u4e3a <code>0</code> \u4e14\u4e0d\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002</p> <p>\u6ce8\u610f\uff1a\u7b54\u6848\u4e2d\u4e0d\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u7684\u4e09\u5143\u7ec4\u3002</p>"},{"location":"lc/top-interview-150/29_15_%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/29_15_%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/#_3","title":"\u6392\u5e8f + \u53cc\u6307\u9488","text":"<p>\u501f\u52a9\u6392\u5e8f\uff0c\u5c06\u4e3a\u9898\u8f6c\u5316\u4e3a\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u4e24\u6570\u4e4b\u548c\u95ee\u9898\uff0c\u9700\u8981\u6ce8\u610f\u53bb\u91cd\u7684\u95ee\u9898\u3002</p>"},{"location":"lc/top-interview-150/29_15_%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func threeSum(nums []int) [][]int {\n    sort.Ints(nums)\n    fmt.Println(nums)\n    ans := make([][]int, 0)\n    for idx, val := range nums {\n        if idx &gt; 0 &amp;&amp; nums[idx] == nums[idx-1] {\n            continue\n        }\n        target := 0 - val\n\n        skip := func(idx int, direction int) int {\n            cur := nums[idx]\n            if direction &gt; 0 {\n                for idx &lt; len(nums)-1 &amp;&amp; nums[idx] == cur {\n                    idx++\n                }\n            } else {\n                for idx &gt; 0 &amp;&amp; nums[idx] == cur {\n                    idx--\n                }\n            }\n            return idx\n        }\n\n        for left, right := idx+1, len(nums)-1; left &lt; right; {\n            if nums[left]+nums[right] == target {\n                ans = append(ans, []int{val, nums[left], nums[right]})\n                left = skip(left, 1)\n                right = skip(right, -1)\n            } else if nums[left]+nums[right] &gt; target {\n                right = skip(right, -1)\n            } else {\n                left = skip(left, 1)\n            }\n        }\n    }\n\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/2_27_%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/","title":"27. \u79fb\u9664\u5143\u7d20","text":""},{"location":"lc/top-interview-150/2_27_%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 <code>nums</code> \u548c\u4e00\u4e2a\u503c <code>val</code>\uff0c\u4f60\u9700\u8981 \u539f\u5730 \u79fb\u9664\u6240\u6709\u6570\u503c\u7b49\u4e8e <code>val</code> \u7684\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u79fb\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u4ec5\u4f7f\u7528 <code>O(1)</code> \u989d\u5916\u7a7a\u95f4\u5e76 \u539f\u5730\u4fee\u6539\u8f93\u5165\u6570\u7ec4\u3002</p> <p>\u5143\u7d20\u7684\u987a\u5e8f\u53ef\u4ee5\u6539\u53d8\u3002\u4f60\u4e0d\u9700\u8981\u8003\u8651\u6570\u7ec4\u4e2d\u8d85\u51fa\u65b0\u957f\u5ea6\u540e\u9762\u7684\u5143\u7d20\u3002</p>"},{"location":"lc/top-interview-150/2_27_%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u53cc\u6307\u9488\u5b9e\u73b0\u539f\u5730\u79fb\u9664\u3002</p> <p>\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488 <code>fast</code> \u548c <code>slow</code>\uff0c\u5176\u4e2d <code>fast</code> \u8868\u793a\u5feb\u6307\u9488\uff0c<code>slow</code> \u8868\u793a\u6162\u6307\u9488\u3002</p> <p>\u904d\u5386\u6570\u7ec4 <code>nums</code>\uff0c\u6bcf\u6b21\u53d6\u51fa\u5143\u7d20 <code>num</code>\uff1a</p> <ul> <li>\u5982\u679c <code>num</code> \u4e0d\u7b49\u4e8e <code>val</code>\uff0c\u5219\u5c06 <code>num</code> \u8d4b\u503c\u7ed9 <code>nums[slow]</code>\uff0c\u5e76\u5c06 <code>slow</code> \u540e\u79fb\u4e00\u4f4d\u3002</li> <li>\u5982\u679c <code>num</code> \u7b49\u4e8e <code>val</code>\uff0c\u5219\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u3002</li> </ul> <p>\u904d\u5386\u7ed3\u675f\u540e\uff0c<code>slow</code> \u7684\u503c\u5373\u4e3a\u65b0\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p>"},{"location":"lc/top-interview-150/2_27_%E7%A7%BB%E9%99%A4%E5%85%83%E7%B4%A0/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func removeElement(nums []int, val int) int {\n    slow := 0\n    for fast := 0; fast &lt; len(nums); fast++ {\n        if nums[fast] != val {\n            nums[slow] = nums[fast]\n            slow++\n        }\n    }\n    return slow\n}\n</code></pre>"},{"location":"lc/top-interview-150/30_209_%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/","title":"209. \u957f\u5ea6\u6700\u5c0f\u7684\u5b50\u6570\u7ec4","text":""},{"location":"lc/top-interview-150/30_209_%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u542b\u6709 <code>n</code> \u4e2a\u6b63\u6574\u6570\u7684\u6570\u7ec4\u548c\u4e00\u4e2a\u6b63\u6574\u6570 <code>target</code> \u3002</p> <p>\u627e\u51fa\u8be5\u6570\u7ec4\u4e2d\u6ee1\u8db3\u5176\u548c <code>\u2265 target</code> \u7684\u957f\u5ea6\u6700\u5c0f\u7684 \u8fde\u7eed\u5b50\u6570\u7ec4 <code>[numsl, numsl+1, ..., numsr-1, numsr]</code> \uff0c\u5e76\u8fd4\u56de\u5176\u957f\u5ea6**\u3002**\u5982\u679c\u4e0d\u5b58\u5728\u7b26\u5408\u6761\u4ef6\u7684\u5b50\u6570\u7ec4\uff0c\u8fd4\u56de <code>0</code> \u3002</p>"},{"location":"lc/top-interview-150/30_209_%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/#_2","title":"\u89e3\u9898\u601d\u8def","text":""},{"location":"lc/top-interview-150/30_209_%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/#_3","title":"\u6ed1\u52a8\u7a97\u53e3","text":"<p>\u5178\u578b\u7684\u6ed1\u52a8\u7a97\u53e3\u95ee\u9898\uff0c\u57fa\u672c\u6d41\u7a0b\u4e3a\uff1a</p> <ul> <li>\u79fb\u52a8\u7a97\u53e3\u53f3\u8fb9\u754c\uff0c\u4f7f\u7a97\u53e3\u5185\u5143\u7d20\u8fbe\u5230\u76ee\u6807\u8981\u6c42</li> <li>\u5c1d\u8bd5\u79fb\u52a8\u7a97\u53e3\u5de6\u8fb9\u754c\uff0c\u7f29\u5c0f\u7a97\u53e3\u8303\u56f4\uff0c\u76f4\u5230\u7a97\u53e3\u5185\u5143\u7d20\u4e0d\u518d\u7b26\u5408\u8981\u6c42</li> <li>\u91cd\u590d\u4e0a\u8ff0\u6b65\u9aa4\uff0c\u76f4\u5230\u7a97\u53e3\u53f3\u8fb9\u754c\u5230\u8fbe\u6570\u7ec4\u672b\u5c3e</li> </ul>"},{"location":"lc/top-interview-150/30_209_%E9%95%BF%E5%BA%A6%E6%9C%80%E5%B0%8F%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func minSubArrayLen(target int, nums []int) int {\n    ans := len(nums) + 1\n\n    sum := 0\n    left, right := 0, 0\n    for right &lt; len(nums) {\n        sum += nums[right]\n        for sum &gt;= target {\n            ans = min(ans, right-left+1)\n            sum -= nums[left]\n            left++\n        }\n\n        right++\n    }\n\n    if ans == len(nums)+1 {\n        return 0\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/31_3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/","title":"3. \u65e0\u91cd\u590d\u5b57\u7b26\u7684\u6700\u957f\u5b50\u4e32","text":""},{"location":"lc/top-interview-150/31_3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \uff0c\u8bf7\u4f60\u627e\u51fa\u5176\u4e2d\u4e0d\u542b\u6709\u91cd\u590d\u5b57\u7b26\u7684 \u6700\u957f\u5b50\u4e32 \u7684\u957f\u5ea6\u3002</p>"},{"location":"lc/top-interview-150/31_3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/#_2","title":"\u9898\u89e3","text":"<p>\u5178\u578b\u6ed1\u52a8\u7a97\u53e3\u9898\u76ee\uff0c\u89e3\u9898\u601d\u8def\uff1a</p> <ul> <li>\u786e\u5b9a\u7a97\u53e3\u5185\u76ee\u6807\uff1a\u65e0\u91cd\u590d\u5b57\u7b26\uff0c\u53ef\u4ee5\u7528<code>set</code>\u8bb0\u5f55\u7a97\u53e3\u5185\u5b57\u7b26\u51b2\u7a81\u60c5\u51b5</li> <li>\u7f29\u5c0f\u7a97\u53e3\u6761\u4ef6\uff1a<code>set</code>\u5185\u6709\u8be5\u5b57\u7b26</li> </ul>"},{"location":"lc/top-interview-150/31_3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func lengthOfLongestSubstring(s string) int {\n    left, right := 0, 0\n    w := map[byte]struct{}{}\n    m := 0\n\n    for right &lt; len(s) {\n        for {\n            if _, ok := w[s[right]]; !ok {\n                break\n            }\n            delete(w, s[left])\n            left++\n        }\n        w[s[right]] = struct{}{}\n        m = max(m, right-left+1)\n        right++\n    }\n    return m\n}\n</code></pre>"},{"location":"lc/top-interview-150/32_30_%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2/","title":"32. \u4e32\u8054\u6240\u6709\u5355\u8bcd\u7684\u5b50\u4e32","text":""},{"location":"lc/top-interview-150/32_30_%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4 <code>words</code>\u3002 <code>words</code> \u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u957f\u5ea6\u76f8\u540c\u3002</p> <p><code>s</code> \u4e2d\u7684 \u4e32\u8054\u5b50\u4e32 \u662f\u6307\u4e00\u4e2a\u5305\u542b <code>words</code> \u4e2d\u6240\u6709\u5b57\u7b26\u4e32\u4ee5\u4efb\u610f\u987a\u5e8f\u6392\u5217\u8fde\u63a5\u8d77\u6765\u7684\u5b50\u4e32\u3002</p> <p>\u4f8b\u5982\uff0c\u5982\u679c <code>words = [\"ab\",\"cd\",\"ef\"]</code>\uff0c \u90a3\u4e48 <code>\"abcdef\"</code>\uff0c <code>\"abefcd\"</code>\uff0c<code>\"cdabef\"</code>\uff0c <code>\"cdefab\"</code>\uff0c<code>\"efabcd\"</code>\uff0c \u548c <code>\"efcdab\"</code> \u90fd\u662f\u4e32\u8054\u5b50\u4e32\u3002 <code>\"acdbef\"</code> \u4e0d\u662f\u4e32\u8054\u5b50\u4e32\uff0c\u56e0\u4e3a\u4ed6\u4e0d\u662f\u4efb\u4f55 <code>words</code> \u6392\u5217\u7684\u8fde\u63a5\u3002</p> <p>\u8fd4\u56de\u6240\u6709\u4e32\u8054\u5b50\u4e32\u5728 <code>s</code> \u4e2d\u7684\u5f00\u59cb\u7d22\u5f15\u3002\u4f60\u53ef\u4ee5\u4ee5 \u4efb\u610f\u987a\u5e8f \u8fd4\u56de\u7b54\u6848\u3002</p>"},{"location":"lc/top-interview-150/32_30_%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/32_30_%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2/#_3","title":"\u6ed1\u52a8\u7a97\u53e3","text":"<p>\u786e\u5b9a\u6ed1\u52a8\u7a97\u53e3\u7684\u51e0\u4e2a\u8981\u7d20\uff1a</p> <ul> <li>\u7a97\u53e3\u5185\u76ee\u6807\uff1a\u5355\u8bcd\u6570\u4e3a<code>len(words)</code>\uff0c\u4e14\u6bcf\u4e2a\u5355\u8bcd\u6570\u4e0e<code>words</code>\u4e2d\u4e00\u81f4</li> <li>\u7a97\u53e3\u6536\u7f29\u6761\u4ef6\uff1a\u7a97\u53e3\u5185\u5355\u8bcd\u6570\u5927\u4e8e<code>len(words)</code></li> </ul> <p>\u5c1d\u8bd5\u6269\u5927\u7a97\u53e3\uff0c\u6269\u5927\u6b65\u957f\u4e3a\u5355\u8bcd\u957f\u5ea6\uff0c\u8bb0\u5f55\u7a97\u53e3\u5185\u5355\u8bcd\u51fa\u73b0\u6b21\u6570\uff0c\u79fb\u52a8\u5de6\u8fb9\u754c\u4fdd\u6301\u7a97\u53e3\u5927\u5c0f\u56fa\u5b9a\uff0c\u5f53\u7a97\u53e3\u5185\u5355\u8bcd\u6570\u7b49\u4e8e<code>len(words)</code>\u65f6\uff0c\u5224\u65ad\u7a97\u53e3\u5185\u5355\u8bcd\u662f\u5426\u4e0e<code>words</code>\u4e00\u81f4\uff0c\u4e00\u81f4\u5219\u8bb0\u5f55\u5de6\u8fb9\u754c\u3002</p> <p>\u4e00\u4e2a\u5173\u952e\u70b9\u5728\u4e8e\u7a97\u53e3\u7684\u8d77\u70b9\uff0c\u6211\u4eec\u5fc5\u987b\u5c1d\u8bd5\u4ece<code>[0,len(words[0])-1]</code>\u5206\u522b\u5f00\u59cb\u8fdb\u884c\u6ed1\u52a8\u7a97\u53e3\u7684\u8ba1\u7b97\uff0c\u624d\u80fd\u4fdd\u8bc1\u4e0d\u9057\u6f0f\u3002</p>"},{"location":"lc/top-interview-150/32_30_%E4%B8%B2%E8%81%94%E6%89%80%E6%9C%89%E5%8D%95%E8%AF%8D%E7%9A%84%E5%AD%90%E4%B8%B2/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func findSubstring(s string, words []string) []int {\n    ans := make([]int, 0)\n    wordLen := len(words[0])\n    wordNum := len(words)\n\n    for i := 0; i &lt; wordLen; i++ { // \u8d77\u70b9\n        win := make(map[string]int)\n        for _, word := range words {\n            win[word]++\n        }\n\n        left, right := i, i\n        valid := 0\n        for right+wordLen &lt;= len(s) { \n            next := s[right : right+wordLen] // \u4e0b\u4e00\u4e2aword\n            if _, ok := win[next]; ok {\n                win[next]--\n                if win[next] == 0 {\n                    valid++\n                }\n            }\n            for (right-left)/wordLen+1 &gt; wordNum {\n                if _, ok := win[s[left:left+wordLen]]; ok {\n                    if win[s[left:left+wordLen]] == 0 {\n                        valid--\n                    }\n                    win[s[left:left+wordLen]]++\n                }\n                left += wordLen\n            }\n            fmt.Println(left, right, valid)\n            if valid == len(win) {\n                ans = append(ans, left)\n            }\n\n            right += wordLen // \u79fb\u52a8\u6b65\u957f\n        }\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/33_76_%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/","title":"76. \u6700\u5c0f\u8986\u76d6\u5b50\u4e32","text":""},{"location":"lc/top-interview-150/33_76_%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \u3001\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>t</code> \u3002\u8fd4\u56de <code>s</code> \u4e2d\u6db5\u76d6 <code>t</code> \u6240\u6709\u5b57\u7b26\u7684\u6700\u5c0f\u5b50\u4e32\u3002\u5982\u679c <code>s</code> \u4e2d\u4e0d\u5b58\u5728\u6db5\u76d6 <code>t</code> \u6240\u6709\u5b57\u7b26\u7684\u5b50\u4e32\uff0c\u5219\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32 <code>\"\"</code> \u3002</p> <p>\u6ce8\u610f\uff1a</p> <ul> <li>\u5bf9\u4e8e <code>t</code> \u4e2d\u91cd\u590d\u5b57\u7b26\uff0c\u6211\u4eec\u5bfb\u627e\u7684\u5b50\u5b57\u7b26\u4e32\u4e2d\u8be5\u5b57\u7b26\u6570\u91cf\u5fc5\u987b\u4e0d\u5c11\u4e8e <code>t</code> \u4e2d\u8be5\u5b57\u7b26\u6570\u91cf\u3002</li> <li>\u5982\u679c <code>s</code> \u4e2d\u5b58\u5728\u8fd9\u6837\u7684\u5b50\u4e32\uff0c\u6211\u4eec\u4fdd\u8bc1\u5b83\u662f\u552f\u4e00\u7684\u7b54\u6848\u3002</li> </ul>"},{"location":"lc/top-interview-150/33_76_%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/33_76_%E6%9C%80%E5%B0%8F%E8%A6%86%E7%9B%96%E5%AD%90%E4%B8%B2/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func minWindow(s string, t string) string {\n    win := make(map[byte]int)\n    for i := 0; i &lt; len(t); i++ {\n        win[t[i]]++\n    }\n\n    left, right := 0, 0\n    valid := 0\n    start := 0\n    width := len(s) + 1\n\n    for right &lt; len(s) {\n        next := s[right]\n        if _, ok := win[next]; ok {\n            win[next]--\n            if win[next] == 0 {\n                valid++\n            }\n        }\n        for valid == len(win) {\n            if right-left+1 &lt; width {\n                start = left\n                width = right - left + 1\n            }\n\n            if _, ok := win[s[left]]; ok {\n                if win[s[left]] == 0 {\n                    valid--\n                }\n                win[s[left]]++\n            }\n            left++\n        }\n        right++\n    }\n\n    if width == len(s)+1 {\n        return \"\"\n    }\n    return s[start : start+width]\n}\n</code></pre>"},{"location":"lc/top-interview-150/34_36_%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/","title":"36. \u6709\u6548\u7684\u6570\u72ec","text":""},{"location":"lc/top-interview-150/34_36_%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/#_1","title":"\u9898\u76ee","text":"<p>\u8bf7\u4f60\u5224\u65ad\u4e00\u4e2a <code>9 x 9</code> \u7684\u6570\u72ec\u662f\u5426\u6709\u6548\u3002\u53ea\u9700\u8981 <code>\u6839\u636e\u4ee5\u4e0b\u89c4\u5219</code> \uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002</p> <ul> <li>\u6570\u5b57 <code>1-9</code> \u5728\u6bcf\u4e00\u884c\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> <li>\u6570\u5b57 <code>1-9</code> \u5728\u6bcf\u4e00\u5217\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002</li> <li>\u6570\u5b57 <code>1-9</code> \u5728\u6bcf\u4e00\u4e2a\u4ee5\u7c97\u5b9e\u7ebf\u5206\u9694\u7684 <code>3x3</code> \u5bab\u5185\u53ea\u80fd\u51fa\u73b0\u4e00\u6b21\u3002\uff08\u8bf7\u53c2\u8003\u793a\u4f8b\u56fe\uff09</li> </ul> <p>\u6ce8\u610f\uff1a</p> <ul> <li>\u4e00\u4e2a\u6709\u6548\u7684\u6570\u72ec\uff08\u90e8\u5206\u5df2\u88ab\u586b\u5145\uff09\u4e0d\u4e00\u5b9a\u662f\u53ef\u89e3\u7684\u3002</li> <li>\u53ea\u9700\u8981\u6839\u636e\u4ee5\u4e0a\u89c4\u5219\uff0c\u9a8c\u8bc1\u5df2\u7ecf\u586b\u5165\u7684\u6570\u5b57\u662f\u5426\u6709\u6548\u5373\u53ef\u3002</li> <li>\u7a7a\u767d\u683c\u7528 <code>'.'</code> \u8868\u793a\u3002</li> </ul>"},{"location":"lc/top-interview-150/34_36_%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/#_2","title":"\u9898\u89e3","text":"<p>\u7528\u4e09\u4e2aset\u6765\u4fdd\u5b58\u6bcf\u4e00\u884c\u3001\u6bcf\u4e00\u5217\u4ee5\u53ca\u6bcf\u4e00\u4e2a\u4e5d\u5bab\u683c\u5185\u7684\u6570\u5b57\u51fa\u73b0\u60c5\u51b5\uff0c\u5982\u679c\u51fa\u73b0\u51b2\u7a81\u5219\u8bc1\u660e\u4e0d\u662f\u6709\u6548\u6570\u72ec\u3002\u5bf9\u4e8e\u7b2c[i][j]\u4e2a\u5b57\u7b26\u800c\u8a00\uff0c\u5176\u6240\u5c5e\u7684\u4e5d\u5bab\u683c\u5e8f\u53f7\u4e3a\uff1a</p> <pre><code>i/3 * 3 + j/3\n</code></pre>"},{"location":"lc/top-interview-150/34_36_%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func isValidSudoku(board [][]byte) bool {\n    row := [9][9]int{}\n    col := [9][9]int{}\n    grid := [9][9]int{}\n\n    for i := 0; i &lt; 9 ; i++ {\n        for j:=0;j&lt;9;j++ {\n            if board[i][j] == '.' {\n                continue\n            }\n            n := board[i][j] - '0'\n            if row[i][n-1] != 0 {\n                return false\n            }\n            if col[j][n-1] != 0 {\n                return false\n            }\n            if grid[i/3*3+j/3][n-1] != 0 {\n                return false\n            }\n            row[i][n-1] = 1\n            col[j][n-1] = 1\n            grid[i/3*3+j/3][n-1] = 1\n        }\n    }\n    return true\n}\n</code></pre>"},{"location":"lc/top-interview-150/35_54_%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/","title":"54. \u87ba\u65cb\u77e9\u9635","text":""},{"location":"lc/top-interview-150/35_54_%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a <code>m</code> \u884c <code>n</code> \u5217\u7684\u77e9\u9635 <code>matrix</code> \uff0c\u8bf7\u6309\u7167 \u987a\u65f6\u9488\u87ba\u65cb\u987a\u5e8f \uff0c\u8fd4\u56de\u77e9\u9635\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002</p> <p>\u793a\u4f8b1</p> <p></p> <p>\u8f93\u5165\uff1amatrix = [[1,2,3],[4,5,6],[7,8,9]] \u8f93\u51fa\uff1a[1,2,3,6,9,8,7,4,5]</p> <p>\u793a\u4f8b2</p> <p></p> <p>\u8f93\u5165\uff1amatrix = [[1,2,3,4],[5,6,7,8],[9,10,11,12]] \u8f93\u51fa\uff1a[1,2,3,4,8,12,11,10,9,5,6,7]</p>"},{"location":"lc/top-interview-150/35_54_%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/#_2","title":"\u9898\u89e3","text":"<p>\u5bf9\u8def\u5f84\u8fdb\u884c\u6a21\u62df\uff0c\u4e24\u79cd\u6a21\u62df\u65b9\u6cd5\uff1a</p> <ul> <li>\u6a21\u62df\u6ee1\u8db3\u6761\u4ef6\u8c03\u8f6c\u65b9\u5411</li> <li>\u5206\u5c42\u8fdb\u884c\u6a21\u62df </li> </ul>"},{"location":"lc/top-interview-150/35_54_%E8%9E%BA%E6%97%8B%E7%9F%A9%E9%98%B5/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func spiralOrder(matrix [][]int) []int {\n    var m, n = len(matrix), len(matrix[0])\n    var top, bottom, left, right = 0, m - 1, 0, n - 1\n    var ans = make([]int, 0, m*n)\n\n    for top &lt; bottom &amp;&amp; left &lt; right {\n        for i := left; i &lt; right; i++ {\n            ans = append(ans, matrix[top][i])\n        }\n        for i := top; i &lt; bottom; i++ {\n            ans = append(ans, matrix[i][right])\n        }\n        for i := right; i &gt; left; i-- {\n            ans = append(ans, matrix[bottom][i])\n        }\n        for i := bottom; i &gt; top; i-- {\n            ans = append(ans, matrix[i][left])\n        }\n        top++\n        left++\n        bottom--\n        right--\n    }\n\n    if top == bottom {\n        for i := left; i &lt;= right; i++ {\n            ans = append(ans, matrix[top][i])\n        }\n    } else if left == right {\n        for i := top; i &lt;= bottom; i++ {\n            ans = append(ans, matrix[i][left])\n        }\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/36_48_%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/","title":"48. \u65cb\u8f6c\u56fe\u50cf","text":""},{"location":"lc/top-interview-150/36_48_%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a  <code>n \u00d7 n</code> \u7684\u4e8c\u7ef4\u77e9\u9635  <code>matrix</code> \u8868\u793a\u4e00\u4e2a\u56fe\u50cf\u3002\u8bf7\u4f60\u5c06\u56fe\u50cf\u987a\u65f6\u9488\u65cb\u8f6c 90 \u5ea6\u3002</p> <p>\u4f60\u5fc5\u987b\u5728 \u539f\u5730 \u65cb\u8f6c\u56fe\u50cf\uff0c\u8fd9\u610f\u5473\u7740\u4f60\u9700\u8981\u76f4\u63a5\u4fee\u6539\u8f93\u5165\u7684\u4e8c\u7ef4\u77e9\u9635\u3002\u8bf7\u4e0d\u8981 \u4f7f\u7528\u53e6\u4e00\u4e2a\u77e9\u9635\u6765\u65cb\u8f6c\u56fe\u50cf\u3002</p> <p>\u793a\u4f8b1</p> <p></p> <p>\u8f93\u5165\uff1amatrix = [[1,2,3],[4,5,6],[7,8,9]] \u8f93\u51fa\uff1a[[7,4,1],[8,5,2],[9,6,3]]</p> <p>\u793a\u4f8b2</p> <p></p> <p>\u8f93\u5165\uff1amatrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]] \u8f93\u51fa\uff1a[[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]</p>"},{"location":"lc/top-interview-150/36_48_%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/#_2","title":"\u9898\u89e3","text":"<p>\u5047\u8bbe\u65cb\u8f6c\u524d\u7684\u4f4d\u7f6e\u4e3a<code>(i,j)</code>,\u5219\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u65cb\u8f6c\u540e\u7684\u4e3a\u4f4d\u7f6e\u4e3a\uff1a<code>(j,n-1-i)</code>\u3002\u8981\u5b9e\u73b0\u5982\u4e0a\u53d8\u6362\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u53d8\u6362\u62c6\u5206\u4e3a\uff1a</p> <ul> <li><code>(i,j)</code> -&gt; <code>(j,i)</code> =&gt; \u5bf9\u89d2\u7ffb\u8f6c</li> <li><code>(j,i)</code> -&gt; <code>(j, n-1-i)</code> =&gt; \u5de6\u53f3\u7ffb\u8f6c</li> </ul> <p>\u56e0\u6b64\uff0c\u4e00\u6b21\u65cb\u8f6c\u7b49\u4e8e\u5bf9\u89d2\u53cd\u8f6c\u52a0\u4e0a\u5de6\u53f3\u7ffb\u8f6c\uff0c\u901a\u8fc7\u8be5\u89c4\u5f8b\u5b9e\u73b0\u539f\u5730\u65cb\u8f6c\u3002</p>"},{"location":"lc/top-interview-150/36_48_%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func rotate(matrix [][]int) {\n    var m, n = len(matrix), len(matrix[0])\n    for i := 0; i &lt; m; i++ {\n        for j := 0; j &lt; i; j++ {\n            matrix[i][j], matrix[j][i] = matrix[j][i], matrix[i][j]\n        }\n    }\n\n    for i := 0; i &lt; m; i++ {\n        for j := 0; j &lt; n/2; j++ {\n            matrix[i][j], matrix[i][n-j-1] = matrix[i][n-j-1], matrix[i][j]\n        }\n    }\n}\n</code></pre>"},{"location":"lc/top-interview-150/37_73_%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6/","title":"73. \u77e9\u9635\u7f6e\u96f6","text":""},{"location":"lc/top-interview-150/37_73_%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a <code>m x n</code> \u7684\u77e9\u9635\uff0c\u5982\u679c\u4e00\u4e2a\u5143\u7d20\u4e3a <code>0</code> \uff0c\u5219\u5c06\u5176\u6240\u5728\u884c\u548c\u5217\u7684\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u4e3a <code>0</code> \u3002\u8bf7\u4f7f\u7528 \u539f\u5730 \u7b97\u6cd5\u3002</p> <p>\u793a\u4f8b1</p> <p></p> <p>\u8f93\u5165\uff1amatrix = [[1,1,1],[1,0,1],[1,1,1]] \u8f93\u51fa\uff1a[[1,0,1],[0,0,0],[1,0,1]]</p> <p>\u793a\u4f8b2</p> <p></p> <p>\u8f93\u5165\uff1amatrix = [[0,1,2,0],[3,4,5,2],[1,3,1,5]] \u8f93\u51fa\uff1a[[0,0,0,0],[0,4,5,0],[0,3,1,0]]</p>"},{"location":"lc/top-interview-150/37_73_%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6/#_2","title":"\u9898\u89e3","text":"<p>\u4e00\u4e2a\u76f4\u89c2\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u4e24\u4e2a\u6570\u7ec4\uff0c\u5206\u522b\u8bb0\u5f55\u6bcf\u884c\u3001\u6bcf\u5217\u662f\u5426\u67090\uff0c\u800c\u540e\u5c06\u67090\u7684\u884c\u5217\u5168\u90e8\u7f6e\u4e3a0\uff0c\u5982\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(m+n)</code>\u3002</p> <p>\u4f46\u6ce8\u610f\u5230\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8be5\u4fe1\u606f\u76f4\u63a5\u8bb0\u5f55\u5728\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u4e0a\uff0c\u4e3a\u907f\u514d\u635f\u5931\u9996\u884c\u9996\u5217\u7684\u539f\u59cb\u4fe1\u606f\uff0c\u989d\u5916\u4f7f\u7528\u4e24\u4e2a\u53d8\u91cf\u4fdd\u5b58\u9996\u884c\u9996\u5217\u51fa\u73b0\u76840\u3002\u5982\u6b64\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a<code>O(1)</code></p>"},{"location":"lc/top-interview-150/37_73_%E7%9F%A9%E9%98%B5%E7%BD%AE%E9%9B%B6/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func setZeroes(matrix [][]int) {\n    var r, c bool\n    var m, n = len(matrix), len(matrix[0])\n\n    for i := 0; i &lt; n; i++ {\n        if matrix[0][i] == 0 {\n            r = true\n        }\n    }\n\n    for i := 0; i &lt; m; i++ {\n        if matrix[i][0] == 0 {\n            c = true\n        }\n    }\n\n    for i := 1; i &lt; m; i++ {\n        for j := 1; j &lt; n; j++ {\n            if matrix[i][j] == 0 {\n                matrix[i][0] = 0\n                matrix[0][j] = 0\n            }\n        }\n    }\n\n    for i := 1; i &lt; n; i++ {\n        if matrix[0][i] == 0 {\n            for j := 0; j &lt; m; j++ {\n                matrix[j][i] = 0\n            }\n        }\n    }\n\n    for i := 1; i &lt; m; i++ {\n        if matrix[i][0] == 0 {\n            for j := 0; j &lt; n; j++ {\n                matrix[i][j] = 0\n            }\n        }\n    }\n\n    if r {\n        for i := 0; i &lt; n; i++ {\n            matrix[0][i] = 0\n        }\n    }\n    if c {\n        for i := 0; i &lt; m; i++ {\n            matrix[i][0] = 0\n        }\n    }\n\n}\n</code></pre>"},{"location":"lc/top-interview-150/38_289_%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/","title":"289. \u751f\u547d\u6e38\u620f","text":""},{"location":"lc/top-interview-150/38_289_%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/#_1","title":"\u9898\u76ee","text":"<p>\u6839\u636e \u767e\u5ea6\u767e\u79d1 \uff0c \u751f\u547d\u6e38\u620f \uff0c\u7b80\u79f0\u4e3a \u751f\u547d \uff0c\u662f\u82f1\u56fd\u6570\u5b66\u5bb6\u7ea6\u7ff0\u00b7\u4f55\u987f\u00b7\u5eb7\u5a01\u5728 1970 \u5e74\u53d1\u660e\u7684\u7ec6\u80de\u81ea\u52a8\u673a\u3002</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b <code>m \u00d7 n</code> \u4e2a\u683c\u5b50\u7684\u9762\u677f\uff0c\u6bcf\u4e00\u4e2a\u683c\u5b50\u90fd\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u7ec6\u80de\u3002\u6bcf\u4e2a\u7ec6\u80de\u90fd\u5177\u6709\u4e00\u4e2a\u521d\u59cb\u72b6\u6001\uff1a <code>1</code> \u5373\u4e3a \u6d3b\u7ec6\u80de \uff08live\uff09\uff0c\u6216 <code>0</code> \u5373\u4e3a \u6b7b\u7ec6\u80de \uff08dead\uff09\u3002\u6bcf\u4e2a\u7ec6\u80de\u4e0e\u5176\u516b\u4e2a\u76f8\u90bb\u4f4d\u7f6e\uff08\u6c34\u5e73\uff0c\u5782\u76f4\uff0c\u5bf9\u89d2\u7ebf\uff09\u7684\u7ec6\u80de\u90fd\u9075\u5faa\u4ee5\u4e0b\u56db\u6761\u751f\u5b58\u5b9a\u5f8b\uff1a</p> <ul> <li>\u5982\u679c\u6d3b\u7ec6\u80de\u5468\u56f4\u516b\u4e2a\u4f4d\u7f6e\u7684\u6d3b\u7ec6\u80de\u6570\u5c11\u4e8e\u4e24\u4e2a\uff0c\u5219\u8be5\u4f4d\u7f6e\u6d3b\u7ec6\u80de\u6b7b\u4ea1\uff1b</li> <li>\u5982\u679c\u6d3b\u7ec6\u80de\u5468\u56f4\u516b\u4e2a\u4f4d\u7f6e\u6709\u4e24\u4e2a\u6216\u4e09\u4e2a\u6d3b\u7ec6\u80de\uff0c\u5219\u8be5\u4f4d\u7f6e\u6d3b\u7ec6\u80de\u4ecd\u7136\u5b58\u6d3b\uff1b</li> <li>\u5982\u679c\u6d3b\u7ec6\u80de\u5468\u56f4\u516b\u4e2a\u4f4d\u7f6e\u6709\u8d85\u8fc7\u4e09\u4e2a\u6d3b\u7ec6\u80de\uff0c\u5219\u8be5\u4f4d\u7f6e\u6d3b\u7ec6\u80de\u6b7b\u4ea1\uff1b</li> <li>\u5982\u679c\u6b7b\u7ec6\u80de\u5468\u56f4\u6b63\u597d\u6709\u4e09\u4e2a\u6d3b\u7ec6\u80de\uff0c\u5219\u8be5\u4f4d\u7f6e\u6b7b\u7ec6\u80de\u590d\u6d3b\uff1b</li> </ul> <p>\u4e0b\u4e00\u4e2a\u72b6\u6001\u662f\u901a\u8fc7\u5c06\u4e0a\u8ff0\u89c4\u5219\u540c\u65f6\u5e94\u7528\u4e8e\u5f53\u524d\u72b6\u6001\u4e0b\u7684\u6bcf\u4e2a\u7ec6\u80de\u6240\u5f62\u6210\u7684\uff0c\u5176\u4e2d\u7ec6\u80de\u7684\u51fa\u751f\u548c\u6b7b\u4ea1\u662f \u540c\u65f6 \u53d1\u751f\u7684\u3002\u7ed9\u4f60 <code>m x n</code> \u7f51\u683c\u9762\u677f <code>board</code> \u7684\u5f53\u524d\u72b6\u6001\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002</p> <p>\u7ed9\u5b9a\u5f53\u524d <code>board</code> \u7684\u72b6\u6001\uff0c\u66f4\u65b0 <code>board</code> \u5230\u4e0b\u4e00\u4e2a\u72b6\u6001\u3002</p> <p>\u6ce8\u610f \u4f60\u4e0d\u9700\u8981\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <p>\u8f93\u5165\uff1aboard = [[0,1,0],[0,0,1],[1,1,1],[0,0,0]] \u8f93\u51fa\uff1a[[0,0,0],[1,0,1],[0,1,1],[0,1,0]]</p> <p>\u793a\u4f8b 2\uff1a</p> <p></p> <p>\u8f93\u5165\uff1aboard = [[1,1],[1,0]] \u8f93\u51fa\uff1a[[1,1],[1,1]]  </p>"},{"location":"lc/top-interview-150/38_289_%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/#_2","title":"\u9898\u89e3","text":"<p>\u904d\u5386\u7edf\u8ba1\u5373\u53ef\uff0c\u4e3a\u5b9e\u73b0\u539f\u5730\u4fee\u6539\uff0c\u65b0\u589e\u4e24\u4e2a\u72b6\u6001\u8bb0\u5f55\u7531\u751f\u5230\u6b7b\u548c\u7531\u6b7b\u5230\u751f\u3002</p>"},{"location":"lc/top-interview-150/38_289_%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>const kDie2Alive = 2\nconst kAlive2Die = 3\n\nfunc gameOfLife(board [][]int) {\n    var m, n = len(board), len(board[0])\n    for i := 0; i &lt; m; i++ {\n        for j := 0; j &lt; n; j++ {\n            alive, die := countAround(board, i, j)\n            board[i][j] = nextStatus(board[i][j], alive, die)\n        }\n    }\n    for i := 0; i &lt; m; i++ {\n        for j := 0; j &lt; n; j++ {\n            if board[i][j] == kAlive2Die {\n                board[i][j] = 0\n            } else if board[i][j] == kDie2Alive {\n                board[i][j] = 1\n            }\n        }\n    }\n}\n\nfunc nextStatus(cur, alive, die int) int {\n    if cur == 0 &amp;&amp; alive == 3 {\n        return kDie2Alive\n    }\n    if cur == 0 {\n        return 0\n    }\n\n    if alive &lt; 2 {\n        return kAlive2Die\n    }\n\n    if alive == 2 || alive == 3 {\n        return 1\n    }\n\n    if alive &gt; 3 {\n        return kAlive2Die\n    }\n    return -1\n}\n\nfunc countAround(board [][]int, i, j int) (alive, die int) {\n    around := [][]int{\n        {-1, -1},\n        {-1, 0},\n        {-1, 1},\n        {0, 1},\n        {1, 1},\n        {1, 0},\n        {1, -1},\n        {0, -1},\n    }\n\n    for _, v := range around {\n        x := i + v[0]\n        y := j + v[1]\n        if x &gt;= 0 &amp;&amp; x &lt; len(board) &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; len(board[0]) {\n            if board[x][y] == 0 || board[x][y] == 2 {\n                die++\n            } else {\n                alive++\n            }\n        }\n    }\n    return\n}\n</code></pre>"},{"location":"lc/top-interview-150/39_383_%E8%B5%8E%E9%87%91%E4%BF%A1/","title":"383. \u8d4e\u91d1\u4fe1","text":""},{"location":"lc/top-interview-150/39_383_%E8%B5%8E%E9%87%91%E4%BF%A1/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32\uff1a<code>ransomNote</code> \u548c <code>magazine</code>\uff0c\u5224\u65ad <code>ransomNote</code> \u80fd\u4e0d\u80fd\u7531 <code>magazine</code> \u91cc\u9762\u7684\u5b57\u7b26\u6784\u6210\u3002</p> <p>\u5982\u679c\u53ef\u4ee5\uff0c\u8fd4\u56de <code>true</code> \uff1b\u5426\u5219\u8fd4\u56de <code>false</code> \u3002</p> <p><code>magazine</code> \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u53ea\u80fd\u5728 <code>ransomNote</code> \u4e2d\u4f7f\u7528\u4e00\u6b21\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165\uff1aransomNote = \"a\", magazine = \"b\" \u8f93\u51fa\uff1afalse</p> <p>\u793a\u4f8b 2\uff1a</p> <p>\u8f93\u5165\uff1aransomNote = \"aa\", magazine = \"ab\" \u8f93\u51fa\uff1afalse</p> <p>\u793a\u4f8b 3\uff1a</p> <p>\u8f93\u5165\uff1aransomNote = \"aa\", magazine = \"aab\" \u8f93\u51fa\uff1atrue</p>"},{"location":"lc/top-interview-150/39_383_%E8%B5%8E%E9%87%91%E4%BF%A1/#_2","title":"\u9898\u89e3","text":"<p>\u8bb0\u5f55 <code>magazine</code> \u4e2d\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u7136\u540e\u904d\u5386 <code>ransomNote</code> \u4e2d\u7684\u6bcf\u4e2a\u5b57\u7b26\u3002</p> <ul> <li>\u82e5 <code>ransomNote</code> \u4e2d\u5bf9\u5e94\u7684\u5b57\u7b26\u51fa\u73b0\u6b21\u6570\u5927\u4e8e <code>magazine</code> \u4e2d\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5219\u8fd4\u56de <code>false</code>\u3002</li> <li>\u5426\u5219\uff0c\u8fd4\u56de <code>true</code>\u3002</li> </ul>"},{"location":"lc/top-interview-150/39_383_%E8%B5%8E%E9%87%91%E4%BF%A1/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func canConstruct(ransomNote string, magazine string) bool {\n    var dict = make([]int, 26)\n    for _, c := range ransomNote {\n        dict[c-'a']++\n    }\n\n    for _, c := range magazine {\n        dict[c-'a']--\n    }\n\n    for _, v := range dict {\n        if v &gt; 0 {\n            return false\n        }\n    }\n    return true\n}\n</code></pre>"},{"location":"lc/top-interview-150/3_26_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/","title":"26. \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879","text":""},{"location":"lc/top-interview-150/3_26_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a \u5347\u5e8f\u6392\u5217 \u7684\u6570\u7ec4 <code>nums</code> \uff0c\u8bf7\u4f60 \u539f\u5730 \u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u6bcf\u4e2a\u5143\u7d20 \u53ea\u51fa\u73b0\u4e00\u6b21 \uff0c\u8fd4\u56de\u5220\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002\u5143\u7d20\u7684 \u76f8\u5bf9\u987a\u5e8f \u5e94\u8be5\u4fdd\u6301 \u4e00\u81f4 \u3002</p> <p>\u7531\u4e8e\u5728\u67d0\u4e9b\u8bed\u8a00\u4e2d\u4e0d\u80fd\u6539\u53d8\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u6240\u4ee5\u5fc5\u987b\u5c06\u7ed3\u679c\u653e\u5728\u6570\u7ec4 <code>nums</code> \u7684\u7b2c\u4e00\u90e8\u5206\u3002\u66f4\u89c4\u8303\u5730\u8bf4\uff0c\u5982\u679c\u5728\u5220\u9664\u91cd\u590d\u9879\u4e4b\u540e\u6709 <code>k</code> \u4e2a\u5143\u7d20\uff0c\u90a3\u4e48 <code>nums</code> \u7684\u524d <code>k</code> \u4e2a\u5143\u7d20\u5e94\u8be5\u4fdd\u5b58\u6700\u7ec8\u7ed3\u679c\u3002</p> <p>\u5c06\u6700\u7ec8\u7ed3\u679c\u63d2\u5165 <code>nums</code> \u7684\u524d <code>k</code> \u4e2a\u4f4d\u7f6e\u540e\u8fd4\u56de <code>k</code> \u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728 \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u5e76\u5728\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002</p>"},{"location":"lc/top-interview-150/3_26_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u5feb\u6162\u6307\u9488\u5b9e\u73b0\u3002</p> <p>\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488 <code>fast</code> \u548c <code>slow</code> \uff0c <code>slow</code>\u6307\u9488\u7684\u4f4d\u7f6e\u8868\u793a\u5f53\u524d\u4e0d\u91cd\u590d\u7684\u6570\u7ec4\u7684\u957f\u5ea6\uff0c<code>fast</code>\u6307\u9488\u8868\u793a\u5f53\u524d\u904d\u5386\u7684\u4f4d\u7f6e\u3002\u4e24\u6307\u9488\u7684\u524d\u8fdb\u89c4\u5219\u4e3a\uff1a</p> <ul> <li><code>fast</code>\u6307\u9488\u6bcf\u6b21\u79fb\u52a8\u8df3\u8fc7\u91cd\u590d\u7684\u5143\u7d20\uff0c\u76f4\u5230\u627e\u5230\u4e0b\u4e00\u4e2a\u4e0d\u91cd\u590d\u7684\u5143\u7d20</li> <li><code>slow</code>\u6307\u9488\u6bcf\u6b21\u79fb\u52a8\u4e00\u6b65\uff0c\u5c06<code>fast</code>\u6307\u9488\u6307\u5411\u7684\u5143\u7d20\u590d\u5236\u5230<code>slow</code>\u6307\u9488\u7684\u4f4d\u7f6e</li> </ul>"},{"location":"lc/top-interview-150/3_26_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func removeDuplicates(nums []int) int {\n    var slow,fast = 0 ,0\n    for fast &lt; len(nums) {\n        nums[slow] = nums[fast]\n        fast = skip(nums,fast)\n        slow++\n    }\n    return slow\n}\n\nfunc skip(nums[]int,cur int) int {\n    val := nums[cur]\n    for cur &lt; len(nums)&amp;&amp;nums[cur] == val {\n        cur++\n    }\n    return cur\n} \n</code></pre>"},{"location":"lc/top-interview-150/40_205_%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"205. \u540c\u6784\u5b57\u7b26\u4e32","text":""},{"location":"lc/top-interview-150/40_205_%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \u548c <code>t</code> \uff0c\u5224\u65ad\u5b83\u4eec\u662f\u5426\u662f\u540c\u6784\u7684\u3002</p> <p>\u5982\u679c <code>s</code> \u4e2d\u7684\u5b57\u7b26\u53ef\u4ee5\u6309\u67d0\u79cd\u6620\u5c04\u5173\u7cfb\u66ff\u6362\u5f97\u5230 <code>t</code> \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\u662f\u540c\u6784\u7684\u3002</p> <p>\u6bcf\u4e2a\u51fa\u73b0\u7684\u5b57\u7b26\u90fd\u5e94\u5f53\u6620\u5c04\u5230\u53e6\u4e00\u4e2a\u5b57\u7b26\uff0c\u540c\u65f6\u4e0d\u6539\u53d8\u5b57\u7b26\u7684\u987a\u5e8f\u3002\u4e0d\u540c\u5b57\u7b26\u4e0d\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u76f8\u540c\u5b57\u7b26\u53ea\u80fd\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u5b57\u7b26\u4e0a\uff0c\u5b57\u7b26\u53ef\u4ee5\u6620\u5c04\u5230\u81ea\u5df1\u672c\u8eab\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165\uff1as = \"egg\", t = \"add\" \u8f93\u51fa\uff1atrue</p> <p>\u793a\u4f8b 2\uff1a</p> <p>\u8f93\u5165\uff1as = \"foo\", t = \"bar\" \u8f93\u51fa\uff1afalse   </p> <p>\u793a\u4f8b 3\uff1a</p> <p>\u8f93\u5165\uff1as = \"paper\", t = \"title\" \u8f93\u51fa\uff1atrue  </p>"},{"location":"lc/top-interview-150/40_205_%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/#_2","title":"\u9898\u89e3","text":"<p>\u8bb0\u5f55\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u6bcf\u4e2a\u5b57\u7b26\u7684\u53cc\u5411\u6620\u5c04\u5173\u7cfb\u3002</p>"},{"location":"lc/top-interview-150/40_205_%E5%90%8C%E6%9E%84%E5%AD%97%E7%AC%A6%E4%B8%B2/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func isIsomorphic(s string, t string) bool {\n    var s2t = map[byte]byte{}\n    var t2s = map[byte]byte{}\n\n    for idx,_ := range s {\n        a,ok1 := s2t[s[idx]]\n        b,ok2 := t2s[t[idx]]\n\n        if ok1 != ok2 {\n            return false\n        }\n\n        if !ok1 &amp;&amp; !ok2 {\n            s2t[s[idx]] = t[idx]\n            t2s[t[idx]] = s[idx]\n        } else if a != t[idx] || b != s[idx] {\n            return false\n        }\n    }\n    return true\n}\n</code></pre>"},{"location":"lc/top-interview-150/41_290_%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B/","title":"290. \u5355\u8bcd\u89c4\u5f8b","text":""},{"location":"lc/top-interview-150/41_290_%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u79cd\u89c4\u5f8b <code>pattern</code> \u548c\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>s</code> \uff0c\u5224\u65ad <code>s</code> \u662f\u5426\u9075\u5faa\u76f8\u540c\u7684\u89c4\u5f8b\u3002</p> <p>\u8fd9\u91cc\u7684 \u9075\u5faa \u6307\u5b8c\u5168\u5339\u914d\uff0c\u4f8b\u5982\uff0c <code>pattern</code> \u91cc\u7684\u6bcf\u4e2a\u5b57\u6bcd\u548c\u5b57\u7b26\u4e32 <code>s</code> \u4e2d\u7684\u6bcf\u4e2a\u975e\u7a7a\u5355\u8bcd\u4e4b\u95f4\u5b58\u5728\u7740\u53cc\u5411\u8fde\u63a5\u7684\u5bf9\u5e94\u89c4\u5f8b\u3002</p> <p>\u793a\u4f8b1:</p> <p>\u8f93\u5165: pattern = \"abba\", s = \"dog cat cat dog\" \u8f93\u51fa: true</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165:pattern = \"abba\", s = \"dog cat cat fish\" \u8f93\u51fa: false</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: pattern = \"aaaa\", s = \"dog cat cat dog\" \u8f93\u51fa: false</p>"},{"location":"lc/top-interview-150/41_290_%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B/#_2","title":"\u9898\u89e3","text":"<p>\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u7b26\u5bf9\u5e94\u7684\u5b57\u7b26\u4e32\uff0c\u4ee5\u53ca\u6bcf\u4e2a\u5b57\u7b26\u4e32\u5bf9\u5e94\u7684\u5b57\u7b26\u3002\u4ee5\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5bf9\u5e94\u5173\u7cfb\u4e3a\u51c6\uff0c\u82e5\u540e\u7eed\u51fa\u73b0\u5bf9\u5e94\u5173\u7cfb\u4e0d\u4e00\u81f4\uff0c\u8fd4\u56de false\u3002</p> <p>\u4e0d\u80fd\u53ea\u4f7f\u7528\u4e00\u4e2amap\uff0c\u56e0\u4e3a\u53ef\u80fd\u5b58\u5728\u591a\u5bf9\u4e00\u7684\u60c5\u51b5\uff0c\u4f8b\u5982\uff1a</p> <p>\u8f93\u5165: pattern = \"abba\", s = \"dog dog dog dog\" \u8f93\u51fa: false</p> <p>\u5982\u679c\u53ea\u8bb0\u5f55\u5b57\u7b26\u5230\u5b57\u7b26\u4e32\u7684\u6620\u5c04\uff0c\u5982\u4e0a\u60c5\u51b5\u662f\u4e0d\u6ee1\u8db3\u7684\u3002</p>"},{"location":"lc/top-interview-150/41_290_%E5%8D%95%E8%AF%8D%E8%A7%84%E5%BE%8B/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func wordPattern(pattern string, s string) bool {\n    words := strings.Split(s, \" \")\n\n    if len(pattern) != len(words) {\n        return false\n    }\n\n    s2b := make(map[string]byte)\n    b2s := make(map[byte]string)\n    n := len(words)\n\n    for i := 0; i &lt; n; i++ {\n        b, ok1 := s2b[words[i]]\n        s, ok2 := b2s[pattern[i]]\n\n        if ok1 != ok2 {\n            return false\n        }\n\n        if !ok1 &amp;&amp; !ok2 {\n            s2b[words[i]] = pattern[i]\n            b2s[pattern[i]] = words[i]\n        } else if words[i] != s || pattern[i] != b {\n            return false\n        }\n    }\n\n    return true\n}\n</code></pre>"},{"location":"lc/top-interview-150/42_242_%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/","title":"242. \u6709\u6548\u7684\u5b57\u6bcd\u5f02\u4f4d\u8bcd","text":""},{"location":"lc/top-interview-150/42_242_%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32 s \u548c t \uff0c\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad t \u662f\u5426\u662f s \u7684 \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: s = \"anagram\", t = \"nagaram\" \u8f93\u51fa: true</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: s = \"rat\", t = \"car\" \u8f93\u51fa: false</p>"},{"location":"lc/top-interview-150/42_242_%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/#_2","title":"\u9898\u89e3","text":"<ul> <li>\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5728\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u5b57\u7b26\u4e32\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\uff0c\u5224\u65ad\u662f\u5426\u76f8\u540c\u3002</li> <li>\u4f7f\u7528\u54c8\u5e0c\u8868\uff0c\u7edf\u8ba1\u6bcf\u4e2a\u5b57\u7b26\u7684\u51fa\u73b0\u6b21\u6570\uff0c\u5224\u65ad\u662f\u5426\u76f8\u540c\u3002</li> </ul>"},{"location":"lc/top-interview-150/42_242_%E6%9C%89%E6%95%88%E7%9A%84%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func isAnagram(s string, t string) bool {\n    var dict = make(map[byte]int)\n\n    if len(s) != len(t) {\n        return false\n    }\n\n    n := len(s)\n    for i := 0; i &lt; n; i++ {\n        dict[s[i]]++\n        dict[t[i]]--\n    }\n\n    for _, v := range dict {\n        if v != 0 {\n            return false\n        }\n    }\n    return true\n}\n</code></pre>"},{"location":"lc/top-interview-150/43_49_%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/","title":"49. \u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5206\u7ec4","text":""},{"location":"lc/top-interview-150/43_49_%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u7ec4\uff0c\u8bf7\u4f60\u5c06 \u5b57\u6bcd\u5f02\u4f4d\u8bcd \u7ec4\u5408\u5728\u4e00\u8d77\u3002\u53ef\u4ee5\u6309\u4efb\u610f\u987a\u5e8f\u8fd4\u56de\u7ed3\u679c\u5217\u8868\u3002</p> <p>\u793a\u4f8b 1:</p> <p>\u8f93\u5165: strs = [\"eat\", \"tea\", \"tan\", \"ate\", \"nat\", \"bat\"] \u8f93\u51fa: [[\"bat\"],[\"nat\",\"tan\"],[\"ate\",\"eat\",\"tea\"]] \u89e3\u91ca\uff1a - \u5728 strs \u4e2d\u6ca1\u6709\u5b57\u7b26\u4e32\u53ef\u4ee5\u901a\u8fc7\u91cd\u65b0\u6392\u5217\u6765\u5f62\u6210 \"bat\"\u3002 - \u5b57\u7b26\u4e32 \"nat\" \u548c \"tan\" \u662f\u5b57\u6bcd\u5f02\u4f4d\u8bcd\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\u4ee5\u5f62\u6210\u5f7c\u6b64\u3002 - \u5b57\u7b26\u4e32 \"ate\" \uff0c\"eat\" \u548c \"tea\" \u662f\u5b57\u6bcd\u5f02\u4f4d\u8bcd\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u91cd\u65b0\u6392\u5217\u4ee5\u5f62\u6210\u5f7c\u6b64\u3002</p> <p>\u793a\u4f8b 2:</p> <p>\u8f93\u5165: strs = [\"\"] \u8f93\u51fa: [[\"\"]]</p> <p>\u793a\u4f8b 3:</p> <p>\u8f93\u5165: strs = [\"a\"] \u8f93\u51fa: [[\"a\"]]</p>"},{"location":"lc/top-interview-150/43_49_%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/#_2","title":"\u9898\u89e3","text":"<p>\u5b57\u6bcd\u5f02\u4f4d\u8bcd\u5728\u6309\u5b57\u5178\u5e8f\u6392\u5e8f\u540e\u662f\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6392\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\u4f5c\u4e3a\u952e\uff0c\u5c06\u539f\u5b57\u7b26\u4e32\u4f5c\u4e3a\u503c\uff0c\u8fdb\u884c\u6620\u5c04\u3002</p>"},{"location":"lc/top-interview-150/43_49_%E5%AD%97%E6%AF%8D%E5%BC%82%E4%BD%8D%E8%AF%8D%E5%88%86%E7%BB%84/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func groupAnagrams(strs []string) [][]string {\n    dict := make(map[string][]int)\n    for idx, s := range strs {\n        t := []byte(s)\n        sort.Slice(t, func(i, j int) bool {\n            return t[i] &lt; t[j]\n        })\n\n        dict[string(t)] = append(dict[string(t)], idx)\n    }\n\n    ans := make([][]string, 0)\n    for _, indic := range dict {\n        var tmp []string\n        for _, idx := range indic {\n            tmp = append(tmp, strs[idx])\n        }\n        ans = append(ans, tmp)\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/44_1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/","title":"1. \u4e24\u6570\u4e4b\u548c","text":""},{"location":"lc/top-interview-150/44_1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/#_1","title":"\u9898\u76ee","text":""},{"location":"lc/top-interview-150/45_202_%E5%BF%AB%E4%B9%90%E6%95%B0/","title":"202. \u5feb\u4e50\u6570","text":""},{"location":"lc/top-interview-150/45_202_%E5%BF%AB%E4%B9%90%E6%95%B0/#_1","title":"\u9898\u76ee","text":"<p>\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u6765\u5224\u65ad\u4e00\u4e2a\u6570 <code>n</code> \u662f\u4e0d\u662f\u5feb\u4e50\u6570\u3002</p> <p>\u300c\u5feb\u4e50\u6570\u300d \u5b9a\u4e49\u4e3a\uff1a</p> <ul> <li>\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570\uff0c\u6bcf\u4e00\u6b21\u5c06\u8be5\u6570\u66ff\u6362\u4e3a\u5b83\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u6570\u5b57\u7684\u5e73\u65b9\u548c\u3002</li> <li>\u7136\u540e\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b\u76f4\u5230\u8fd9\u4e2a\u6570\u53d8\u4e3a 1\uff0c\u4e5f\u53ef\u80fd\u662f \u65e0\u9650\u5faa\u73af \u4f46\u59cb\u7ec8\u53d8\u4e0d\u5230 1\u3002</li> <li>\u5982\u679c\u8fd9\u4e2a\u8fc7\u7a0b \u7ed3\u679c\u4e3a 1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6570\u5c31\u662f\u5feb\u4e50\u6570\u3002</li> </ul> <p>\u5982\u679c <code>n</code> \u662f \u5feb\u4e50\u6570 \u5c31\u8fd4\u56de <code>true</code> \uff1b\u4e0d\u662f\uff0c\u5219\u8fd4\u56de <code>false</code> \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165\uff1an = 19 \u8f93\u51fa\uff1atrue \u89e3\u91ca\uff1a 12 + 92 = 82 82 + 22 = 68 62 + 82 = 100 12 + 02 + 02 = 1</p> <p>\u793a\u4f8b 2\uff1a</p> <p>\u8f93\u5165\uff1an = 2 \u8f93\u51fa\uff1afalse</p>"},{"location":"lc/top-interview-150/45_202_%E5%BF%AB%E4%B9%90%E6%95%B0/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/45_202_%E5%BF%AB%E4%B9%90%E6%95%B0/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func isHappy(n int) bool {\n    m := make(map[int]bool)\n    for n != 1 &amp;&amp; !m[n] {\n        m[n] = true\n        n = sumOfSquares(n)\n    }\n    return n == 1\n}\n\nfunc sumOfSquares(n int) int {\n    sum := 0\n    for n &gt; 0 {\n        digit := n % 10\n        sum += digit * digit\n        n /= 10\n    }\n    return sum\n}\n</code></pre>"},{"location":"lc/top-interview-150/46_219_%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/","title":"219. \u5b58\u5728\u91cd\u590d\u5143\u7d20 II","text":""},{"location":"lc/top-interview-150/46_219_%E5%AD%98%E5%9C%A8%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0%20II/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \uff0c\u5224\u65ad\u6570\u7ec4\u4e2d\u662f\u5426\u5b58\u5728\u4e24\u4e2a \u4e0d\u540c\u7684\u7d22\u5f15 i \u548c j \uff0c\u6ee1\u8db3 nums[i] == nums[j] \u4e14 abs(i - j) &lt;= k \u3002\u5982\u679c\u5b58\u5728\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165\uff1anums = [1,2,3,1], k = 3 \u8f93\u51fa\uff1atrue \u793a\u4f8b 2\uff1a</p> <p>\u8f93\u5165\uff1anums = [1,0,1,1], k = 1 \u8f93\u51fa\uff1atrue \u793a\u4f8b 3\uff1a</p> <p>\u8f93\u5165\uff1anums = [1,2,3,1,2,3], k = 2 \u8f93\u51fa\uff1afalse</p>"},{"location":"lc/top-interview-150/47_128_%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/","title":"128. \u6700\u957f\u8fde\u7eed\u5e8f\u5217","text":""},{"location":"lc/top-interview-150/47_128_%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u672a\u6392\u5e8f\u7684\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u627e\u51fa\u6570\u5b57\u8fde\u7eed\u7684\u6700\u957f\u5e8f\u5217\uff08\u4e0d\u8981\u6c42\u5e8f\u5217\u5143\u7d20\u5728\u539f\u6570\u7ec4\u4e2d\u8fde\u7eed\uff09\u7684\u957f\u5ea6\u3002</p> <p>\u8bf7\u4f60\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a <code>O(n)</code> \u7684\u7b97\u6cd5\u89e3\u51b3\u6b64\u95ee\u9898\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165\uff1anums = [100,4,200,1,3,2] \u8f93\u51fa\uff1a4 \u89e3\u91ca\uff1a\u6700\u957f\u6570\u5b57\u8fde\u7eed\u5e8f\u5217\u662f [1, 2, 3, 4]\u3002\u5b83\u7684\u957f\u5ea6\u4e3a 4\u3002</p> <p>\u793a\u4f8b 2\uff1a</p> <p>\u8f93\u5165\uff1anums = [0,3,7,2,5,8,4,6,0,1] \u8f93\u51fa\uff1a9</p> <p>\u793a\u4f8b 3\uff1a</p> <p>\u8f93\u5165\uff1anums = [1,0,1,2] \u8f93\u51fa\uff1a3</p>"},{"location":"lc/top-interview-150/47_128_%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/47_128_%E6%9C%80%E9%95%BF%E8%BF%9E%E7%BB%AD%E5%BA%8F%E5%88%97/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func longestConsecutive(nums []int) int {\n    var dict = make(map[int]struct{})\n    var ans = 0\n\n    for _, val := range nums {\n        dict[val] = struct{}{}\n    }\n\n    for k, _ := range dict {\n        if _, ok := dict[k-1]; ok {\n            continue\n        }\n\n        var tmp = 0\n        for {\n            _, ok := dict[k]\n            if ok {\n                tmp++\n                k++\n            } else {\n                break\n            }\n        }\n        ans = max(tmp, ans)\n    }\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/48_228.%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/","title":"228. \u6c47\u603b\u533a\u95f4","text":""},{"location":"lc/top-interview-150/48_228.%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a  \u65e0\u91cd\u590d\u5143\u7d20 \u7684 \u6709\u5e8f \u6574\u6570\u6570\u7ec4 <code>nums</code> \u3002</p> <p>\u533a\u95f4 <code>[a,b]</code> \u662f\u4ece <code>a</code> \u5230 <code>b</code>\uff08\u5305\u542b\uff09\u7684\u6240\u6709\u6574\u6570\u7684\u96c6\u5408\u3002</p> <p>\u8fd4\u56de \u6070\u597d\u8986\u76d6\u6570\u7ec4\u4e2d\u6240\u6709\u6570\u5b57 \u7684 \u6700\u5c0f\u6709\u5e8f \u533a\u95f4\u8303\u56f4\u5217\u8868 \u3002\u4e5f\u5c31\u662f\u8bf4\uff0c<code>nums</code> \u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u6070\u597d\u88ab\u67d0\u4e2a\u533a\u95f4\u8303\u56f4\u6240\u8986\u76d6\uff0c\u5e76\u4e14\u4e0d\u5b58\u5728\u5c5e\u4e8e\u67d0\u4e2a\u533a\u95f4\u4f46\u4e0d\u5c5e\u4e8e <code>nums</code> \u7684\u6570\u5b57 <code>x</code> \u3002</p> <p>\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a\u533a\u95f4\u8303\u56f4 <code>[a,b]</code> \u5e94\u8be5\u6309\u5982\u4e0b\u683c\u5f0f\u8f93\u51fa\uff1a</p> <ul> <li><code>\"a-&gt;b\"</code> \uff0c\u5982\u679c <code>a != b</code></li> <li><code>\"a\"</code> \uff0c\u5982\u679c <code>a == b</code></li> </ul>"},{"location":"lc/top-interview-150/48_228.%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/48_228.%20%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func summaryRanges(nums []int) []string {\n    left,right := 0,0\n    var ans []string\n\n    for right &lt; len(nums) {\n        for right + 1 &lt; len(nums) &amp;&amp; nums[right+1] == nums[right] + 1 {\n            right++\n        }\n        if left == right {\n            ans = append(ans, fmt.Sprintf(\"%d\", nums[left]))\n        } else {\n            ans = append(ans, fmt.Sprintf(\"%d-&gt;%d\", nums[left], nums[right]))\n        }\n        left = right + 1\n        right = left\n    }\n\n    return ans\n}\n</code></pre>"},{"location":"lc/top-interview-150/49/","title":"56. \u5408\u5e76\u533a\u95f4","text":"<p>\u4ee5\u6570\u7ec4 intervals \u8868\u793a\u82e5\u5e72\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u5355\u4e2a\u533a\u95f4\u4e3a intervals[i] = [starti, endi] \u3002\u8bf7\u4f60\u5408\u5e76\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\uff0c\u5e76\u8fd4\u56de \u4e00\u4e2a\u4e0d\u91cd\u53e0\u7684\u533a\u95f4\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u9700\u6070\u597d\u8986\u76d6\u8f93\u5165\u4e2d\u7684\u6240\u6709\u533a\u95f4 \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p>\u8f93\u5165\uff1aintervals = [[1,3],[2,6],[8,10],[15,18]] \u8f93\u51fa\uff1a[[1,6],[8,10],[15,18]] \u89e3\u91ca\uff1a\u533a\u95f4 [1,3] \u548c [2,6] \u91cd\u53e0, \u5c06\u5b83\u4eec\u5408\u5e76\u4e3a [1,6]. \u793a\u4f8b 2\uff1a</p> <p>\u8f93\u5165\uff1aintervals = [[1,4],[4,5]] \u8f93\u51fa\uff1a[[1,5]] \u89e3\u91ca\uff1a\u533a\u95f4 [1,4] \u548c [4,5] \u53ef\u88ab\u89c6\u4e3a\u91cd\u53e0\u533a\u95f4\u3002</p>"},{"location":"lc/top-interview-150/4_80_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II/","title":"80. \u5220\u9664\u6709\u5e8f\u6570\u7ec4\u4e2d\u7684\u91cd\u590d\u9879 II","text":""},{"location":"lc/top-interview-150/4_80_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4 <code>nums</code> \uff0c\u8bf7\u4f60 \u539f\u5730 \u5220\u9664\u91cd\u590d\u51fa\u73b0\u7684\u5143\u7d20\uff0c\u4f7f\u6bcf\u4e2a\u5143\u7d20 \u6700\u591a\u51fa\u73b0\u4e24\u6b21 \uff0c\u8fd4\u56de\u5220\u9664\u540e\u6570\u7ec4\u7684\u65b0\u957f\u5ea6\u3002</p> <p>\u4e0d\u8981\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u4f60\u5fc5\u987b\u5728 \u539f\u5730 \u4fee\u6539\u8f93\u5165\u6570\u7ec4 \u5e76\u5728\u4f7f\u7528 O(1) \u989d\u5916\u7a7a\u95f4\u7684\u6761\u4ef6\u4e0b\u5b8c\u6210\u3002</p>"},{"location":"lc/top-interview-150/4_80_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II/#_2","title":"\u9898\u89e3","text":"<p>\u4f7f\u7528\u5feb\u6162\u6307\u9488\u5b9e\u73b0\u3002</p> <p>\u5b9a\u4e49\u4e24\u4e2a\u6307\u9488 <code>fast</code> \u548c <code>slow</code> \uff0c <code>slow</code>\u6307\u9488\u7684\u4f4d\u7f6e\u8868\u793a\u5f53\u524d\u4e0d\u91cd\u590d\u7684\u6570\u7ec4\u7684\u957f\u5ea6\uff0c<code>fast</code>\u6307\u9488\u8868\u793a\u5f53\u524d\u904d\u5386\u7684\u4f4d\u7f6e\u3002</p> <p><code>fast</code>\u6bcf\u6b21\u524d\u8fdb\u8df3\u8fc7\u6240\u6709\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5e76\u7edf\u8ba1\u76f8\u540c\u5143\u7d20\u7684\u4e2a\u6570<code>cnt</code>\uff0c\u5bf9<code>cnt</code>\u505a\u5982\u4e0b\u5224\u65ad\uff1a</p> <ul> <li> <p>\u5982\u679c<code>cnt</code>\u5927\u4e8e2\uff0c\u5219<code>slow</code>\u524d\u8fdb\u4e24\u6b65\uff0c\u503c\u90fd\u4e3a\u5f53\u524d<code>fast</code>\u6307\u5411\u7684\u503c\u3002</p> </li> <li> <p>\u5982\u679c<code>cnt</code>\u5c0f\u4e8e2\uff0c\u5219<code>slow</code>\u524d\u8fdb\u4e00\u6b65\uff0c\u503c\u4e3a\u5f53\u524d<code>fast</code>\u6307\u5411\u7684\u503c\u3002</p> </li> </ul> <p>\u6700\u540e\u8fd4\u56de<code>slow</code>\u5373\u53ef\u3002</p>"},{"location":"lc/top-interview-150/4_80_%E5%88%A0%E9%99%A4%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%87%8D%E5%A4%8D%E9%A1%B9%20II/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func removeDuplicates(nums []int) int {\n    var slow,fast int\n    for fast &lt; len(nums) {\n        cur,cnt := nums[fast],0\n        for fast &lt; len(nums) &amp;&amp; nums[fast] == cur {\n            cnt++\n            fast++\n        }\n\n        if cnt &gt;= 2 {\n            nums[slow] = cur\n            slow++\n            nums[slow] = cur\n            slow++\n        } else {\n            nums[slow] = cur\n            slow++\n        }\n    }\n    return slow\n}\n</code></pre>"},{"location":"lc/top-interview-150/5_169_%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/","title":"169.\u591a\u6570\u5143\u7d20","text":""},{"location":"lc/top-interview-150/5_169_%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u5927\u5c0f\u4e3a <code>n</code> \u7684\u6570\u7ec4 <code>nums</code> \uff0c\u8fd4\u56de\u5176\u4e2d\u7684\u591a\u6570\u5143\u7d20\u3002\u591a\u6570\u5143\u7d20\u662f\u6307\u5728\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570 \u5927\u4e8e <code>\u230a n/2 \u230b</code> \u7684\u5143\u7d20\u3002</p> <p>\u4f60\u53ef\u4ee5\u5047\u8bbe\u6570\u7ec4\u662f\u975e\u7a7a\u7684\uff0c\u5e76\u4e14\u7ed9\u5b9a\u7684\u6570\u7ec4\u603b\u662f\u5b58\u5728\u591a\u6570\u5143\u7d20\u3002</p>"},{"location":"lc/top-interview-150/5_169_%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/5_169_%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/#_3","title":"\u6469\u5c14\u6295\u7968\u6cd5","text":"<p>\u6469\u5c14\u6295\u7968\u6cd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff1a\u5728\u4efb\u610f\u591a\u7684\u5019\u9009\u4eba\u4e2d\uff0c\u9009\u51fa\u7968\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u5019\u9009\u4eba\u3002</p> <p>\u7b97\u6cd5\u7684\u6b65\u9aa4\u5982\u4e0b\uff1a</p> <ol> <li>\u521d\u59cb\u5316\u5019\u9009\u4eba <code>candidate</code> \u548c\u7968\u6570 <code>count</code> \u4e3a <code>0</code>\u3002</li> <li> <p>\u904d\u5386\u6570\u7ec4 <code>nums</code>\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5143\u7d20 <code>num</code>\uff1a</p> <ul> <li>\u5982\u679c <code>count</code> \u4e3a <code>0</code>\uff0c\u5219\u5c06 <code>candidate</code> \u8bbe\u7f6e\u4e3a\u5f53\u524d\u5143\u7d20 <code>num</code>\u3002</li> <li>\u5982\u679c <code>candidate</code> \u7b49\u4e8e\u5f53\u524d\u5143\u7d20 <code>num</code>\uff0c\u5219\u5c06 <code>count</code> \u52a0 <code>1</code>\u3002</li> <li>\u5982\u679c <code>candidate</code> \u4e0d\u7b49\u4e8e\u5f53\u524d\u5143\u7d20 <code>num</code>\uff0c\u5219\u5c06 <code>count</code> \u51cf <code>1</code>\u3002</li> </ul> </li> <li> <p>\u904d\u5386\u7ed3\u675f\u540e\uff0c<code>candidate</code> \u5373\u4e3a\u6240\u6c42\u7684\u591a\u6570\u5143\u7d20\u3002</p> </li> </ol>"},{"location":"lc/top-interview-150/5_169_%E5%A4%9A%E6%95%B0%E5%85%83%E7%B4%A0/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func majorityElement(nums []int) int {\n    var candidate,count = 0,0\n    for _,num := range nums {\n        if count == 0 {\n            candidate = num\n            count = 1\n        } else if candidate == num {\n            count++\n        } else {\n            count--\n        }\n    }\n    return candidate\n}\n</code></pre>"},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/","title":"189.\u8f6e\u8f6c\u6570\u7ec4","text":""},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4\uff0c\u5c06\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5411\u53f3\u8f6e\u8f6c <code>k</code> \u4e2a\u4f4d\u7f6e\uff0c\u5176\u4e2d <code>k</code> \u662f\u975e\u8d1f\u6570\u3002</p> \u793a\u4f8b 1\u793a\u4f8b 2 <pre><code>\u8f93\u5165: nums = [1,2,3,4,5,6,7], k = 3          \n\u8f93\u51fa: [5,6,7,1,2,3,4]  \n\u89e3\u91ca:  \n\u5411\u53f3\u8f6e\u8f6c 1 \u6b65: [7,1,2,3,4,5,6]  \n\u5411\u53f3\u8f6e\u8f6c 2 \u6b65: [6,7,1,2,3,4,5]  \n\u5411\u53f3\u8f6e\u8f6c 3 \u6b65: [5,6,7,1,2,3,4]  \n</code></pre> <pre><code>\u8f93\u5165\uff1anums = [-1,-100,3,99], k = 2  \n\u8f93\u51fa\uff1a[3,99,-1,-100]  \n\u89e3\u91ca:   \n\u5411\u53f3\u8f6e\u8f6c 1 \u6b65: [99,-1,-100,3]  \n\u5411\u53f3\u8f6e\u8f6c 2 \u6b65: [3,99,-1,-100] \n</code></pre>"},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#_3","title":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4\u6765\u5c06\u6bcf\u4e2a\u5143\u7d20\u653e\u5230\u6b63\u786e\u7684\u4f4d\u7f6e\u3002\u7528 <code>n</code> \u8868\u793a\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u6211\u4eec\u904d\u5386\u539f\u6570\u7ec4\uff0c\u5c06\u539f\u6570\u7ec4\u4e0b\u6807\u4e3a <code>i</code> \u7684\u5143\u7d20\u653e\u5230\u65b0\u6570\u7ec4\u4e0b\u6807\u4e3a <code>(i+k)\\%n</code> \u7684\u4f4d\u7f6e\uff0c\u6700\u540e\u5c06\u65b0\u6570\u7ec4\u62f7\u8d1d\u5230\u539f\u6570\u7ec4\u5373\u53ef\u3002</p>"},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#_4","title":"\u65b9\u6cd5\u4e8c\uff1a\u6570\u7ec4\u7ffb\u8f6c","text":"<p>\u8be5\u65b9\u6cd5\u57fa\u4e8e\u5982\u4e0b\u7684\u4e8b\u5b9e\uff1a\u5f53\u6211\u4eec\u5c06\u6570\u7ec4\u7684\u5143\u7d20\u5411\u53f3\u79fb\u52a8 <code>k</code> \u6b21\u540e\uff0c\u5c3e\u90e8 <code>k mod n</code> \u4e2a\u5143\u7d20\u4f1a\u79fb\u52a8\u81f3\u6570\u7ec4\u5934\u90e8\uff0c\u5176\u4f59\u5143\u7d20\u5411\u540e\u79fb\u52a8 <code>k mod n</code> \u4e2a\u4f4d\u7f6e\u3002</p> <p>\u5b9e\u73b0\u6d41\u7a0b\u4e3a\uff1a</p> <ol> <li>\u5148\u5c06\u6240\u6709\u5143\u7d20\u7ffb\u8f6c\uff0c\u8fd9\u6837\u5c3e\u90e8\u7684 <code>k mod n</code> \u4e2a\u5143\u7d20\u5c31\u88ab\u79fb\u81f3\u6570\u7ec4\u5934\u90e8\u3002</li> <li>\u518d\u5c06\u524d <code>k mod n</code> \u4e2a\u5143\u7d20\u7ffb\u8f6c\uff0c\u540e <code>n-k mod n</code> \u4e2a\u5143\u7d20\u7ffb\u8f6c\uff0c\u5373\u5b8c\u6210\u4e86\u5411\u53f3\u8f6e\u8f6c <code>k</code> \u4e2a\u4f4d\u7f6e\u7684\u8981\u6c42\u3002</li> </ol>"},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#_5","title":"\u4ee3\u7801","text":""},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#_6","title":"\u65b9\u6cd5\u4e00\uff1a\u4f7f\u7528\u989d\u5916\u7684\u6570\u7ec4","text":"Go <pre><code>func rotate(nums []int, k int) {\n    n := len(nums)\n    k %= n\n    newNums := make([]int,n)\n    for i,num := range nums {\n        newNums[(i+k)%n] = num\n    }\n    copy(nums,newNums)\n}\n</code></pre>"},{"location":"lc/top-interview-150/6_189_%E8%BD%AE%E8%BD%AC%E6%95%B0%E7%BB%84/#_7","title":"\u65b9\u6cd5\u4e8c\uff1a\u6570\u7ec4\u7ffb\u8f6c","text":"Go <pre><code>func rotate(nums []int, k int) {\n    n := len(nums)\n    k %= n\n    reverse(nums)\n    reverse(nums[:k])\n    reverse(nums[k:])\n}\n\nfunc reverse(a []int) {\n    for i, n := 0, len(a); i &lt; n/2; i++ {\n        a[i], a[n-1-i] = a[n-1-i], a[i]\n    }\n}\n</code></pre>"},{"location":"lc/top-interview-150/7_121_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/","title":"121.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a","text":""},{"location":"lc/top-interview-150/7_121_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4 prices \uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20 prices[i] \u8868\u793a\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002</p> <p>\u4f60\u53ea\u80fd\u9009\u62e9 \u67d0\u4e00\u5929 \u4e70\u5165\u8fd9\u53ea\u80a1\u7968\uff0c\u5e76\u9009\u62e9\u5728 \u672a\u6765\u7684\u67d0\u4e00\u4e2a\u4e0d\u540c\u7684\u65e5\u5b50 \u5356\u51fa\u8be5\u80a1\u7968\u3002\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002</p> <p>\u8fd4\u56de\u4f60\u53ef\u4ee5\u4ece\u8fd9\u7b14\u4ea4\u6613\u4e2d\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u5982\u679c\u4f60\u4e0d\u80fd\u83b7\u53d6\u4efb\u4f55\u5229\u6da6\uff0c\u8fd4\u56de 0 \u3002</p>"},{"location":"lc/top-interview-150/7_121_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/7_121_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/#_3","title":"\u8d2a\u5fc3","text":"<p>\u6211\u4eec\u53ef\u4ee5\u904d\u5386\u6570\u7ec4\uff0c\u8bb0\u5f55\u5f53\u524d\u7684\u6700\u5c0f\u503c\uff0c\u4ee5\u53ca\u5f53\u524d\u7684\u6700\u5927\u5229\u6da6\u3002</p> <p>\u5f53\u524d\u7684\u6700\u5927\u5229\u6da6\u4e3a\u5f53\u524d\u7684\u4ef7\u683c\u51cf\u53bb\u5f53\u524d\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u5f53\u524d\u7684\u6700\u5c0f\u503c\u4e3a\u5f53\u524d\u7684\u6700\u5c0f\u503c\u548c\u5f53\u524d\u7684\u4ef7\u683c\u7684\u6700\u5c0f\u503c\u3002</p>"},{"location":"lc/top-interview-150/7_121_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func maxProfit(prices []int) int {\n    minPrice := prices[0]\n    maxProfit := 0\n    for _, price := range prices {\n        if price &lt; minPrice {\n            minPrice = price\n        } else if price - minPrice &gt; maxProfit {\n            maxProfit = price - minPrice\n        }\n    }\n    return maxProfit\n}\n</code></pre>"},{"location":"lc/top-interview-150/8_122_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20II/","title":"122. \u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II","text":""},{"location":"lc/top-interview-150/8_122_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20II/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 prices \uff0c\u5176\u4e2d prices[i] \u8868\u793a\u67d0\u652f\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002</p> <p>\u5728\u6bcf\u4e00\u5929\uff0c\u4f60\u53ef\u4ee5\u51b3\u5b9a\u662f\u5426\u8d2d\u4e70\u548c/\u6216\u51fa\u552e\u80a1\u7968\u3002\u4f60\u5728\u4efb\u4f55\u65f6\u5019 \u6700\u591a \u53ea\u80fd\u6301\u6709 \u4e00\u80a1 \u80a1\u7968\u3002\u4f60\u4e5f\u53ef\u4ee5\u5148\u8d2d\u4e70\uff0c\u7136\u540e\u5728 \u540c\u4e00\u5929 \u51fa\u552e\u3002</p> <p>\u8fd4\u56de \u4f60\u80fd\u83b7\u5f97\u7684 \u6700\u5927 \u5229\u6da6 \u3002</p>"},{"location":"lc/top-interview-150/8_122_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20II/#_2","title":"\u9898\u89e3","text":""},{"location":"lc/top-interview-150/8_122_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20II/#_3","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u52a8\u6001\u89c4\u5212\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49 dp[i][0] \u8868\u793a\u7b2c i \u5929\u4e0d\u6301\u6709\u80a1\u7968\u7684\u6700\u5927\u5229\u6da6\uff0cdp[i][1] \u8868\u793a\u7b2c i \u5929\u6301\u6709\u80a1\u7968\u7684\u6700\u5927\u5229\u6da6\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <pre><code>dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] + prices[i])\ndp[i][1] = max(dp[i - 1][1], dp[i - 1][0] - prices[i])\n</code></pre> <p>\u8d77\u59cb\u6761\u4ef6\uff1a <pre><code>dp[0][0] = 0\ndp[0][1] = -prices[0]\n</code></pre></p>"},{"location":"lc/top-interview-150/8_122_%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%20II/#_4","title":"\u4ee3\u7801","text":"Go <pre><code>func maxProfit(prices []int) int {\n    n := len(prices)\n    dp := make([][2]int, n)\n    dp[0][0] = 0\n    dp[0][1] = -prices[0]\n    for i := 1; i &lt; n; i++ {\n        dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] + prices[i])\n        dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] - prices[i])\n    }\n    return dp[n - 1][0]\n}\n</code></pre>"},{"location":"lc/top-interview-150/9_55_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/","title":"55. \u8df3\u8dc3\u6e38\u620f","text":""},{"location":"lc/top-interview-150/9_55_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/#_1","title":"\u9898\u76ee","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 <code>nums</code> \uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684 \u7b2c\u4e00\u4e2a\u4e0b\u6807 \u3002</p> <p>\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002</p> <p>\u5224\u65ad\u4f60\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\u3002</p>"},{"location":"lc/top-interview-150/9_55_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/#_2","title":"\u9898\u89e3","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u8d2a\u5fc3\u7684\u65b9\u6cd5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u53d8\u91cf <code>maxPos</code> \uff0c\u8868\u793a\u5f53\u524d\u80fd\u591f\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\u3002</p> <p>\u6211\u4eec\u904d\u5386\u6570\u7ec4\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u4f4d\u7f6e <code>i</code> \uff0c\u6211\u4eec\u8ba1\u7b97 <code>maxPos</code> \u548c <code>i + nums[i]</code>(\u5f53\u524d\u4f4d\u7f6e\u80fd\u591f\u5230\u8fbe\u7684\u6700\u8fdc\u4f4d\u7f6e\u7684\u4e0b\u6807) \u7684\u8f83\u5927\u503c\uff0c\u66f4\u65b0 <code>maxPos</code> \u3002</p> <p>\u5982\u679c <code>maxPos</code> \u5927\u4e8e\u7b49\u4e8e\u6570\u7ec4\u7684\u957f\u5ea6\uff0c\u8bf4\u660e\u6211\u4eec\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4e0b\u6807\uff0c\u8fd4\u56de <code>true</code> \u3002</p> <p>\u5982\u679c <code>maxPos</code> \u5c0f\u4e8e <code>i</code> \uff0c\u8bf4\u660e\u6211\u4eec\u4e0d\u80fd\u5230\u8fbe\u5f53\u524d\u4f4d\u7f6e\uff0c\u8fd4\u56de <code>false</code> \u3002</p>"},{"location":"lc/top-interview-150/9_55_%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/#_3","title":"\u4ee3\u7801","text":"Go <pre><code>func canJump(nums []int) bool {\n    maxPos := 0\n    for i := 0; i &lt; len(nums); i++ {\n        if maxPos &gt;= len(nums) - 1 {\n            return true\n        }\n        if maxPos &lt; i {\n            return false\n        }\n        maxPos = max(maxPos, i + nums[i])\n    }\n    return false\n}\n</code></pre>"},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/go/","title":"Go","text":""},{"location":"blog/category/minio/","title":"MinIO","text":""},{"location":"blog/category/linux/","title":"Linux","text":""},{"location":"blog/category/kubernetes/","title":"Kubernetes","text":""},{"location":"blog/category/c/","title":"C++","text":""},{"location":"blog/page/2/","title":"\u7b14\u8bb0","text":""},{"location":"blog/archive/2025/page/2/","title":"2025","text":""}]}